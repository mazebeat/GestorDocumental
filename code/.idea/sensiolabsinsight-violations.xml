<?xml version="1.0" encoding="UTF-8"?>
<analysis>
  <link href="https://insight.sensiolabs.com/api/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3" rel="self" type="application/vnd.com.sensiolabs.insight+xml"/>
  <link href="https://insight.sensiolabs.com/api/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3/status" rel="status" type="application/vnd.com.sensiolabs.insight+xml"/>
  <link href="https://insight.sensiolabs.com/api/projects/34933eab-378d-4c77-9444-5130b1dd04ae" rel="project" type="application/vnd.com.sensiolabs.insight+xml"/>
  <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3" rel="self" type="text/html"/>
  <status><![CDATA[finished]]></status>
  <violations>
    <violation severity="info" category="codestyle">
      <line>1</line>
      <resource><![CDATA[code/app/database/debug.sqlite]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="1"><![CDATA[** This file contains an SQLite 2.1 database **]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189392098" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>1</line>
      <resource><![CDATA[code/app/database/dev.sqlite]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="1"><![CDATA[SQLite format 3]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391727" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>3</line>
      <resource><![CDATA[code/app/start/local.php]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="3"><![CDATA[<?php

    //]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391396" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>2</line>
      <resource><![CDATA[code/app/storage/cache/.gitignore]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="2"><![CDATA[*
!.gitignore]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392114" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>2</line>
      <resource><![CDATA[code/app/storage/debugbar/.gitignore]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="2"><![CDATA[*
!.gitignore]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391351" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>1</line>
      <resource><![CDATA[code/app/storage/.gitignore]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="1"><![CDATA[services.manifest]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391387" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>2</line>
      <resource><![CDATA[code/app/storage/logs/.gitignore]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="2"><![CDATA[*
!.gitignore]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392024" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>2</line>
      <resource><![CDATA[code/app/storage/meta/.gitignore]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="2"><![CDATA[*
!.gitignore]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391283" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>2</line>
      <resource><![CDATA[code/app/storage/sessions/.gitignore]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="2"><![CDATA[*
!.gitignore]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391867" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>2</line>
      <resource><![CDATA[code/app/storage/views/.gitignore]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="2"><![CDATA[*
!.gitignore]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391923" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>146</line>
      <resource><![CDATA[code/app/views/admin/busqueda.blade.php]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="141" end-line="146"><![CDATA[@endsection

@section('text-script')
<script>
</script>
@endsection]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391603" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>237</line>
      <resource><![CDATA[code/app/views/admin/carpeta.blade.php]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="232" end-line="237"><![CDATA[	});

	jQuery("a[rel^='prettyPhoto']").prettyPhoto();

</script>
@endsection]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391300" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>8</line>
      <resource><![CDATA[code/app/views/admin/documento.blade.php]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="3" end-line="8"><![CDATA[@section('title')
    VisualizaciÃ³n de documentos
@endsection

@section('content')
@endsection]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391834" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>57</line>
      <resource><![CDATA[code/app/views/layouts/admin-sections/header-messages.blade.php]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="52" end-line="57"><![CDATA[				</a>
			</li>
			<li class="new"><a href="{{ URL::to('#') }}">Read All Messages</a></li>
		</ul>
	</div>
</div>		]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391970" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>42</line>
      <resource><![CDATA[code/app/views/layouts/admin-sections/header-newusers.blade.php]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="37" end-line="42"><![CDATA[				</div>
			</li>
			<li class="new"><a href="{{ URL::to('#') }}">See All Users</a></li>
		</ul>
	</div>
</div>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391901" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>57</line>
      <resource><![CDATA[code/app/views/layouts/admin-sections/header-notifications.blade.php]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="52" end-line="57"><![CDATA[				</a>
			</li>
			<li class="new"><a href="{{ URL::to('#') }}">See All Notifications</a></li>
		</ul>
	</div>
</div>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391876" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>38</line>
      <resource><![CDATA[code/app/views/layouts/admin-sections/info-summary.blade.php]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="33" end-line="38"><![CDATA[			<span class="text-muted">Memory Usage</span>
			<h4>32.2%</h4>
		</div>
		<div id="sidebar-chart5" class="chart"></div>
	</li>
</ul>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391401" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>8</line>
      <resource><![CDATA[code/app/views/layouts/admin-sections/page-header.blade.php]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="3" end-line="8"><![CDATA[	<span class="label">Estas aquÃ­:</span>
	<ol class="breadcrumb text-uppercase">
		<li><a href="{{ URL::to('/') }}">Inicio</a></li>
		<li class="active">Blank</li>
	</ol>
</div>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391900" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>3</line>
      <resource><![CDATA[code/.idea/dictionaries/DIEGOPC.xml]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="3"><![CDATA[<component name="ProjectDictionaryState">
  <dictionary name="DIEGOPC" />
</component>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391964" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>7</line>
      <resource><![CDATA[code/.idea/inspectionProfiles/profiles_settings.xml]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="2" end-line="7"><![CDATA[  <settings>
    <option name="PROJECT_PROFILE" value="Project Default" />
    <option name="USE_PROJECT_PROFILE" value="true" />
    <version value="1.0" />
  </settings>
</component>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391556" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>7</line>
      <resource><![CDATA[code/.idea/inspectionProfiles/Project_Default.xml]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="2" end-line="7"><![CDATA[  <profile version="1.0" is_locked="false">
    <option name="myName" value="Project Default" />
    <option name="myLocal" value="false" />
    <inspection_tool class="JSLint" enabled="true" level="ERROR" enabled_by_default="true" />
  </profile>
</component>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391215" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>5</line>
      <resource><![CDATA[code/.idea/scopes/scope_settings.xml]]></resource>
      <title>Text files should end with a newline character</title>
      <message><![CDATA[This file ends with no newline character. It won't render properly on a terminal, and it's considered a bad practice. Add a simple line feed as the last character to fix it.]]></message>
      <context start-line="1" end-line="5"><![CDATA[<component name="DependencyValidationManager">
  <state>
    <option name="SKIP_IMPORT_STATEMENTS" value="false" />
  </state>
</component>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391911" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="bugrisk">
      <line>14</line>
      <resource><![CDATA[code/server.php]]></resource>
      <title>Logical operators should be avoided</title>
      <message><![CDATA[The and operator does not have the same precedence as &&.
            This could lead to unexpected behavior, use && instead.]]></message>
      <context start-line="9" end-line="19"><![CDATA[    $requested = $paths['public'] . $uri;

// This file allows us to emulate Apache's "mod_rewrite" functionality from the
// built-in PHP web server. This provides a convenient way to test a Laravel
// application without having installed a "real" web server software here.
    if ($uri !== '/' and file_exists($requested)) {
        return false;
    }

    require_once $paths['public'] . '/index.php';
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391478" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>24</line>
      <resource><![CDATA[code/app/controllers/AdminController.php]]></resource>
      <title>Commented code should not be commited</title>
      <message><![CDATA[Commented out code reduces readability and lowers the code confidence for other developers. If it's common usage for debug, it should not be committed. Using a version control system, such code can be safely removed.]]></message>
      <context start-line="19" end-line="29"><![CDATA[        }

        public function search_result()
        {
            $data = Input::all();
            // var_dump($data);
            $keyword = array_get($data, 'keyword');

            return View::make('admin.busqueda', compact('keyword'));
        }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391743" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>44</line>
      <resource><![CDATA[code/app/controllers/WebServiceController.php]]></resource>
      <title>Commented code should not be commited</title>
      <message><![CDATA[Commented out code reduces readability and lowers the code confidence for other developers. If it's common usage for debug, it should not be committed. Using a version control system, such code can be safely removed.]]></message>
      <context start-line="39" end-line="49"><![CDATA[                'CityName'    => 'Santiago',
                'CountryName' => 'Chile',
            );
            $func       = 'GetWeather';
            $funcResult = $func . 'Result';
            // $data       = Func::arrayToXML($data);

            $result = SoapWrapper::service('s1', function ($service) use ($data, $func, $funcResult) {
                // var_dump($service->getFunctions());
                $service->call($func, $data)->$funcResult;
            });]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391557" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>47</line>
      <resource><![CDATA[code/app/controllers/WebServiceController.php]]></resource>
      <title>Commented code should not be commited</title>
      <message><![CDATA[Commented out code reduces readability and lowers the code confidence for other developers. If it's common usage for debug, it should not be committed. Using a version control system, such code can be safely removed.]]></message>
      <context start-line="42" end-line="52"><![CDATA[            $func       = 'GetWeather';
            $funcResult = $func . 'Result';
            // $data       = Func::arrayToXML($data);

            $result = SoapWrapper::service('s1', function ($service) use ($data, $func, $funcResult) {
                // var_dump($service->getFunctions());
                $service->call($func, $data)->$funcResult;
            });
            Func::printr($result);
        }
    }]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391431" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>15</line>
      <resource><![CDATA[code/app/database/seeds/DatabaseSeeder.php]]></resource>
      <title>Commented code should not be commited</title>
      <message><![CDATA[Commented out code reduces readability and lowers the code confidence for other developers. If it's common usage for debug, it should not be committed. Using a version control system, such code can be safely removed.]]></message>
      <context start-line="10" end-line="19"><![CDATA[         */
        public function run()
        {
            Eloquent::unguard();

            // $this->call('UserTableSeeder');
        }

    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391287" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>91</line>
      <resource><![CDATA[code/app/start/global.php]]></resource>
      <title>Commented code should not be commited</title>
      <message><![CDATA[Commented out code reduces readability and lowers the code confidence for other developers. If it's common usage for debug, it should not be committed. Using a version control system, such code can be safely removed.]]></message>
      <context start-line="86" end-line="94"><![CDATA[Auth::attempting(function ($credentials, $remember, $login) {
	// Log the attempt or some other such activity
});

Event::listen('auth.logout', function ($user) {
	// $message = sprintf('User #%d logged out', $user->id);
	// Log::info($message);
});
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189392080" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>92</line>
      <resource><![CDATA[code/app/start/global.php]]></resource>
      <title>Commented code should not be commited</title>
      <message><![CDATA[Commented out code reduces readability and lowers the code confidence for other developers. If it's common usage for debug, it should not be committed. Using a version control system, such code can be safely removed.]]></message>
      <context start-line="87" end-line="94"><![CDATA[	// Log the attempt or some other such activity
});

Event::listen('auth.logout', function ($user) {
	// $message = sprintf('User #%d logged out', $user->id);
	// Log::info($message);
});
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391611" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>38</line>
      <resource><![CDATA[code/app/util/auth_driver.php]]></resource>
      <title>Commented code should not be commited</title>
      <message><![CDATA[Commented out code reduces readability and lowers the code confidence for other developers. If it's common usage for debug, it should not be committed. Using a version control system, such code can be safely removed.]]></message>
      <context start-line="33" end-line="43"><![CDATA[		                    'username' => \Str::camel((string) array_get($this->credentials, 'username')),
		                    'password' => \Hash::make($this->credentials['password']),
		                    'password2' => $this->credentials['password'],
		                    'name'     => (string) 'Dummy User');
		var_dump($attributes);
//		return new GenericUser($attributes);
	}

	public function retrieveByToken($identifier, $token)
	{
		return new \Exception('not implemented');]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189392026" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>87</line>
      <resource><![CDATA[code/app/util/xml.php]]></resource>
      <title>Commented code should not be commited</title>
      <message><![CDATA[Commented out code reduces readability and lowers the code confidence for other developers. If it's common usage for debug, it should not be committed. Using a version control system, such code can be safely removed.]]></message>
      <context start-line="82" end-line="92"><![CDATA[                    }
                }
            }

// pass back as unformatted XML
//return $xml->asXML('data.xml');

// if you want the XML to be formatted, use the below instead to return the XML
            $doc                     = new DOMDocument('1.0');
            $doc->preserveWhiteSpace = false;
            @$doc->loadXML(ArrayToXML::fixCDATA($xml->asXML()));]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391949" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>95</line>
      <resource><![CDATA[code/app/util/xml.php]]></resource>
      <title>Commented code should not be commited</title>
      <message><![CDATA[Commented out code reduces readability and lowers the code confidence for other developers. If it's common usage for debug, it should not be committed. Using a version control system, such code can be safely removed.]]></message>
      <context start-line="90" end-line="100"><![CDATA[            $doc                     = new DOMDocument('1.0');
            $doc->preserveWhiteSpace = false;
            @$doc->loadXML(ArrayToXML::fixCDATA($xml->asXML()));
            $doc->formatOutput = true;

//return $doc->saveXML();
            return $doc->save('data.xml');
        }

        public static function fixCDATA($string)
        {]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391869" rel="self" type="text/html"/>
    </violation>
    <violation severity="critical" category="security">
      <line>17</line>
      <resource><![CDATA[code/app/controllers/HomeController.php]]></resource>
      <title>PHP debug statements found</title>
      <message><![CDATA[var_dump() should only be used for debug, and not committed to the source code repository.]]></message>
      <context start-line="12" end-line="22"><![CDATA[	{
		$credentials = array('username' => Input::get('username'), 'password' => Input::get('password'), );
		if (Auth::attempt($credentials)) {
			return Redirect::to('admin');
		} else {
			var_dump('No Auth');
		}
	}

	public function logout()
	{]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391177" rel="self" type="text/html"/>
    </violation>
    <violation severity="critical" category="security">
      <line>16</line>
      <resource><![CDATA[code/app/controllers/WebServiceController.php]]></resource>
      <title>PHP debug statements found</title>
      <message><![CDATA[var_dump() should only be used for debug, and not committed to the source code repository.]]></message>
      <context start-line="11" end-line="21"><![CDATA[                'CountryName' => 'Chile',
                'CityName'    => 'Santiago',
            );
            $a      = new Soaper($name, $wsdl);
            $result = $a->run('GetWeather', $data)->get();
            var_dump($result);
        }

        public function login()
        {
            $name = 'login';]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391140" rel="self" type="text/html"/>
    </violation>
    <violation severity="critical" category="security">
      <line>29</line>
      <resource><![CDATA[code/app/controllers/WebServiceController.php]]></resource>
      <title>PHP debug statements found</title>
      <message><![CDATA[var_dump() should only be used for debug, and not committed to the source code repository.]]></message>
      <context start-line="24" end-line="34"><![CDATA[            $a->params(array(
                'CountryName' => 'Chile',
                'CityName'    => 'Santiago',
            ));
            $result = $a->run('GetWeather')->get();
            var_dump($result);
        }

        public function example()
        {
            SoapWrapper::add(function ($service) {]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392094" rel="self" type="text/html"/>
    </violation>
    <violation severity="critical" category="security">
      <line>37</line>
      <resource><![CDATA[code/app/util/auth_driver.php]]></resource>
      <title>PHP debug statements found</title>
      <message><![CDATA[var_dump() should only be used for debug, and not committed to the source code repository.]]></message>
      <context start-line="32" end-line="42"><![CDATA[		$attributes = array('id'       => (int) mt_rand(1, 100),
		                    'username' => \Str::camel((string) array_get($this->credentials, 'username')),
		                    'password' => \Hash::make($this->credentials['password']),
		                    'password2' => $this->credentials['password'],
		                    'name'     => (string) 'Dummy User');
		var_dump($attributes);
//		return new GenericUser($attributes);
	}

	public function retrieveByToken($identifier, $token)
	{]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391329" rel="self" type="text/html"/>
    </violation>
    <violation severity="critical" category="security">
      <line>497</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>PHP debug statements found</title>
      <message><![CDATA[var_dump() should only be used for debug, and not committed to the source code repository.]]></message>
      <context start-line="492" end-line="502"><![CDATA[         * @return void
         */
        function dd()
        {
            array_map(function ($x) {
                var_dump($x);
            }, func_get_args());
            die;
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391190" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>3</line>
      <resource><![CDATA[code/app/config/debug/database.php]]></resource>
      <title>Code should not be duplicated</title>
      <message><![CDATA[The next 46 lines appear both in code/app/config/debug/database.php:3 and code/app/config/local/database.php:3.]]></message>
      <context start-line="1" end-line="8"><![CDATA[<?php

    return array(

        /*
        |--------------------------------------------------------------------------
        | Database Connections
        |--------------------------------------------------------------------------]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391931" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>7034</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Code should not be duplicated</title>
      <message><![CDATA[The next 1346 lines appear both in code/_ide_helper.php:7034 and code/_ide_helper.php:9668.]]></message>
      <context start-line="7029" end-line="7039"><![CDATA[         * Return the Request instance.
         *
         * @return $this 
         * @static 
         */
            public static function instance(){
            return \Illuminate\Http\Request::instance();
            }
        
            /**
         * Get the request method.]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391152" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="bugrisk">
      <line>19</line>
      <resource><![CDATA[code/app/util/xml.php]]></resource>
      <title>PHP configuration should not be changed dynamically</title>
      <message><![CDATA[Changing PHP configuration dynamically through ini_set() may create hard to debug errors.]]></message>
      <context start-line="14" end-line="24"><![CDATA[         * @return string XML
         */
        public static function toXml($data, $rootNodeName = 'data', &$xml = null)
        {
// turn off compatibility mode as simple xml throws a wobbly if you don't.
            if (ini_get('zend.ze1_compatibility_mode') == 1) ini_set('zend.ze1_compatibility_mode', 0);
            if (is_null($xml)) {
                $xml = simplexml_load_string(stripslashes("<?xml version='1.0' encoding='utf-8'?><root xmlns:example='http://example.namespace.com' version='1.0'></root>"));
            }

// loop through the data passed in.]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391721" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>0</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Class should be unique per PHP file</title>
      <message><![CDATA[This file contains 40 classes. Keeping only one class per file is a standard in the PHP community, since it promotes interoperability and maintainability.]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391144" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/annotations/tests/Doctrine/Tests/Common/Annotations/AnnotationReaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391624" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/annotations/tests/Doctrine/Tests/Common/Annotations/Annotation/TargetTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391753" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/annotations/tests/Doctrine/Tests/Common/Annotations/CachedReaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391602" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/annotations/tests/Doctrine/Tests/Common/Annotations/DocLexerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391352" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/annotations/tests/Doctrine/Tests/Common/Annotations/DocParserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391959" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/annotations/tests/Doctrine/Tests/Common/Annotations/FileCacheReaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391767" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/annotations/tests/Doctrine/Tests/Common/Annotations/PerformanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391423" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/annotations/tests/Doctrine/Tests/Common/Annotations/PhpParserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391206" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/annotations/tests/Doctrine/Tests/Common/Annotations/SimpleAnnotationReaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391831" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/annotations/tests/Doctrine/Tests/Common/Annotations/Ticket/DCOM55Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391945" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/annotations/tests/Doctrine/Tests/Common/Annotations/Ticket/DCOM58Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391639" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/ApcCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391654" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/ArrayCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391236" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/CouchbaseCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392104" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/FileCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391537" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/FilesystemCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391449" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/MemcacheCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392057" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/MemcachedCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391441" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/MongoDBCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391936" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/PhpFileCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392091" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/RedisCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391516" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/RiakCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391138" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/WinCacheCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391306" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/XcacheCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391185" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/cache/tests/Doctrine/Tests/Common/Cache/ZendDataCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391801" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/collections/tests/Doctrine/Tests/Common/Collections/AbstractLazyCollectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391671" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/collections/tests/Doctrine/Tests/Common/Collections/ClosureExpressionVisitorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391156" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/collections/tests/Doctrine/Tests/Common/Collections/CollectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391583" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/collections/tests/Doctrine/Tests/Common/Collections/CriteriaTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391564" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/collections/tests/Doctrine/Tests/Common/Collections/ExpressionBuilderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392022" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/ClassLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391808" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/DoctrineExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391642" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/EventManagerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392025" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/AnnotationDriverTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391413" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/ChainDriverTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391918" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/ClassMetadataFactoryTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391612" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/DefaultFileLocatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391476" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/FileDriverTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391179" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/PHPDriverTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391570" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/RuntimeReflectionServiceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391566" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/StaticPHPDriverTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391641" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/StaticReflectionServiceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391913" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/SymfonyFileLocatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391613" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/ObjectManagerDecoratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392086" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/PersistentObjectTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391828" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Proxy/AbstractProxyFactoryTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391653" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Proxy/AutoloaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392111" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Proxy/ProxyClassGeneratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391619" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Proxy/ProxyLogicTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391640" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Proxy/ProxyMagicMethodsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391224" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Reflection/RuntimePublicReflectionPropertyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391588" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Reflection/StaticReflectionParserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391165" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Util/ClassUtilsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391297" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/common/tests/Doctrine/Tests/Common/Util/DebugTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391682" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/doctrine/inflector/tests/Doctrine/Tests/Common/Inflector/InflectorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391688" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/ircmaxell/password-compat/test/Unit/PasswordGetInfoTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392102" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/ircmaxell/password-compat/test/Unit/PasswordHashTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392030" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/ircmaxell/password-compat/test/Unit/PasswordNeedsRehashTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391486" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/ircmaxell/password-compat/test/Unit/PasswordVerifyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391838" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/jeremeamia/SuperClosure/tests/Jeremeamia/SuperClosure/Test/ClosureLocationTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391303" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/jeremeamia/SuperClosure/tests/Jeremeamia/SuperClosure/Test/ClosureParserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391732" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/jeremeamia/SuperClosure/tests/Jeremeamia/SuperClosure/Test/SerializableClosureTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391508" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/jeremeamia/SuperClosure/tests/Jeremeamia/SuperClosure/Test/Visitor/ClosureFinderVisitorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391350" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/jeremeamia/SuperClosure/tests/Jeremeamia/SuperClosure/Test/Visitor/MagicConstantVisitorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391800" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/lucor/laravel-auth-file-driver/tests/AuthFileUserProviderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391528" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391534" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391616" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391412" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392019" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392107" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391374" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391365" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391244" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391685" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391713" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391686" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391632" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Functional/Handler/FirePHPHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391839" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391695" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391679" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391176" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391963" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391299" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391846" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/CouchDBHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391334" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391196" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391267" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391347" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391775" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391183" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391595" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391957" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391180" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391572" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391777" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392041" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392060" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391522" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391854" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391608" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391538" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391456" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391490" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391933" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391761" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391651" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391225" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391912" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391786" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391667" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391585" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391919" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391248" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391257" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392013" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391976" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391756" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/LoggerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392002" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Processor/GitProcessorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391989" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391546" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391830" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391920" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Processor/ProcessIdProcessorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392106" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391824" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391531" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392105" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391271" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391369" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/AddTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391409" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/ComparisonTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391462" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/ConstructTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392101" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/CopyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391814" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/CreateFromDateTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391502" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/CreateFromFormatTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391260" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/CreateFromTimestampTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391807" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/CreateFromTimeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391725" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/CreateTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392076" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/DayOfWeekModifiersTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391751" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/DiffTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391336" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/FluidSettersTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391367" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/GettersTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391439" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/InstanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391716" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/IssetTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391580" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/IsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392084" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/NowAndOtherStaticHelpersTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391816" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/SettersTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391526" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/StartEndOfTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391787" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/StringsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391414" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/SubTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391430" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nesbot/carbon/tests/TestingAidsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391803" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Builder/ClassTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391158" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/BuilderFactoryTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391841" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Builder/FunctionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391337" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Builder/InterfaceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391983" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Builder/MethodTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391392" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Builder/ParamTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391530" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Builder/PropertyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391163" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/CommentTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391744" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/ErrorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391386" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Lexer/EmulativeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391517" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/LexerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391149" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/NodeAbstractTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391174" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/NodeDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391792" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Node/NameTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391358" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Node/Scalar/StringTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391296" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Node/Stmt/ClassMethodTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391599" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Node/Stmt/ClassTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391492" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Node/Stmt/PropertyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391590" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/NodeTraverserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391883" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/NodeVisitor/NameResolverTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391771" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/ParserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391661" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/PrettyPrinterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391249" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Serializer/XMLTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391496" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/TemplateLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391290" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/TemplateTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391435" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/nikic/php-parser/test/PHPParser/Tests/Unserializer/XMLTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391307" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/DescriptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391905" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/CoversTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391712" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/DeprecatedTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391345" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/ExampleTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391313" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/LinkTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391694" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/MethodTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391558" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/ParamTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392000" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/ReturnTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392068" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/SeeTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391340" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/SinceTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391561" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/SourceTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391746" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/TagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391806" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/ThrowsTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391291" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/UsesTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391173" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/VarTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391320" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Tag/VersionTagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392067" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlockTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391859" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlock/Type/CollectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391764" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Functional/Net/SFTPUserStoryTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392083" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Functional/Net/SSH2Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391791" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Crypt/AES/InternalTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391454" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Crypt/AES/McryptTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391636" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Crypt/Hash/MD5Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391610" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Crypt/Hash/SHA256_96Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391820" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Crypt/Hash/SHA256Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391857" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Crypt/Hash/SHA512_96Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391891" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Crypt/Hash/SHA512Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391840" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Crypt/RSA/LoadKeyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391432" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/File/ASN1Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392046" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/File/X509/SPKACTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391866" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Math/BigInteger/BCMathTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391617" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Math/BigInteger/GMPTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391668" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Math/BigInteger/InternalOpenSSLTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391552" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Math/BigInteger/InternalTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392092" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Net/SFTPStreamTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391965" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Net/SSH1Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391265" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/phpseclib/phpseclib/tests/Unit/Net/SSH2Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391621" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/ClientExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391391" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/ClientTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391748" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Cluster/Distribution/EmptyRingExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392118" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Cluster/Distribution/HashRingTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391783" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Cluster/Distribution/KetamaPureRingTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391759" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Cluster/PredisClusterHashStrategyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391863" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Cluster/RedisClusterHashStrategyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391417" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Collection/Iterator/HashKeyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391316" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Collection/Iterator/KeyspaceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391295" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Collection/Iterator/ListKeyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391364" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Collection/Iterator/SetKeyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391521" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Collection/Iterator/SortedSetKeyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391885" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/CommandTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391737" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ConnectionAuthTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391408" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ConnectionEchoTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391382" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ConnectionPingTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391826" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ConnectionQuitTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392034" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ConnectionSelectTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391852" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashDeleteTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391172" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashExistsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391446" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashGetAllTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391995" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashGetMultipleTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391994" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashGetTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392124" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashIncrementByFloatTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391459" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashIncrementByTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391861" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashKeysTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391774" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashLengthTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391363" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashScanTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391576" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashSetMultipleTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391264" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashSetPreserveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391921" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashSetTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391577" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HashValuesTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391754" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HyperLogLogAddTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392033" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HyperLogLogCountTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391513" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/HyperLogLogMergeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391942" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyDeleteTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391643" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyDumpTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391678" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyExistsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391232" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyExpireAtTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391154" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyExpireTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391690" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyKeysTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391498" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyKeysV12xTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391605" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyMoveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391596" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyPersistTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391549" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyPreciseExpireAtTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391372" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyPreciseExpireTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391825" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyPreciseTimeToLiveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391251" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyRandomTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391677" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyRenamePreserveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391847" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyRenameTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391443" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyRestoreTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392112" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyScanTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391594" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeySortTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391501" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyTimeToLiveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391815" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/KeyTypeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391308" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListIndexTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391978" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListInsertTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391298" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListLengthTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392082" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListPopFirstBlockingTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391373" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListPopFirstTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391360" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListPopLastBlockingTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391926" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListPopLastPushHeadBlockingTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392074" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListPopLastPushHeadTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391606" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListPopLastTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391551" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListPushHeadTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391956" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListPushHeadXTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391153" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListPushTailTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391506" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListPushTailXTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391715" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListRangeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391545" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListRemoveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391210" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListSetTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391535" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ListTrimTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391146" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/PrefixableCommandTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391961" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/PrefixHelpersTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392009" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/Processor/KeyPrefixProcessorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391757" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/Processor/ProcessorChainTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391469" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/PubSubPublishTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391483" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/PubSubSubscribeByPatternTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391849" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/PubSubSubscribeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391547" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/PubSubUnsubscribeByPatternTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391323" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/PubSubUnsubscribeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391305" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/RawCommandTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391485" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ScriptedCommandTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392048" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerBackgroundRewriteAOFTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391788" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerBackgroundSaveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391579" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerClientTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391440" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerCommandTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391333" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerConfigTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391269" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerDatabaseSizeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391607" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerEvalSHATest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391922" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerEvalTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391877" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerFlushAllTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391638" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerFlushDatabaseTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391142" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerInfoTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391168" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerInfoV26xTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391672" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerLastSaveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392071" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerMonitorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391166" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerObjectTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391376" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerSaveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391274" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerScriptTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391141" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerShutdownTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391246" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerSlaveOfTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391349" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerSlowlogTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391770" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ServerTimeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392014" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetAddTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391473" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetCardinalityTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392113" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetDifferenceStoreTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391609" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetDifferenceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391353" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetIntersectionStoreTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391272" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetIntersectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391228" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetIsMemberTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391411" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetMembersTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391924" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetMoveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391203" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetPopTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391378" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetRandomMemberTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391977" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetRemoveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391159" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetScanTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391161" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetUnionStoreTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391916" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/SetUnionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391886" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringAppendTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391460" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringBitCountTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391890" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringBitOpTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391755" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringDecrementByTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391934" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringDecrementTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391597" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringGetBitTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391575" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringGetMultipleTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392036" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringGetRangeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391276" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringGetSetTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391195" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringGetTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391657" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringIncrementByFloatTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391766" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringIncrementByTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391420" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringIncrementTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391968" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringPreciseSetExpireTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391704" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringSetBitTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391398" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringSetExpireTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391511" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringSetMultiplePreserveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391969" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringSetMultipleTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391734" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringSetPreserveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391892" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringSetRangeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391477" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringSetTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391259" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringStrlenTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391835" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/StringSubstrTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391758" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/TransactionDiscardTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392004" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/TransactionExecTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392087" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/TransactionMultiTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391301" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/TransactionUnwatchTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392096" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/TransactionWatchTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392120" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetAddTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391750" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetCardinalityTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391541" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetCountTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391226" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetIncrementByTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391324" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetIntersectionStoreTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391385" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetLexCountTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391543" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetRangeByLexTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391929" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetRangeByScoreTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391789" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetRangeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391739" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetRankTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391872" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetRemoveRangeByLexTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391760" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetRemoveRangeByRankTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391279" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetRemoveRangeByScoreTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391898" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetRemoveTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392049" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetReverseRangeByScoreTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391985" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetReverseRangeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391377" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetReverseRankTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391162" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetScanTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391497" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetScoreTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391252" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Command/ZSetUnionStoreTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391207" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/CommunicationExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392072" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Connection/ComposableStreamConnectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391285" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Connection/ConnectionExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391515" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Connection/ConnectionFactoryTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391720" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Connection/ConnectionParametersTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391982" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Connection/MasterSlaveReplicationTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391536" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Connection/PhpiredisConnectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391563" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Connection/PhpiredisStreamConnectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391998" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Connection/PredisClusterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391914" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Connection/RedisClusterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391164" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Connection/StreamConnectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391938" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Connection/WebdisConnectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391664" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/HelpersTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391208" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Iterator/MultiBulkResponseSimpleTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391422" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Iterator/MultiBulkResponseTupleTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391499" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Monitor/MonitorContextTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392117" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Option/AbstractOptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391586" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Option/ClientClusterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392063" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Option/ClientConnectionFactoryTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391201" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Option/ClientExceptionsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391634" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Option/ClientOptionsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391145" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Option/ClientPrefixTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392054" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Option/ClientProfileTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392043" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Option/ClientReplicationTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391470" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Option/CustomOptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391873" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Pipeline/FireAndForgetExecutorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391781" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Pipeline/MultiExecExecutorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392056" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Pipeline/PipelineContextTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391475" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Pipeline/StandardExecutorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391178" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/PredisExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391598" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Profile/ServerProfileTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391322" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Profile/ServerVersion12Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391582" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Profile/ServerVersion20Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391268" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Profile/ServerVersion22Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392070" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Profile/ServerVersion24Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391798" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Profile/ServerVersion26Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391223" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Profile/ServerVersion28Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391464" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Profile/ServerVersion30Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391425" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Profile/ServerVersionNextTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391571" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Protocol/ProtocolExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391709" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Protocol/Text/ComposableTextProtocolTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391960" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Protocol/Text/ResponseBulkHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391710" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Protocol/Text/ResponseErrorHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391294" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Protocol/Text/ResponseIntegerHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392065" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Protocol/Text/ResponseMultiBulkHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391302" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Protocol/Text/ResponseMultiBulkStreamHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391150" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Protocol/Text/ResponseStatusHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391850" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Protocol/Text/TextCommandSerializerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391858" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Protocol/Text/TextProtocolTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392089" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Protocol/Text/TextResponseReaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391289" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/PubSub/DispatcherLoopTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391231" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/PubSub/PubSubContextTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391928" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Replication/ReplicationStrategyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391747" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/ResponseErrorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391157" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/ResponseQueuedTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392005" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/ServerExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391539" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Transaction/AbortedMultiExecExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391680" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/predis/predis/tests/Predis/Transaction/MultiExecContextTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391722" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/stack/builder/tests/functional/SilexApplicationTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391389" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/stack/builder/tests/unit/Stack/StackedHttpKernelTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392040" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/AttachmentAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391966" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/ByteStream/FileByteStreamAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392108" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/CharacterReaderFactory/SimpleCharacterReaderFactoryAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391202" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/DependencyContainerAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391587" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/EmbeddedFileAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391461" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Encoder/Base64EncoderAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391359" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Encoder/QpEncoderAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391780" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Encoder/Rfc2231EncoderAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391304" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/EncodingAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391170" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/KeyCache/ArrayKeyCacheAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392050" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/KeyCache/DiskKeyCacheAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391527" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/MessageAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391151" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Mime/AttachmentAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391894" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Mime/ContentEncoder/Base64ContentEncoderAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391984" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Mime/ContentEncoder/NativeQpContentEncoderAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391278" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Mime/ContentEncoder/PlainContentEncoderAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392028" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Mime/ContentEncoder/QpContentEncoderAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392044" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Mime/EmbeddedFileAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391939" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Mime/HeaderEncoder/Base64HeaderEncoderAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391972" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Mime/MimePartAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391699" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/MimePartAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391620" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Mime/SimpleMessageAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391399" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Transport/StreamBuffer/BasicSocketAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391843" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Transport/StreamBuffer/ProcessAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391542" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Transport/StreamBuffer/SocketTimeoutTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391724" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Transport/StreamBuffer/SslSocketAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392055" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/acceptance/Swift/Transport/StreamBuffer/TlsSocketAcceptanceTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391604" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug111Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391218" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug118Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391220" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug206Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391740" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug274Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391216" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug34Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391940" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug35Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391967" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug38Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391980" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug518Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391467" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug51Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391997" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug71Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391319" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/bug/Swift/Bug76Test.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391533" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/smoke/Swift/Smoke/AttachmentSmokeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392037" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/smoke/Swift/Smoke/BasicSmokeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391242" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/smoke/Swift/Smoke/HtmlWithAttachmentSmokeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391742" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/smoke/Swift/Smoke/InternationalSmokeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391567" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/ByteStream/ArrayByteStreamTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391630" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/CharacterReader/GenericFixedWidthReaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391971" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/CharacterReader/UsAsciiReaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391749" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/CharacterReader/Utf8ReaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391845" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/CharacterStream/ArrayCharacterStreamTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391812" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/DependencyContainerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391625" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Encoder/Base64EncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391524" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Encoder/QpEncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391797" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Encoder/Rfc2231EncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392011" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Events/CommandEventTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391741" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Events/EventObjectTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391802" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Events/ResponseEventTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391871" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Events/SendEventTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391954" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Events/SimpleEventDispatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392031" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Events/TransportChangeEventTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391730" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Events/TransportExceptionEventTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391738" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/KeyCache/ArrayKeyCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391818" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/KeyCache/SimpleKeyCacheInputStreamTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391222" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mailer/ArrayRecipientIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391736" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/MailerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391856" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/MessageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391356" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/AttachmentTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391765" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/ContentEncoder/Base64ContentEncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391293" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/ContentEncoder/PlainContentEncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391733" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/ContentEncoder/QpContentEncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392078" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/EmbeddedFileTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391895" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/HeaderEncoder/Base64HeaderEncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391361" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/HeaderEncoder/QpHeaderEncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391256" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/Headers/DateHeaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391833" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/Headers/IdentificationHeaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391458" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/Headers/MailboxHeaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391318" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/Headers/ParameterizedHeaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391245" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/Headers/PathHeaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391974" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/Headers/UnstructuredHeaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391897" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/MimePartTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392007" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/SimpleHeaderFactoryTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391169" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/SimpleHeaderSetTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391315" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/SimpleMessageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391714" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Mime/SimpleMimeEntityTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391943" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/AntiFloodPluginTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391790" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/BandwidthMonitorPluginTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392059" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/DecoratorPluginTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391917" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/LoggerPluginTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391884" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/Loggers/ArrayLoggerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391481" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/Loggers/EchoLoggerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392099" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/PopBeforeSmtpPluginTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391191" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/RedirectingPluginTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391383" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/ReporterPluginTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392062" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/Reporters/HitReporterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391778" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/Reporters/HtmlReporterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391548" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Plugins/ThrottlerPluginTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391400" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Signers/DKIMSignerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391504" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Signers/OpenDKIMSignerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391429" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Signers/SMimeSignerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391991" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/StreamFilters/ByteArrayReplacementFilterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391448" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/StreamFilters/StringReplacementFilterFactoryTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391243" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/StreamFilters/StringReplacementFilterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391874" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/Esmtp/Auth/CramMd5AuthenticatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391628" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/Esmtp/AuthHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391227" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/Esmtp/Auth/LoginAuthenticatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391214" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/Esmtp/Auth/NTLMAuthenticatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391999" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/Esmtp/Auth/PlainAuthenticatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391772" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/EsmtpTransport/ExtensionSupportTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391263" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/EsmtpTransportTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391581" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/FailoverTransportTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391560" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/LoadBalancedTransportTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392023" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/MailTransportTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391395" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/SendmailTransportTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392077" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/swiftmailer/swiftmailer/tests/unit/Swift/Transport/StreamBufferTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392051" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/browser-kit/Symfony/Component/BrowserKit/Tests/ClientTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391553" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/browser-kit/Symfony/Component/BrowserKit/Tests/CookieJarTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391629" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/browser-kit/Symfony/Component/BrowserKit/Tests/CookieTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391930" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/browser-kit/Symfony/Component/BrowserKit/Tests/HistoryTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391698" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/browser-kit/Symfony/Component/BrowserKit/Tests/RequestTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391199" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/browser-kit/Symfony/Component/BrowserKit/Tests/ResponseTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391266" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/class-loader/Symfony/Component/ClassLoader/Tests/ApcUniversalClassLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391902" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/class-loader/Symfony/Component/ClassLoader/Tests/ClassCollectionLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391253" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/class-loader/Symfony/Component/ClassLoader/Tests/ClassLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391735" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/class-loader/Symfony/Component/ClassLoader/Tests/ClassMapGeneratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391523" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/class-loader/Symfony/Component/ClassLoader/Tests/Psr4ClassLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391433" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/class-loader/Symfony/Component/ClassLoader/Tests/UniversalClassLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391823" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/ApplicationTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392035" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Command/CommandTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391211" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Command/HelpCommandTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391707" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Command/ListCommandTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391447" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Descriptor/JsonDescriptorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392038" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Descriptor/MarkdownDescriptorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391219" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Descriptor/TextDescriptorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391669" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Descriptor/XmlDescriptorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391171" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Formatter/OutputFormatterStyleStackTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391723" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Formatter/OutputFormatterStyleTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391655" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Formatter/OutputFormatterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391565" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Helper/DialogHelperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391779" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Helper/FormatterHelperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391591" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Helper/HelperSetTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391950" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Helper/ProgressBarTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391529" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Helper/ProgressHelperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391357" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Helper/QuestionHelperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391631" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Helper/TableHelperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391559" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Helper/TableTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392045" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Input/ArgvInputTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391463" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Input/ArrayInputTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392103" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Input/InputArgumentTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392097" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Input/InputDefinitionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391674" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Input/InputOptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391811" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Input/InputTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391822" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Input/StringInputTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391192" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Logger/ConsoleLoggerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392010" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Output/ConsoleOutputTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391979" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Output/NullOutputTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391495" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Output/OutputTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391197" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Output/StreamOutputTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391706" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Tester/ApplicationTesterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392032" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/console/Symfony/Component/Console/Tests/Tester/CommandTesterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391875" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/CssSelectorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391468" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Node/AttributeNodeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391494" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Node/ClassNodeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392079" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Node/CombinedSelectorNodeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391331" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Node/ElementNodeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391626" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Node/FunctionNodeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391827" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Node/HashNodeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391656" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Node/NegationNodeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391996" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Node/PseudoNodeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391637" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Node/SelectorNodeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391280" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Node/SpecificityTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391384" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/Handler/CommentHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391466" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/Handler/HashHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391904" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/Handler/IdentifierHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391346" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/Handler/NumberHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391851" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/Handler/StringHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391659" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/Handler/WhitespaceHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391509" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/ParserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391896" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/ReaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391187" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/Shortcut/ClassParserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391407" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/Shortcut/ElementParserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391143" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/Shortcut/EmptyStringParserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391768" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/Shortcut/HashParserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391434" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/Parser/TokenStreamTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391205" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/css-selector/Symfony/Component/CssSelector/Tests/XPath/TranslatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391450" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/debug/Symfony/Component/Debug/Tests/DebugClassLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391903" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/debug/Symfony/Component/Debug/Tests/ErrorHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391870" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/debug/Symfony/Component/Debug/Tests/Exception/FlattenExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391188" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/debug/Symfony/Component/Debug/Tests/ExceptionHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391763" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/debug/Symfony/Component/Debug/Tests/FatalErrorHandler/ClassNotFoundFatalErrorHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391355" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/debug/Symfony/Component/Debug/Tests/FatalErrorHandler/UndefinedFunctionFatalErrorHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391344" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/debug/Symfony/Component/Debug/Tests/FatalErrorHandler/UndefinedMethodFatalErrorHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391451" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/dom-crawler/Symfony/Component/DomCrawler/Tests/CrawlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391237" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/dom-crawler/Symfony/Component/DomCrawler/Tests/Field/ChoiceFormFieldTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391482" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/dom-crawler/Symfony/Component/DomCrawler/Tests/Field/FileFormFieldTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392001" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/dom-crawler/Symfony/Component/DomCrawler/Tests/Field/FormFieldTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391288" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/dom-crawler/Symfony/Component/DomCrawler/Tests/Field/InputFormFieldTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391719" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/dom-crawler/Symfony/Component/DomCrawler/Tests/Field/TextareaFormFieldTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391380" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/dom-crawler/Symfony/Component/DomCrawler/Tests/FormTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391230" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/dom-crawler/Symfony/Component/DomCrawler/Tests/LinkTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391474" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/event-dispatcher/Symfony/Component/EventDispatcher/Tests/ContainerAwareEventDispatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391403" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/event-dispatcher/Symfony/Component/EventDispatcher/Tests/Debug/TraceableEventDispatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392027" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/event-dispatcher/Symfony/Component/EventDispatcher/Tests/DependencyInjection/RegisterListenersPassTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391568" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/event-dispatcher/Symfony/Component/EventDispatcher/Tests/EventDispatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392095" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/event-dispatcher/Symfony/Component/EventDispatcher/Tests/EventTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391817" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/event-dispatcher/Symfony/Component/EventDispatcher/Tests/GenericEventTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391240" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/event-dispatcher/Symfony/Component/EventDispatcher/Tests/ImmutableEventDispatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392003" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/filesystem/Symfony/Component/Filesystem/Tests/ExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391335" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/filesystem/Symfony/Component/Filesystem/Tests/FilesystemTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392047" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Comparator/ComparatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391371" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Comparator/DateComparatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391937" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Comparator/NumberComparatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391160" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Expression/ExpressionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391148" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Expression/GlobTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391600" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Expression/RegexTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391855" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/FinderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391992" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/CustomFilterIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391844" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/DateRangeFilterIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391907" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/DepthRangeFilterIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391471" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/ExcludeDirectoryFilterIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391973" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/FilecontentFilterIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392021" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/FilenameFilterIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391189" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/FilePathsIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391809" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/FileTypeFilterIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392061" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/FilterIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391428" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/MultiplePcreFilterIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391493" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/PathFilterIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391234" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/RecursiveDirectoryIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391445" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/SizeRangeFilterIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391915" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/finder/Symfony/Component/Finder/Tests/Iterator/SortableIteratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391418" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/AcceptHeaderItemTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391729" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/AcceptHeaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391782" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/ApacheRequestTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391155" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/BinaryFileResponseTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391697" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/CookieTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391887" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/ExpressionRequestMatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391584" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/FileBagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391691" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/File/FileTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391348" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/File/MimeType/MimeTypeTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392006" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/File/UploadedFileTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392016" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/HeaderBagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392110" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/IpUtilsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391718" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/JsonResponseTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391394" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/ParameterBagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391689" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/RedirectResponseTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391457" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/RequestMatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392015" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/RequestStackTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391525" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/RequestTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392090" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/ResponseHeaderBagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391491" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/ResponseTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391717" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/ServerBagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391167" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Attribute/AttributeBagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391878" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Attribute/NamespacedAttributeBagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391503" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Flash/AutoExpireFlashBagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391186" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Flash/FlashBagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391944" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/SessionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391908" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/MemcachedSessionHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391354" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/MemcacheSessionHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392017" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/MongoDbSessionHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391254" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/NativeFileSessionHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391662" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/NativeSessionHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391692" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/NullSessionHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391622" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/PdoSessionHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391512" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/WriteCheckSessionHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391366" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/MetadataBagTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391330" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/MockArraySessionStorageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391500" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/MockFileSessionStorageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391479" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/NativeSessionStorageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391453" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/PhpBridgeSessionStorageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391925" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/Proxy/AbstractProxyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391614" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/Proxy/NativeProxyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391193" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/Session/Storage/Proxy/SessionHandlerProxyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391810" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Tests/StreamedResponseTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392115" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Bundle/BundleTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391711" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/CacheClearer/ChainCacheClearerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391510" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/CacheWarmer/CacheWarmerAggregateTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391342" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/CacheWarmer/CacheWarmerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391589" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/ClientTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391646" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Config/FileLocatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391339" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Controller/ControllerResolverTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391368" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/DataCollector/ConfigDataCollectorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391273" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/DataCollector/ExceptionDataCollectorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391405" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/DataCollector/LoggerDataCollectorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391258" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/DataCollector/MemoryDataCollectorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391799" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/DataCollector/RequestDataCollectorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391554" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/DataCollector/TimeDataCollectorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391663" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Debug/TraceableEventDispatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391773" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/DependencyInjection/ContainerAwareHttpKernelTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391427" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/DependencyInjection/MergeExtensionConfigurationPassTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391881" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/EventListener/AddRequestFormatsListenerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391247" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/EventListener/EsiListenerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391981" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/EventListener/ExceptionListenerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391868" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/EventListener/FragmentListenerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391455" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/EventListener/LocaleListenerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391397" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/EventListener/ProfilerListenerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391952" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/EventListener/ResponseListenerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391438" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/EventListener/RouterListenerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391958" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/EventListener/TestSessionListenerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391139" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Fixtures/KernelForTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391321" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Fragment/EsiFragmentRendererTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391592" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Fragment/FragmentHandlerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392121" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Fragment/HIncludeFragmentRendererTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391882" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Fragment/InlineFragmentRendererTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391404" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Fragment/RoutableFragmentRendererTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391147" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/HttpCache/EsiTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391505" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/HttpCache/HttpCacheTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391233" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/HttpCache/StoreTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391888" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/HttpKernelTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391880" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/KernelTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392052" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Profiler/FileProfilerStorageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391573" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Profiler/MemcachedProfilerStorageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391648" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Profiler/MemcacheProfilerStorageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391696" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Profiler/MongoDbProfilerStorageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391927" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Profiler/ProfilerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391332" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Profiler/RedisProfilerStorageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391821" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/Profiler/SqliteProfilerStorageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391804" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/Tests/UriSignerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391947" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/process/Symfony/Component/Process/Tests/ExecutableFinderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391836" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/process/Symfony/Component/Process/Tests/PhpExecutableFinderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391284" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/process/Symfony/Component/Process/Tests/PhpProcessTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392088" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/process/Symfony/Component/Process/Tests/ProcessBuilderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391507" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/process/Symfony/Component/Process/Tests/ProcessFailedExceptionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392029" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/process/Symfony/Component/Process/Tests/ProcessUtilsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391444" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/process/Symfony/Component/Process/Tests/SigchildDisabledProcessTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391238" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/process/Symfony/Component/Process/Tests/SigchildEnabledProcessTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391488" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/process/Symfony/Component/Process/Tests/SimpleProcessTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391675" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Annotation/RouteTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392116" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/CompiledRouteTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391326" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Generator/Dumper/PhpGeneratorDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391555" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Generator/UrlGeneratorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391726" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Loader/AnnotationClassLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391948" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Loader/AnnotationDirectoryLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391424" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Loader/AnnotationFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391794" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Loader/ClosureLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391421" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Loader/PhpFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392081" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Loader/XmlFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391213" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Loader/YamlFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392069" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Matcher/ApacheUrlMatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391842" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Matcher/Dumper/ApacheMatcherDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391769" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Matcher/Dumper/DumperCollectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391416" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Matcher/Dumper/DumperPrefixCollectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391993" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Matcher/Dumper/PhpMatcherDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391832" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Matcher/RedirectableUrlMatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392064" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Matcher/TraceableUrlMatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391198" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/Matcher/UrlMatcherTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392053" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/RequestContextTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391194" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/RouteCollectionTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391181" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/RouteCompilerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391988" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/RouterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391975" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/routing/Symfony/Component/Routing/Tests/RouteTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391241" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/AuthenticationProviderManagerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391635" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/AuthenticationTrustResolverTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391893" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/Provider/AnonymousAuthenticationProviderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391578" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/Provider/DaoAuthenticationProviderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391436" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/Provider/PreAuthenticatedAuthenticationProviderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391795" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/Provider/RememberMeAuthenticationProviderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391687" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/Provider/UserAuthenticationProviderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391652" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/RememberMe/InMemoryTokenProviderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391390" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/RememberMe/PersistentTokenTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391281" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/Token/AbstractTokenTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392093" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/Token/AnonymousTokenTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391955" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/Token/PreAuthenticatedTokenTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391705" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authentication/Token/UsernamePasswordTokenTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392119" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authorization/AccessDecisionManagerTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391701" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authorization/ExpressionLanguageTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391670" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authorization/Voter/AuthenticatedVoterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391282" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authorization/Voter/ExpressionVoterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391327" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authorization/Voter/RoleHierarchyVoterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391762" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Authorization/Voter/RoleVoterTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391229" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Encoder/BasePasswordEncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391647" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Encoder/BCryptPasswordEncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391731" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Encoder/EncoderFactoryTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391700" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Encoder/MessageDigestPasswordEncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391618" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Encoder/Pbkdf2PasswordEncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391472" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Encoder/PlaintextPasswordEncoderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391601" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Role/RoleHierarchyTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391393" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Role/RoleTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391379" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Role/SwitchUserRoleTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392075" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/SecurityContextTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391550" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/User/ChainUserProviderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391239" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/User/UserTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391865" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Util/ClassUtilsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391312" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Util/SecureRandomTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391487" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Util/StringUtilsTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391402" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Validator/Constraints/LegacyUserPasswordValidator2Dot4ApiTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391829" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Validator/Constraints/LegacyUserPasswordValidatorLegacyApiTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391221" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/security-core/Symfony/Component/Security/Core/Tests/Validator/Constraints/UserPasswordValidatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391569" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Catalogue/DiffOperationTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391419" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Catalogue/MergeOperationTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391784" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Dumper/CsvFileDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392058" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Dumper/FileDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391250" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Dumper/IcuResFileDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391848" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Dumper/IniFileDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391426" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Dumper/JsonFileDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391593" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Dumper/MoFileDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391693" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Dumper/PhpFileDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391518" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Dumper/PoFileDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391480" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Dumper/QtFileDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391745" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Dumper/XliffFileDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391341" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Dumper/YamlFileDumperTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391489" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/IdentityTranslatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391862" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/IntervalTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391941" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Loader/CsvFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392085" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Loader/IcuDatFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391627" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Loader/IcuResFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391465" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Loader/IniFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392020" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Loader/JsonFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391562" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Loader/MoFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391574" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Loader/PhpFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391325" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Loader/PoFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391217" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Loader/QtFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391317" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Loader/XliffFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392042" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/Loader/YamlFileLoaderTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391544" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/MessageCatalogueTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392066" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/MessageSelectorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391200" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/PluralizationRulesTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391837" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>0</line>
      <resource><![CDATA[code/vendor/symfony/translation/Symfony/Component/Translation/Tests/TranslatorTest.php]]></resource>
      <title>PHPUnit should be able to run all PHP tests</title>
      <message><![CDATA[This file is not included in any of the tests suites present in the source code (code/phpunit.xml).]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391314" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>34</line>
      <resource><![CDATA[code/app/controllers/WebServiceController.php]]></resource>
      <title>Object parameters should be type hinted</title>
      <message><![CDATA[The parameter service, which is an object, should be typehinted.]]></message>
      <context start-line="29" end-line="39"><![CDATA[            var_dump($result);
        }

        public function example()
        {
            SoapWrapper::add(function ($service) {
                $service->name('s1')->wsdl('http://www.webservicex.net/globalweather.asmx?WSDL');
            });

            $data       = array(
                'CityName'    => 'Santiago',]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391375" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>46</line>
      <resource><![CDATA[code/app/controllers/WebServiceController.php]]></resource>
      <title>Object parameters should be type hinted</title>
      <message><![CDATA[The parameter service, which is an object, should be typehinted.]]></message>
      <context start-line="41" end-line="51"><![CDATA[            );
            $func       = 'GetWeather';
            $funcResult = $func . 'Result';
            // $data       = Func::arrayToXML($data);

            $result = SoapWrapper::service('s1', function ($service) use ($data, $func, $funcResult) {
                // var_dump($service->getFunctions());
                $service->call($func, $data)->$funcResult;
            });
            Func::printr($result);
        }]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391275" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>21</line>
      <resource><![CDATA[code/app/controllers/AdminController.php]]></resource>
      <title>PHP code should follow PSR-1 basic coding standard</title>
      <message><![CDATA[Method names should be declared in camelCase. You should rename this class to comply with PSR-1.]]></message>
      <context start-line="16" end-line="26"><![CDATA[        public function search()
        {
            return View::make('admin.busqueda');
        }

        public function search_result()
        {
            $data = Input::all();
            // var_dump($data);
            $keyword = array_get($data, 'keyword');
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392039" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>73</line>
      <resource><![CDATA[code/app/util/Soaper.php]]></resource>
      <title>PHP code should follow PSR-1 basic coding standard</title>
      <message><![CDATA[Method names should be declared in camelCase. You should rename this class to comply with PSR-1.]]></message>
      <context start-line="68" end-line="78"><![CDATA[         *
         * @param  [type] $function_name [description]
         *
         * @return [type]                [description]
         */
        public function function_name($function_name)
        {
            $this->function_name = (string)$function_name;

            return $this;
        }]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391708" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>85</line>
      <resource><![CDATA[code/app/util/Soaper.php]]></resource>
      <title>PHP code should follow PSR-1 basic coding standard</title>
      <message><![CDATA[Method names should be declared in camelCase. You should rename this class to comply with PSR-1.]]></message>
      <context start-line="80" end-line="90"><![CDATA[        /**
         * [getFunction_name description]
         *
         * @return [description]
         */
        public function getFunction_name()
        {
            return $this->function_name;
        }

        /**]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391410" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>97</line>
      <resource><![CDATA[code/app/util/Soaper.php]]></resource>
      <title>PHP code should follow PSR-1 basic coding standard</title>
      <message><![CDATA[Method names should be declared in camelCase. You should rename this class to comply with PSR-1.]]></message>
      <context start-line="92" end-line="102"><![CDATA[         *
         * @param  [type] $function_result [description]
         *
         * @return [type]                  [description]
         */
        public function function_result($function_result)
        {
            $this->function_result = (string)$function_result;

            return $this;
        }]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391270" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>109</line>
      <resource><![CDATA[code/app/util/Soaper.php]]></resource>
      <title>PHP code should follow PSR-1 basic coding standard</title>
      <message><![CDATA[Method names should be declared in camelCase. You should rename this class to comply with PSR-1.]]></message>
      <context start-line="104" end-line="114"><![CDATA[        /**
         * [getFunction_result description]
         *
         * @return [type] [description]
         */
        public function getFunction_result()
        {
            return $this->function_result;
        }

        /**]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391676" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="codestyle">
      <line>143</line>
      <resource><![CDATA[code/app/util/xml.php]]></resource>
      <title>PHP code should follow PSR-1 basic coding standard</title>
      <message><![CDATA[Method names should be declared in camelCase. You should rename this class to comply with PSR-1.]]></message>
      <context start-line="138" end-line="148"><![CDATA[
            return $arr;
        }

// determine if a variable is an associative array
        public static function is_assoc($array)
        {
            return (is_array($array) && 0 !== count(array_diff_key($array, array_keys(array_keys($array)))));
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391776" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>92</line>
      <resource><![CDATA[code/app/util/xml.php]]></resource>
      <title>Error silenced by the at sign (@)</title>
      <message><![CDATA[Adding "@" before $doc->loadXML(\App\Util\ArrayToXML::fixCDATA($xml->asXML())) prevents warning and errors during this function execution from being displayed.
If you need to do that, you should probably implement a better way to qualify and recover from errors, using Exceptions.]]></message>
      <context start-line="87" end-line="97"><![CDATA[//return $xml->asXML('data.xml');

// if you want the XML to be formatted, use the below instead to return the XML
            $doc                     = new DOMDocument('1.0');
            $doc->preserveWhiteSpace = false;
            @$doc->loadXML(ArrayToXML::fixCDATA($xml->asXML()));
            $doc->formatOutput = true;

//return $doc->saveXML();
            return $doc->save('data.xml');
        }]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391343" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="bugrisk">
      <line>132</line>
      <resource><![CDATA[code/app/util/xml.php]]></resource>
      <title>Boolean should be compared strictly</title>
      <message><![CDATA[With booleans, only strict comparison (with === operator) should be used to lower bug risks and to improve performances.]]></message>
      <context start-line="127" end-line="137"><![CDATA[                $node = ArrayToXML::toArray($node);
// support for 'anon' non-associative arrays
                if ($key == 'anon') $key = count($arr);
// if the node is already set, put it into an array
                if (isset($arr[$key])) {
                    if (!is_array($arr[$key]) || $arr[$key][0] == null) $arr[$key] = array($arr[$key]);
                    $arr[$key][] = $node;
                } else {
                    $arr[$key] = $node;
                }
            }]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391813" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>83</line>
      <resource><![CDATA[code/app/start/global.php]]></resource>
      <title>PHP code should not contain unreachable code</title>
      <message><![CDATA[This code is unreachable.]]></message>
      <context start-line="78" end-line="88"><![CDATA[require app_path() . '/filters.php';
require app_path() . '/util/macros.php';

Auth::extend('dummy', function ($app) {
	return new \App\Util\DummyAuthProvider();
	return new \Illuminate\Auth\Guard(new \App\Util\DummyAuthProvider(), $app['session.store']);
});

Auth::attempting(function ($credentials, $remember, $login) {
	// Log the attempt or some other such activity
});]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391953" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>15</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>PHP code should not contain unreachable code</title>
      <message><![CDATA[This code is unreachable.]]></message>
      <context start-line="10" end-line="13772"><![CDATA[
    namespace {
            exit("This file should not be included, only analyzed by your IDE");
        

    use Illuminate\Support\Arr;
    use Illuminate\Support\Str;

    if (!function_exists('action')) {
        /**
         * Generate a URL to a controller action.
         *
         * @param  string $name
         * @param  array  $parameters
         *
         * @return string
         */
        function action($name, $parameters = array())
        {
            return app('url')->action($name, $parameters);
        }
    }

    if (!function_exists('app')) {
        /**
         * Get the root Facade application instance.
         *
         * @param  string $make
         *
         * @return mixed
         */
        function app($make = null)
        {
            if (!is_null($make)) {
                return app()->make($make);
            }

            return Illuminate\Support\Facades\Facade::getFacadeApplication();
        }
    }

    if (!function_exists('app_path')) {
        /**
         * Get the path to the application folder.
         *
         * @param  string $path
         *
         * @return string
         */
        function app_path($path = '')
        {
            return app('path') . ($path ? '/' . $path : $path);
        }
    }

    if (!function_exists('append_config')) {
        /**
         * Assign high numeric IDs to a config item to force appending.
         *
         * @param  array $array
         *
         * @return array
         */
        function append_config(array $array)
        {
            $start = 9999;

            foreach ($array as $key => $value) {
                if (is_numeric($key)) {
                    $start++;

                    $array[$start] = array_pull($array, $key);
                }
            }

            return $array;
        }
    }

    if (!function_exists('array_add')) {
        /**
         * Add an element to an array using "dot" notation if it doesn't exist.
         *
         * @param  array  $array
         * @param  string $key
         * @param  mixed  $value
         *
         * @return array
         */
        function array_add($array, $key, $value)
        {
            return Arr::add($array, $key, $value);
        }
    }

    if (!function_exists('array_build')) {
        /**
         * Build a new array using a callback.
         *
         * @param  array    $array
         * @param  \Closure $callback
         *
         * @return array
         */
        function array_build($array, Closure $callback)
        {
            return Arr::build($array, $callback);
        }
    }

    if (!function_exists('array_divide')) {
        /**
         * Divide an array into two arrays. One with keys and the other with values.
         *
         * @param  array $array
         *
         * @return array
         */
        function array_divide($array)
        {
            return Arr::divide($array);
        }
    }

    if (!function_exists('array_dot')) {
        /**
         * Flatten a multi-dimensional associative array with dots.
         *
         * @param  array  $array
         * @param  string $prepend
         *
         * @return array
         */
        function array_dot($array, $prepend = '')
        {
            return Arr::dot($array, $prepend);
        }
    }

    if (!function_exists('array_except')) {
        /**
         * Get all of the given array except for a specified array of items.
         *
         * @param  array        $array
         * @param  array|string $keys
         *
         * @return array
         */
        function array_except($array, $keys)
        {
            return Arr::except($array, $keys);
        }
    }

    if (!function_exists('array_fetch')) {
        /**
         * Fetch a flattened array of a nested array element.
         *
         * @param  array  $array
         * @param  string $key
         *
         * @return array
         */
        function array_fetch($array, $key)
        {
            return Arr::fetch($array, $key);
        }
    }

    if (!function_exists('array_first')) {
        /**
         * Return the first element in an array passing a given truth test.
         *
         * @param  array    $array
         * @param  \Closure $callback
         * @param  mixed    $default
         *
         * @return mixed
         */
        function array_first($array, $callback, $default = null)
        {
            return Arr::first($array, $callback, $default);
        }
    }

    if (!function_exists('array_last')) {
        /**
         * Return the last element in an array passing a given truth test.
         *
         * @param  array    $array
         * @param  \Closure $callback
         * @param  mixed    $default
         *
         * @return mixed
         */
        function array_last($array, $callback, $default = null)
        {
            return Arr::last($array, $callback, $default);
        }
    }

    if (!function_exists('array_flatten')) {
        /**
         * Flatten a multi-dimensional array into a single level.
         *
         * @param  array $array
         *
         * @return array
         */
        function array_flatten($array)
        {
            return Arr::flatten($array);
        }
    }

    if (!function_exists('array_forget')) {
        /**
         * Remove one or many array items from a given array using "dot" notation.
         *
         * @param  array        $array
         * @param  array|string $keys
         *
         * @return void
         */
        function array_forget(&$array, $keys)
        {
            return Arr::forget($array, $keys);
        }
    }

    if (!function_exists('array_get')) {
        /**
         * Get an item from an array using "dot" notation.
         *
         * @param  array  $array
         * @param  string $key
         * @param  mixed  $default
         *
         * @return mixed
         */
        function array_get($array, $key, $default = null)
        {
            return Arr::get($array, $key, $default);
        }
    }

    if (!function_exists('array_only')) {
        /**
         * Get a subset of the items from the given array.
         *
         * @param  array        $array
         * @param  array|string $keys
         *
         * @return array
         */
        function array_only($array, $keys)
        {
            return Arr::only($array, $keys);
        }
    }

    if (!function_exists('array_pluck')) {
        /**
         * Pluck an array of values from an array.
         *
         * @param  array  $array
         * @param  string $value
         * @param  string $key
         *
         * @return array
         */
        function array_pluck($array, $value, $key = null)
        {
            return Arr::pluck($array, $value, $key);
        }
    }

    if (!function_exists('array_pull')) {
        /**
         * Get a value from the array, and remove it.
         *
         * @param  array  $array
         * @param  string $key
         * @param  mixed  $default
         *
         * @return mixed
         */
        function array_pull(&$array, $key, $default = null)
        {
            return Arr::pull($array, $key, $default);
        }
    }

    if (!function_exists('array_set')) {
        /**
         * Set an array item to a given value using "dot" notation.
         *
         * If no key is given to the method, the entire array will be replaced.
         *
         * @param  array  $array
         * @param  string $key
         * @param  mixed  $value
         *
         * @return array
         */
        function array_set(&$array, $key, $value)
        {
            return Arr::set($array, $key, $value);
        }
    }

    if (!function_exists('array_sort')) {
        /**
         * Sort the array using the given Closure.
         *
         * @param  array    $array
         * @param  \Closure $callback
         *
         * @return array
         */
        function array_sort($array, Closure $callback)
        {
            return Arr::sort($array, $callback);
        }
    }

    if (!function_exists('array_where')) {
        /**
         * Filter the array using the given Closure.
         *
         * @param  array    $array
         * @param  \Closure $callback
         *
         * @return array
         */
        function array_where($array, Closure $callback)
        {
            return Arr::where($array, $callback);
        }
    }

    if (!function_exists('asset')) {
        /**
         * Generate an asset path for the application.
         *
         * @param  string $path
         * @param  bool   $secure
         *
         * @return string
         */
        function asset($path, $secure = null)
        {
            return app('url')->asset($path, $secure);
        }
    }

    if (!function_exists('base_path')) {
        /**
         * Get the path to the base of the install.
         *
         * @param  string $path
         *
         * @return string
         */
        function base_path($path = '')
        {
            return app()->make('path.base') . ($path ? '/' . $path : $path);
        }
    }

    if (!function_exists('camel_case')) {
        /**
         * Convert a value to camel case.
         *
         * @param  string $value
         *
         * @return string
         */
        function camel_case($value)
        {
            return Str::camel($value);
        }
    }

    if (!function_exists('class_basename')) {
        /**
         * Get the class "basename" of the given object / class.
         *
         * @param  string|object $class
         *
         * @return string
         */
        function class_basename($class)
        {
            $class = is_object($class) ? get_class($class) : $class;

            return basename(str_replace('\\', '/', $class));
        }
    }

    if (!function_exists('class_uses_recursive')) {
        /**
         * Returns all traits used by a class, it's subclasses and trait of their traits
         *
         * @param  string $class
         *
         * @return array
         */
        function class_uses_recursive($class)
        {
            $results = [];

            foreach (array_merge([$class => $class], class_parents($class)) as $class) {
                $results += trait_uses_recursive($class);
            }

            return array_unique($results);
        }
    }

    if (!function_exists('csrf_token')) {
        /**
         * Get the CSRF token value.
         *
         * @return string
         *
         * @throws RuntimeException
         */
        function csrf_token()
        {
            $session = app('session');

            if (isset($session)) {
                return $session->getToken();
            }

            throw new RuntimeException("Application session store not set.");
        }
    }

    if (!function_exists('data_get')) {
        /**
         * Get an item from an array or object using "dot" notation.
         *
         * @param  mixed  $target
         * @param  string $key
         * @param  mixed  $default
         *
         * @return mixed
         */
        function data_get($target, $key, $default = null)
        {
            if (is_null($key)) return $target;

            foreach (explode('.', $key) as $segment) {
                if (is_array($target)) {
                    if (!array_key_exists($segment, $target)) {
                        return value($default);
                    }

                    $target = $target[$segment];
                } elseif (is_object($target)) {
                    if (!isset($target->{$segment})) {
                        return value($default);
                    }

                    $target = $target->{$segment};
                } else {
                    return value($default);
                }
            }

            return $target;
        }
    }

    if (!function_exists('dd')) {
        /**
         * Dump the passed variables and end the script.
         *
         * @param  mixed
         *
         * @return void
         */
        function dd()
        {
            array_map(function ($x) {
                var_dump($x);
            }, func_get_args());
            die;
        }
    }

    if (!function_exists('e')) {
        /**
         * Escape HTML entities in a string.
         *
         * @param  string $value
         *
         * @return string
         */
        function e($value)
        {
            return htmlentities($value, ENT_QUOTES, 'UTF-8', false);
        }
    }

    if (!function_exists('ends_with')) {
        /**
         * Determine if a given string ends with a given substring.
         *
         * @param  string       $haystack
         * @param  string|array $needles
         *
         * @return bool
         */
        function ends_with($haystack, $needles)
        {
            return Str::endsWith($haystack, $needles);
        }
    }

    if (!function_exists('head')) {
        /**
         * Get the first element of an array. Useful for method chaining.
         *
         * @param  array $array
         *
         * @return mixed
         */
        function head($array)
        {
            return reset($array);
        }
    }

    if (!function_exists('link_to')) {
        /**
         * Generate a HTML link.
         *
         * @param  string $url
         * @param  string $title
         * @param  array  $attributes
         * @param  bool   $secure
         *
         * @return string
         */
        function link_to($url, $title = null, $attributes = array(), $secure = null)
        {
            return app('html')->link($url, $title, $attributes, $secure);
        }
    }

    if (!function_exists('last')) {
        /**
         * Get the last element from an array.
         *
         * @param  array $array
         *
         * @return mixed
         */
        function last($array)
        {
            return end($array);
        }
    }

    if (!function_exists('link_to_asset')) {
        /**
         * Generate a HTML link to an asset.
         *
         * @param  string $url
         * @param  string $title
         * @param  array  $attributes
         * @param  bool   $secure
         *
         * @return string
         */
        function link_to_asset($url, $title = null, $attributes = array(), $secure = null)
        {
            return app('html')->linkAsset($url, $title, $attributes, $secure);
        }
    }

    if (!function_exists('link_to_route')) {
        /**
         * Generate a HTML link to a named route.
         *
         * @param  string $name
         * @param  string $title
         * @param  array  $parameters
         * @param  array  $attributes
         *
         * @return string
         */
        function link_to_route($name, $title = null, $parameters = array(), $attributes = array())
        {
            return app('html')->linkRoute($name, $title, $parameters, $attributes);
        }
    }

    if (!function_exists('link_to_action')) {
        /**
         * Generate a HTML link to a controller action.
         *
         * @param  string $action
         * @param  string $title
         * @param  array  $parameters
         * @param  array  $attributes
         *
         * @return string
         */
        function link_to_action($action, $title = null, $parameters = array(), $attributes = array())
        {
            return app('html')->linkAction($action, $title, $parameters, $attributes);
        }
    }

    if (!function_exists('object_get')) {
        /**
         * Get an item from an object using "dot" notation.
         *
         * @param  object $object
         * @param  string $key
         * @param  mixed  $default
         *
         * @return mixed
         */
        function object_get($object, $key, $default = null)
        {
            if (is_null($key) || trim($key) == '') return $object;

            foreach (explode('.', $key) as $segment) {
                if (!is_object($object) || !isset($object->{$segment})) {
                    return value($default);
                }

                $object = $object->{$segment};
            }

            return $object;
        }
    }

    if (!function_exists('preg_replace_sub')) {
        /**
         * Replace a given pattern with each value in the array in sequentially.
         *
         * @param  string $pattern
         * @param  array  $replacements
         * @param  string $subject
         *
         * @return string
         */
        function preg_replace_sub($pattern, &$replacements, $subject)
        {
            return preg_replace_callback($pattern, function ($match) use (&$replacements) {
                return array_shift($replacements);

            }, $subject);
        }
    }

    if (!function_exists('public_path')) {
        /**
         * Get the path to the public folder.
         *
         * @param  string $path
         *
         * @return string
         */
        function public_path($path = '')
        {
            return app()->make('path.public') . ($path ? '/' . $path : $path);
        }
    }

    if (!function_exists('route')) {
        /**
         * Generate a URL to a named route.
         *
         * @param  string                    $name
         * @param  array                     $parameters
         * @param  bool                      $absolute
         * @param  \Illuminate\Routing\Route $route
         *
         * @return string
         */
        function route($name, $parameters = array(), $absolute = true, $route = null)
        {
            return app('url')->route($name, $parameters, $absolute, $route);
        }
    }

    if (!function_exists('secure_asset')) {
        /**
         * Generate an asset path for the application.
         *
         * @param  string $path
         *
         * @return string
         */
        function secure_asset($path)
        {
            return asset($path, true);
        }
    }

    if (!function_exists('secure_url')) {
        /**
         * Generate a HTTPS url for the application.
         *
         * @param  string $path
         * @param  mixed  $parameters
         *
         * @return string
         */
        function secure_url($path, $parameters = array())
        {
            return url($path, $parameters, true);
        }
    }

    if (!function_exists('snake_case')) {
        /**
         * Convert a string to snake case.
         *
         * @param  string $value
         * @param  string $delimiter
         *
         * @return string
         */
        function snake_case($value, $delimiter = '_')
        {
            return Str::snake($value, $delimiter);
        }
    }

    if (!function_exists('starts_with')) {
        /**
         * Determine if a given string starts with a given substring.
         *
         * @param  string       $haystack
         * @param  string|array $needles
         *
         * @return bool
         */
        function starts_with($haystack, $needles)
        {
            return Str::startsWith($haystack, $needles);
        }
    }

    if (!function_exists('storage_path')) {
        /**
         * Get the path to the storage folder.
         *
         * @param   string $path
         *
         * @return  string
         */
        function storage_path($path = '')
        {
            return app('path.storage') . ($path ? '/' . $path : $path);
        }
    }

    if (!function_exists('str_contains')) {
        /**
         * Determine if a given string contains a given substring.
         *
         * @param  string       $haystack
         * @param  string|array $needles
         *
         * @return bool
         */
        function str_contains($haystack, $needles)
        {
            return Str::contains($haystack, $needles);
        }
    }

    if (!function_exists('str_finish')) {
        /**
         * Cap a string with a single instance of a given value.
         *
         * @param  string $value
         * @param  string $cap
         *
         * @return string
         */
        function str_finish($value, $cap)
        {
            return Str::finish($value, $cap);
        }
    }

    if (!function_exists('str_is')) {
        /**
         * Determine if a given string matches a given pattern.
         *
         * @param  string $pattern
         * @param  string $value
         *
         * @return bool
         */
        function str_is($pattern, $value)
        {
            return Str::is($pattern, $value);
        }
    }

    if (!function_exists('str_limit')) {
        /**
         * Limit the number of characters in a string.
         *
         * @param  string $value
         * @param  int    $limit
         * @param  string $end
         *
         * @return string
         */
        function str_limit($value, $limit = 100, $end = '...')
        {
            return Str::limit($value, $limit, $end);
        }
    }

    if (!function_exists('str_plural')) {
        /**
         * Get the plural form of an English word.
         *
         * @param  string $value
         * @param  int    $count
         *
         * @return string
         */
        function str_plural($value, $count = 2)
        {
            return Str::plural($value, $count);
        }
    }

    if (!function_exists('str_random')) {
        /**
         * Generate a more truly "random" alpha-numeric string.
         *
         * @param  int $length
         *
         * @return string
         *
         * @throws \RuntimeException
         */
        function str_random($length = 16)
        {
            return Str::random($length);
        }
    }

    if (!function_exists('str_replace_array')) {
        /**
         * Replace a given value in the string sequentially with an array.
         *
         * @param  string $search
         * @param  array  $replace
         * @param  string $subject
         *
         * @return string
         */
        function str_replace_array($search, array $replace, $subject)
        {
            foreach ($replace as $value) {
                $subject = preg_replace('/' . $search . '/', $value, $subject, 1);
            }

            return $subject;
        }
    }

    if (!function_exists('str_singular')) {
        /**
         * Get the singular form of an English word.
         *
         * @param  string $value
         *
         * @return string
         */
        function str_singular($value)
        {
            return Str::singular($value);
        }
    }

    if (!function_exists('studly_case')) {
        /**
         * Convert a value to studly caps case.
         *
         * @param  string $value
         *
         * @return string
         */
        function studly_case($value)
        {
            return Str::studly($value);
        }
    }

    if (!function_exists('trait_uses_recursive')) {
        /**
         * Returns all traits used by a trait and its traits
         *
         * @param  string $trait
         *
         * @return array
         */
        function trait_uses_recursive($trait)
        {
            $traits = class_uses($trait);

            foreach ($traits as $trait) {
                $traits += trait_uses_recursive($trait);
            }

            return $traits;
        }
    }

    if (!function_exists('trans')) {
        /**
         * Translate the given message.
         *
         * @param  string $id
         * @param  array  $parameters
         * @param  string $domain
         * @param  string $locale
         *
         * @return string
         */
        function trans($id, $parameters = array(), $domain = 'messages', $locale = null)
        {
            return app('translator')->trans($id, $parameters, $domain, $locale);
        }
    }

    if (!function_exists('trans_choice')) {
        /**
         * Translates the given message based on a count.
         *
         * @param  string $id
         * @param  int    $number
         * @param  array  $parameters
         * @param  string $domain
         * @param  string $locale
         *
         * @return string
         */
        function trans_choice($id, $number, array $parameters = array(), $domain = 'messages', $locale = null)
        {
            return app('translator')->transChoice($id, $number, $parameters, $domain, $locale);
        }
    }

    if (!function_exists('url')) {
        /**
         * Generate a url for the application.
         *
         * @param  string $path
         * @param  mixed  $parameters
         * @param  bool   $secure
         *
         * @return string
         */
        function url($path = null, $parameters = array(), $secure = null)
        {
            return app('url')->to($path, $parameters, $secure);
        }
    }

    if (!function_exists('value')) {
        /**
         * Return the default value of the given value.
         *
         * @param  mixed $value
         *
         * @return mixed
         */
        function value($value)
        {
            return $value instanceof Closure ? $value() : $value;
        }
    }

    if (!function_exists('with')) {
        /**
         * Return the given object. Useful for chaining.
         *
         * @param  mixed $object
         *
         * @return mixed
         */
        function with($object)
        {
            return $object;
        }
    }
        
        class App extends \Illuminate\Support\Facades\App{
        
            /**
         * Bind the installation paths to the application.
         *
         * @param array $paths
         * @return void 
         * @static 
         */
            public static function bindInstallPaths($paths){
            \Illuminate\Foundation\Application::bindInstallPaths($paths);
            }
        
            /**
         * Get the application bootstrap file.
         *
         * @return string 
         * @static 
         */
            public static function getBootstrapFile(){
            return \Illuminate\Foundation\Application::getBootstrapFile();
            }
        
            /**
         * Start the exception handling for the request.
         *
         * @return void 
         * @static 
         */
            public static function startExceptionHandling(){
            \Illuminate\Foundation\Application::startExceptionHandling();
            }
        
            /**
         * Get or check the current application environment.
         *
         * @param mixed
         * @return string 
         * @static 
         */
            public static function environment(){
            return \Illuminate\Foundation\Application::environment();
            }
        
            /**
         * Determine if application is in local environment.
         *
         * @return bool 
         * @static 
         */
            public static function isLocal(){
            return \Illuminate\Foundation\Application::isLocal();
            }
        
            /**
         * Detect the application's current environment.
         *
         * @param array|string $envs
         * @return string 
         * @static 
         */
            public static function detectEnvironment($envs){
            return \Illuminate\Foundation\Application::detectEnvironment($envs);
            }
        
            /**
         * Determine if we are running in the console.
         *
         * @return bool 
         * @static 
         */
            public static function runningInConsole(){
            return \Illuminate\Foundation\Application::runningInConsole();
            }
        
            /**
         * Determine if we are running unit tests.
         *
         * @return bool 
         * @static 
         */
            public static function runningUnitTests(){
            return \Illuminate\Foundation\Application::runningUnitTests();
            }
        
            /**
         * Force register a service provider with the application.
         *
         * @param \Illuminate\Support\ServiceProvider|string $provider
         * @param array $options
         * @return \Illuminate\Support\ServiceProvider 
         * @static 
         */
            public static function forceRegister($provider, $options = array()){
            return \Illuminate\Foundation\Application::forceRegister($provider, $options);
            }
        
            /**
         * Register a service provider with the application.
         *
         * @param \Illuminate\Support\ServiceProvider|string $provider
         * @param array $options
         * @param bool $force
         * @return \Illuminate\Support\ServiceProvider 
         * @static 
         */
            public static function register($provider, $options = array(), $force = false){
            return \Illuminate\Foundation\Application::register($provider, $options, $force);
            }
        
            /**
         * Get the registered service provider instance if it exists.
         *
         * @param \Illuminate\Support\ServiceProvider|string $provider
         * @return \Illuminate\Support\ServiceProvider|null 
         * @static 
         */
            public static function getRegistered($provider){
            return \Illuminate\Foundation\Application::getRegistered($provider);
            }
        
            /**
         * Resolve a service provider instance from the class name.
         *
         * @param string $provider
         * @return \Illuminate\Support\ServiceProvider 
         * @static 
         */
            public static function resolveProviderClass($provider){
            return \Illuminate\Foundation\Application::resolveProviderClass($provider);
            }
        
            /**
         * Load and boot all of the remaining deferred providers.
         *
         * @return void 
         * @static 
         */
            public static function loadDeferredProviders(){
            \Illuminate\Foundation\Application::loadDeferredProviders();
            }
        
            /**
         * Register a deferred provider and service.
         *
         * @param string $provider
         * @param string $service
         * @return void 
         * @static 
         */
            public static function registerDeferredProvider($provider, $service = null){
            \Illuminate\Foundation\Application::registerDeferredProvider($provider, $service);
            }
        
            /**
         * Resolve the given type from the container.
         * 
         * (Overriding Container::make)
         *
         * @param string $abstract
         * @param array $parameters
         * @return mixed 
         * @static 
         */
            public static function make($abstract, $parameters = array()){
            return \Illuminate\Foundation\Application::make($abstract, $parameters);
            }
        
            /**
         * Determine if the given abstract type has been bound.
         * 
         * (Overriding Container::bound)
         *
         * @param string $abstract
         * @return bool 
         * @static 
         */
            public static function bound($abstract){
            return \Illuminate\Foundation\Application::bound($abstract);
            }
        
            /**
         * "Extend" an abstract type in the container.
         * 
         * (Overriding Container::extend)
         *
         * @param string $abstract
         * @param \Closure $closure
         * @return void 
         * @throws \InvalidArgumentException
         * @static 
         */
            public static function extend($abstract, $closure){
            \Illuminate\Foundation\Application::extend($abstract, $closure);
            }
        
            /**
         * Register a "before" application filter.
         *
         * @param \Closure|string $callback
         * @return void 
         * @static 
         */
            public static function before($callback){
            \Illuminate\Foundation\Application::before($callback);
            }
        
            /**
         * Register an "after" application filter.
         *
         * @param \Closure|string $callback
         * @return void 
         * @static 
         */
            public static function after($callback){
            \Illuminate\Foundation\Application::after($callback);
            }
        
            /**
         * Register a "finish" application filter.
         *
         * @param \Closure|string $callback
         * @return void 
         * @static 
         */
            public static function finish($callback){
            \Illuminate\Foundation\Application::finish($callback);
            }
        
            /**
         * Register a "shutdown" callback.
         *
         * @param callable $callback
         * @return void 
         * @static 
         */
            public static function shutdown($callback = null){
            \Illuminate\Foundation\Application::shutdown($callback);
            }
        
            /**
         * Register a function for determining when to use array sessions.
         *
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function useArraySessions($callback){
            \Illuminate\Foundation\Application::useArraySessions($callback);
            }
        
            /**
         * Determine if the application has booted.
         *
         * @return bool 
         * @static 
         */
            public static function isBooted(){
            return \Illuminate\Foundation\Application::isBooted();
            }
        
            /**
         * Boot the application's service providers.
         *
         * @return void 
         * @static 
         */
            public static function boot(){
            \Illuminate\Foundation\Application::boot();
            }
        
            /**
         * Register a new boot listener.
         *
         * @param mixed $callback
         * @return void 
         * @static 
         */
            public static function booting($callback){
            \Illuminate\Foundation\Application::booting($callback);
            }
        
            /**
         * Register a new "booted" listener.
         *
         * @param mixed $callback
         * @return void 
         * @static 
         */
            public static function booted($callback){
            \Illuminate\Foundation\Application::booted($callback);
            }
        
            /**
         * Run the application and send the response.
         *
         * @param \Symfony\Component\HttpFoundation\Request $request
         * @return void 
         * @static 
         */
            public static function run($request = null){
            \Illuminate\Foundation\Application::run($request);
            }
        
            /**
         * Add a HttpKernel middleware onto the stack.
         *
         * @param string $class
         * @param array $parameters
         * @return $this 
         * @static 
         */
            public static function middleware($class, $parameters = array()){
            return \Illuminate\Foundation\Application::middleware($class, $parameters);
            }
        
            /**
         * Remove a custom middleware from the application.
         *
         * @param string $class
         * @return void 
         * @static 
         */
            public static function forgetMiddleware($class){
            \Illuminate\Foundation\Application::forgetMiddleware($class);
            }
        
            /**
         * Handle the given request and get the response.
         * 
         * Provides compatibility with BrowserKit functional testing.
         *
         * @implements HttpKernelInterface::handle
         * @param \Symfony\Component\HttpFoundation\Request $request
         * @param int $type
         * @param bool $catch
         * @return \Symfony\Component\HttpFoundation\Response 
         * @throws \Exception
         * @static 
         */
            public static function handle($request, $type = 1, $catch = true){
            return \Illuminate\Foundation\Application::handle($request, $type, $catch);
            }
        
            /**
         * Handle the given request and get the response.
         *
         * @param \Illuminate\Http\Request $request
         * @return \Symfony\Component\HttpFoundation\Response 
         * @static 
         */
            public static function dispatch($request){
            return \Illuminate\Foundation\Application::dispatch($request);
            }
        
            /**
         * Terminate the request and send the response to the browser.
         *
         * @param \Symfony\Component\HttpFoundation\Request $request
         * @param \Symfony\Component\HttpFoundation\Response $response
         * @return void 
         * @static 
         */
            public static function terminate($request, $response){
            \Illuminate\Foundation\Application::terminate($request, $response);
            }
        
            /**
         * Call the "finish" callbacks assigned to the application.
         *
         * @param \Symfony\Component\HttpFoundation\Request $request
         * @param \Symfony\Component\HttpFoundation\Response $response
         * @return void 
         * @static 
         */
            public static function callFinishCallbacks($request, $response){
            \Illuminate\Foundation\Application::callFinishCallbacks($request, $response);
            }
        
            /**
         * Prepare the request by injecting any services.
         *
         * @param \Illuminate\Http\Request $request
         * @return \Illuminate\Http\Request 
         * @static 
         */
            public static function prepareRequest($request){
            return \Illuminate\Foundation\Application::prepareRequest($request);
            }
        
            /**
         * Prepare the given value as a Response object.
         *
         * @param mixed $value
         * @return \Symfony\Component\HttpFoundation\Response 
         * @static 
         */
            public static function prepareResponse($value){
            return \Illuminate\Foundation\Application::prepareResponse($value);
            }
        
            /**
         * Determine if the application is ready for responses.
         *
         * @return bool 
         * @static 
         */
            public static function readyForResponses(){
            return \Illuminate\Foundation\Application::readyForResponses();
            }
        
            /**
         * Determine if the application is currently down for maintenance.
         *
         * @return bool 
         * @static 
         */
            public static function isDownForMaintenance(){
            return \Illuminate\Foundation\Application::isDownForMaintenance();
            }
        
            /**
         * Register a maintenance mode event listener.
         *
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function down($callback){
            \Illuminate\Foundation\Application::down($callback);
            }
        
            /**
         * Throw an HttpException with the given data.
         *
         * @param int $code
         * @param string $message
         * @param array $headers
         * @return void 
         * @throws \Symfony\Component\HttpKernel\Exception\HttpException
         * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
         * @static 
         */
            public static function abort($code, $message = '', $headers = array()){
            \Illuminate\Foundation\Application::abort($code, $message, $headers);
            }
        
            /**
         * Register a 404 error handler.
         *
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function missing($callback){
            \Illuminate\Foundation\Application::missing($callback);
            }
        
            /**
         * Register an application error handler.
         *
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function error($callback){
            \Illuminate\Foundation\Application::error($callback);
            }
        
            /**
         * Register an error handler at the bottom of the stack.
         *
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function pushError($callback){
            \Illuminate\Foundation\Application::pushError($callback);
            }
        
            /**
         * Register an error handler for fatal errors.
         *
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function fatal($callback){
            \Illuminate\Foundation\Application::fatal($callback);
            }
        
            /**
         * Get the configuration loader instance.
         *
         * @return \Illuminate\Config\LoaderInterface 
         * @static 
         */
            public static function getConfigLoader(){
            return \Illuminate\Foundation\Application::getConfigLoader();
            }
        
            /**
         * Get the environment variables loader instance.
         *
         * @return \Illuminate\Config\EnvironmentVariablesLoaderInterface 
         * @static 
         */
            public static function getEnvironmentVariablesLoader(){
            return \Illuminate\Foundation\Application::getEnvironmentVariablesLoader();
            }
        
            /**
         * Get the service provider repository instance.
         *
         * @return \Illuminate\Foundation\ProviderRepository 
         * @static 
         */
            public static function getProviderRepository(){
            return \Illuminate\Foundation\Application::getProviderRepository();
            }
        
            /**
         * Get the service providers that have been loaded.
         *
         * @return array 
         * @static 
         */
            public static function getLoadedProviders(){
            return \Illuminate\Foundation\Application::getLoadedProviders();
            }
        
            /**
         * Set the application's deferred services.
         *
         * @param array $services
         * @return void 
         * @static 
         */
            public static function setDeferredServices($services){
            \Illuminate\Foundation\Application::setDeferredServices($services);
            }
        
            /**
         * Determine if the given service is a deferred service.
         *
         * @param string $service
         * @return bool 
         * @static 
         */
            public static function isDeferredService($service){
            return \Illuminate\Foundation\Application::isDeferredService($service);
            }
        
            /**
         * Get or set the request class for the application.
         *
         * @param string $class
         * @return string 
         * @static 
         */
            public static function requestClass($class = null){
            return \Illuminate\Foundation\Application::requestClass($class);
            }
        
            /**
         * Set the application request for the console environment.
         *
         * @return void 
         * @static 
         */
            public static function setRequestForConsoleEnvironment(){
            \Illuminate\Foundation\Application::setRequestForConsoleEnvironment();
            }
        
            /**
         * Call a method on the default request class.
         *
         * @param string $method
         * @param array $parameters
         * @return mixed 
         * @static 
         */
            public static function onRequest($method, $parameters = array()){
            return \Illuminate\Foundation\Application::onRequest($method, $parameters);
            }
        
            /**
         * Get the current application locale.
         *
         * @return string 
         * @static 
         */
            public static function getLocale(){
            return \Illuminate\Foundation\Application::getLocale();
            }
        
            /**
         * Set the current application locale.
         *
         * @param string $locale
         * @return void 
         * @static 
         */
            public static function setLocale($locale){
            \Illuminate\Foundation\Application::setLocale($locale);
            }
        
            /**
         * Register the core class aliases in the container.
         *
         * @return void 
         * @static 
         */
            public static function registerCoreContainerAliases(){
            \Illuminate\Foundation\Application::registerCoreContainerAliases();
            }
        
            /**
         * Determine if the given abstract type has been resolved.
         *
         * @param string $abstract
         * @return bool 
         * @static 
         */
            public static function resolved($abstract){
                //Method inherited from \Illuminate\Container\Container            
            return \Illuminate\Foundation\Application::resolved($abstract);
            }
        
            /**
         * Determine if a given string is an alias.
         *
         * @param string $name
         * @return bool 
         * @static 
         */
            public static function isAlias($name){
                //Method inherited from \Illuminate\Container\Container            
            return \Illuminate\Foundation\Application::isAlias($name);
            }
        
            /**
         * Register a binding with the container.
         *
         * @param string|array $abstract
         * @param \Closure|string|null $concrete
         * @param bool $shared
         * @return void 
         * @static 
         */
            public static function bind($abstract, $concrete = null, $shared = false){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::bind($abstract, $concrete, $shared);
            }
        
            /**
         * Register a binding if it hasn't already been registered.
         *
         * @param string $abstract
         * @param \Closure|string|null $concrete
         * @param bool $shared
         * @return void 
         * @static 
         */
            public static function bindIf($abstract, $concrete = null, $shared = false){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::bindIf($abstract, $concrete, $shared);
            }
        
            /**
         * Register a shared binding in the container.
         *
         * @param string $abstract
         * @param \Closure|string|null $concrete
         * @return void 
         * @static 
         */
            public static function singleton($abstract, $concrete = null){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::singleton($abstract, $concrete);
            }
        
            /**
         * Wrap a Closure such that it is shared.
         *
         * @param \Closure $closure
         * @return \Closure 
         * @static 
         */
            public static function share($closure){
                //Method inherited from \Illuminate\Container\Container            
            return \Illuminate\Foundation\Application::share($closure);
            }
        
            /**
         * Bind a shared Closure into the container.
         *
         * @param string $abstract
         * @param \Closure $closure
         * @return void 
         * @static 
         */
            public static function bindShared($abstract, $closure){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::bindShared($abstract, $closure);
            }
        
            /**
         * Register an existing instance as shared in the container.
         *
         * @param string $abstract
         * @param mixed $instance
         * @return void 
         * @static 
         */
            public static function instance($abstract, $instance){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::instance($abstract, $instance);
            }
        
            /**
         * Alias a type to a shorter name.
         *
         * @param string $abstract
         * @param string $alias
         * @return void 
         * @static 
         */
            public static function alias($abstract, $alias){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::alias($abstract, $alias);
            }
        
            /**
         * Bind a new callback to an abstract's rebind event.
         *
         * @param string $abstract
         * @param \Closure $callback
         * @return mixed 
         * @static 
         */
            public static function rebinding($abstract, $callback){
                //Method inherited from \Illuminate\Container\Container            
            return \Illuminate\Foundation\Application::rebinding($abstract, $callback);
            }
        
            /**
         * Refresh an instance on the given target and method.
         *
         * @param string $abstract
         * @param mixed $target
         * @param string $method
         * @return mixed 
         * @static 
         */
            public static function refresh($abstract, $target, $method){
                //Method inherited from \Illuminate\Container\Container            
            return \Illuminate\Foundation\Application::refresh($abstract, $target, $method);
            }
        
            /**
         * Instantiate a concrete instance of the given type.
         *
         * @param string $concrete
         * @param array $parameters
         * @return mixed 
         * @throws BindingResolutionException
         * @static 
         */
            public static function build($concrete, $parameters = array()){
                //Method inherited from \Illuminate\Container\Container            
            return \Illuminate\Foundation\Application::build($concrete, $parameters);
            }
        
            /**
         * Register a new resolving callback.
         *
         * @param string $abstract
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function resolving($abstract, $callback){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::resolving($abstract, $callback);
            }
        
            /**
         * Register a new resolving callback for all types.
         *
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function resolvingAny($callback){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::resolvingAny($callback);
            }
        
            /**
         * Determine if a given type is shared.
         *
         * @param string $abstract
         * @return bool 
         * @static 
         */
            public static function isShared($abstract){
                //Method inherited from \Illuminate\Container\Container            
            return \Illuminate\Foundation\Application::isShared($abstract);
            }
        
            /**
         * Get the container's bindings.
         *
         * @return array 
         * @static 
         */
            public static function getBindings(){
                //Method inherited from \Illuminate\Container\Container            
            return \Illuminate\Foundation\Application::getBindings();
            }
        
            /**
         * Remove a resolved instance from the instance cache.
         *
         * @param string $abstract
         * @return void 
         * @static 
         */
            public static function forgetInstance($abstract){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::forgetInstance($abstract);
            }
        
            /**
         * Clear all of the instances from the container.
         *
         * @return void 
         * @static 
         */
            public static function forgetInstances(){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::forgetInstances();
            }
        
            /**
         * Determine if a given offset exists.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function offsetExists($key){
                //Method inherited from \Illuminate\Container\Container            
            return \Illuminate\Foundation\Application::offsetExists($key);
            }
        
            /**
         * Get the value at a given offset.
         *
         * @param string $key
         * @return mixed 
         * @static 
         */
            public static function offsetGet($key){
                //Method inherited from \Illuminate\Container\Container            
            return \Illuminate\Foundation\Application::offsetGet($key);
            }
        
            /**
         * Set the value at a given offset.
         *
         * @param string $key
         * @param mixed $value
         * @return void 
         * @static 
         */
            public static function offsetSet($key, $value){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::offsetSet($key, $value);
            }
        
            /**
         * Unset the value at a given offset.
         *
         * @param string $key
         * @return void 
         * @static 
         */
            public static function offsetUnset($key){
                //Method inherited from \Illuminate\Container\Container            
            \Illuminate\Foundation\Application::offsetUnset($key);
            }
        
        }

    
        class Artisan extends \Illuminate\Support\Facades\Artisan{
        
            /**
         * Create and boot a new Console application.
         *
         * @param \Illuminate\Foundation\Application $app
         * @return \Illuminate\Console\Application 
         * @static 
         */
            public static function start($app){
            return \Illuminate\Console\Application::start($app);
            }
        
            /**
         * Create a new Console application.
         *
         * @param \Illuminate\Foundation\Application $app
         * @return \Illuminate\Console\Application 
         * @static 
         */
            public static function make($app){
            return \Illuminate\Console\Application::make($app);
            }
        
            /**
         * Boot the Console application.
         *
         * @return $this 
         * @static 
         */
            public static function boot(){
            return \Illuminate\Console\Application::boot();
            }
        
            /**
         * Run an Artisan console command by name.
         *
         * @param string $command
         * @param array $parameters
         * @param \Symfony\Component\Console\Output\OutputInterface $output
         * @return void 
         * @static 
         */
            public static function call($command, $parameters = array(), $output = null){
            \Illuminate\Console\Application::call($command, $parameters, $output);
            }
        
            /**
         * Add a command to the console.
         *
         * @param \Symfony\Component\Console\Command\Command $command
         * @return \Symfony\Component\Console\Command\Command 
         * @static 
         */
            public static function add($command){
            return \Illuminate\Console\Application::add($command);
            }
        
            /**
         * Add a command, resolving through the application.
         *
         * @param string $command
         * @return \Symfony\Component\Console\Command\Command 
         * @static 
         */
            public static function resolve($command){
            return \Illuminate\Console\Application::resolve($command);
            }
        
            /**
         * Resolve an array of commands through the application.
         *
         * @param array|mixed $commands
         * @return void 
         * @static 
         */
            public static function resolveCommands($commands){
            \Illuminate\Console\Application::resolveCommands($commands);
            }
        
            /**
         * Render the given exception.
         *
         * @param \Exception $e
         * @param \Symfony\Component\Console\Output\OutputInterface $output
         * @return void 
         * @static 
         */
            public static function renderException($e, $output){
            \Illuminate\Console\Application::renderException($e, $output);
            }
        
            /**
         * Set the exception handler instance.
         *
         * @param \Illuminate\Exception\Handler $handler
         * @return $this 
         * @static 
         */
            public static function setExceptionHandler($handler){
            return \Illuminate\Console\Application::setExceptionHandler($handler);
            }
        
            /**
         * Set the Laravel application instance.
         *
         * @param \Illuminate\Foundation\Application $laravel
         * @return $this 
         * @static 
         */
            public static function setLaravel($laravel){
            return \Illuminate\Console\Application::setLaravel($laravel);
            }
        
            /**
         * Set whether the Console app should auto-exit when done.
         *
         * @param bool $boolean
         * @return $this 
         * @static 
         */
            public static function setAutoExit($boolean){
            return \Illuminate\Console\Application::setAutoExit($boolean);
            }
        
            /**
         * 
         *
         * @static 
         */
            public static function setDispatcher($dispatcher){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::setDispatcher($dispatcher);
            }
        
            /**
         * Runs the current application.
         *
         * @param \Symfony\Component\Console\InputInterface $input An Input instance
         * @param \Symfony\Component\Console\OutputInterface $output An Output instance
         * @return int 0 if everything went fine, or an error code
         * @throws \Exception When doRun returns Exception
         * @api 
         * @static 
         */
            public static function run($input = null, $output = null){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::run($input, $output);
            }
        
            /**
         * Runs the current application.
         *
         * @param \Symfony\Component\Console\InputInterface $input An Input instance
         * @param \Symfony\Component\Console\OutputInterface $output An Output instance
         * @return int 0 if everything went fine, or an error code
         * @static 
         */
            public static function doRun($input, $output){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::doRun($input, $output);
            }
        
            /**
         * Set a helper set to be used with the command.
         *
         * @param \Symfony\Component\Console\HelperSet $helperSet The helper set
         * @api 
         * @static 
         */
            public static function setHelperSet($helperSet){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::setHelperSet($helperSet);
            }
        
            /**
         * Get the helper set associated with the command.
         *
         * @return \Symfony\Component\Console\HelperSet The HelperSet instance associated with this command
         * @api 
         * @static 
         */
            public static function getHelperSet(){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::getHelperSet();
            }
        
            /**
         * Set an input definition set to be used with this application
         *
         * @param \Symfony\Component\Console\InputDefinition $definition The input definition
         * @api 
         * @static 
         */
            public static function setDefinition($definition){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::setDefinition($definition);
            }
        
            /**
         * Gets the InputDefinition related to this Application.
         *
         * @return \Symfony\Component\Console\InputDefinition The InputDefinition instance
         * @static 
         */
            public static function getDefinition(){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::getDefinition();
            }
        
            /**
         * Gets the help message.
         *
         * @return string A help message.
         * @static 
         */
            public static function getHelp(){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::getHelp();
            }
        
            /**
         * Sets whether to catch exceptions or not during commands execution.
         *
         * @param bool $boolean Whether to catch exceptions or not during commands execution
         * @api 
         * @static 
         */
            public static function setCatchExceptions($boolean){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::setCatchExceptions($boolean);
            }
        
            /**
         * Gets the name of the application.
         *
         * @return string The application name
         * @api 
         * @static 
         */
            public static function getName(){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::getName();
            }
        
            /**
         * Sets the application name.
         *
         * @param string $name The application name
         * @api 
         * @static 
         */
            public static function setName($name){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::setName($name);
            }
        
            /**
         * Gets the application version.
         *
         * @return string The application version
         * @api 
         * @static 
         */
            public static function getVersion(){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::getVersion();
            }
        
            /**
         * Sets the application version.
         *
         * @param string $version The application version
         * @api 
         * @static 
         */
            public static function setVersion($version){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::setVersion($version);
            }
        
            /**
         * Returns the long version of the application.
         *
         * @return string The long application version
         * @api 
         * @static 
         */
            public static function getLongVersion(){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::getLongVersion();
            }
        
            /**
         * Registers a new command.
         *
         * @param string $name The command name
         * @return \Symfony\Component\Console\Command The newly created command
         * @api 
         * @static 
         */
            public static function register($name){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::register($name);
            }
        
            /**
         * Adds an array of command objects.
         *
         * @param \Symfony\Component\Console\Command[] $commands An array of commands
         * @api 
         * @static 
         */
            public static function addCommands($commands){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::addCommands($commands);
            }
        
            /**
         * Returns a registered command by name or alias.
         *
         * @param string $name The command name or alias
         * @return \Symfony\Component\Console\Command A Command object
         * @throws \InvalidArgumentException When command name given does not exist
         * @api 
         * @static 
         */
            public static function get($name){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::get($name);
            }
        
            /**
         * Returns true if the command exists, false otherwise.
         *
         * @param string $name The command name or alias
         * @return bool true if the command exists, false otherwise
         * @api 
         * @static 
         */
            public static function has($name){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::has($name);
            }
        
            /**
         * Returns an array of all unique namespaces used by currently registered commands.
         * 
         * It does not returns the global namespace which always exists.
         *
         * @return array An array of namespaces
         * @static 
         */
            public static function getNamespaces(){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::getNamespaces();
            }
        
            /**
         * Finds a registered namespace by a name or an abbreviation.
         *
         * @param string $namespace A namespace or abbreviation to search for
         * @return string A registered namespace
         * @throws \InvalidArgumentException When namespace is incorrect or ambiguous
         * @static 
         */
            public static function findNamespace($namespace){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::findNamespace($namespace);
            }
        
            /**
         * Finds a command by name or alias.
         * 
         * Contrary to get, this command tries to find the best
         * match if you give it an abbreviation of a name or alias.
         *
         * @param string $name A command name or a command alias
         * @return \Symfony\Component\Console\Command A Command instance
         * @throws \InvalidArgumentException When command name is incorrect or ambiguous
         * @api 
         * @static 
         */
            public static function find($name){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::find($name);
            }
        
            /**
         * Gets the commands (registered in the given namespace if provided).
         * 
         * The array keys are the full names and the values the command instances.
         *
         * @param string $namespace A namespace name
         * @return \Symfony\Component\Console\Command[] An array of Command instances
         * @api 
         * @static 
         */
            public static function all($namespace = null){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::all($namespace);
            }
        
            /**
         * Returns an array of possible abbreviations given a set of names.
         *
         * @param array $names An array of names
         * @return array An array of abbreviations
         * @static 
         */
            public static function getAbbreviations($names){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::getAbbreviations($names);
            }
        
            /**
         * Returns a text representation of the Application.
         *
         * @param string $namespace An optional namespace name
         * @param bool $raw Whether to return raw command list
         * @return string A string representing the Application
         * @deprecated Deprecated since version 2.3, to be removed in 3.0.
         * @static 
         */
            public static function asText($namespace = null, $raw = false){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::asText($namespace, $raw);
            }
        
            /**
         * Returns an XML representation of the Application.
         *
         * @param string $namespace An optional namespace name
         * @param bool $asDom Whether to return a DOM or an XML string
         * @return string|\DOMDocument An XML string representing the Application
         * @deprecated Deprecated since version 2.3, to be removed in 3.0.
         * @static 
         */
            public static function asXml($namespace = null, $asDom = false){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::asXml($namespace, $asDom);
            }
        
            /**
         * Tries to figure out the terminal dimensions based on the current environment
         *
         * @return array Array containing width and height
         * @static 
         */
            public static function getTerminalDimensions(){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::getTerminalDimensions();
            }
        
            /**
         * Sets terminal dimensions.
         * 
         * Can be useful to force terminal dimensions for functional tests.
         *
         * @param int $width The width
         * @param int $height The height
         * @return \Symfony\Component\Console\Application The current application
         * @static 
         */
            public static function setTerminalDimensions($width, $height){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::setTerminalDimensions($width, $height);
            }
        
            /**
         * Returns the namespace part of the command name.
         * 
         * This method is not part of public API and should not be used directly.
         *
         * @param string $name The full name of the command
         * @param string $limit The maximum number of parts of the namespace
         * @return string The namespace of the command
         * @static 
         */
            public static function extractNamespace($name, $limit = null){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::extractNamespace($name, $limit);
            }
        
            /**
         * Sets the default Command name.
         *
         * @param string $commandName The Command name
         * @static 
         */
            public static function setDefaultCommand($commandName){
                //Method inherited from \Symfony\Component\Console\Application            
            return \Illuminate\Console\Application::setDefaultCommand($commandName);
            }
        
        }

    
        class Auth extends \Illuminate\Support\Facades\Auth{
        
            /**
         * Create an instance of the database driver.
         *
         * @return \Illuminate\Auth\Guard 
         * @static 
         */
            public static function createDatabaseDriver(){
            return \Illuminate\Auth\AuthManager::createDatabaseDriver();
            }
        
            /**
         * Create an instance of the Eloquent driver.
         *
         * @return \Illuminate\Auth\Guard 
         * @static 
         */
            public static function createEloquentDriver(){
            return \Illuminate\Auth\AuthManager::createEloquentDriver();
            }
        
            /**
         * Get the default authentication driver name.
         *
         * @return string 
         * @static 
         */
            public static function getDefaultDriver(){
            return \Illuminate\Auth\AuthManager::getDefaultDriver();
            }
        
            /**
         * Set the default authentication driver name.
         *
         * @param string $name
         * @return void 
         * @static 
         */
            public static function setDefaultDriver($name){
            \Illuminate\Auth\AuthManager::setDefaultDriver($name);
            }
        
            /**
         * Get a driver instance.
         *
         * @param string $driver
         * @return mixed 
         * @static 
         */
            public static function driver($driver = null){
                //Method inherited from \Illuminate\Support\Manager            
            return \Illuminate\Auth\AuthManager::driver($driver);
            }
        
            /**
         * Register a custom driver creator Closure.
         *
         * @param string $driver
         * @param \Closure $callback
         * @return $this 
         * @static 
         */
            public static function extend($driver, $callback){
                //Method inherited from \Illuminate\Support\Manager            
            return \Illuminate\Auth\AuthManager::extend($driver, $callback);
            }
        
            /**
         * Get all of the created "drivers".
         *
         * @return array 
         * @static 
         */
            public static function getDrivers(){
                //Method inherited from \Illuminate\Support\Manager            
            return \Illuminate\Auth\AuthManager::getDrivers();
            }
        
            /**
         * Determine if the current user is authenticated.
         *
         * @return bool 
         * @static 
         */
            public static function check(){
            return \Illuminate\Auth\Guard::check();
            }
        
            /**
         * Determine if the current user is a guest.
         *
         * @return bool 
         * @static 
         */
            public static function guest(){
            return \Illuminate\Auth\Guard::guest();
            }
        
            /**
         * Get the currently authenticated user.
         *
         * @return \User|null 
         * @static 
         */
            public static function user(){
            return \Illuminate\Auth\Guard::user();
            }
        
            /**
         * Get the ID for the currently authenticated user.
         *
         * @return int|null 
         * @static 
         */
            public static function id(){
            return \Illuminate\Auth\Guard::id();
            }
        
            /**
         * Log a user into the application without sessions or cookies.
         *
         * @param array $credentials
         * @return bool 
         * @static 
         */
            public static function once($credentials = array()){
            return \Illuminate\Auth\Guard::once($credentials);
            }
        
            /**
         * Validate a user's credentials.
         *
         * @param array $credentials
         * @return bool 
         * @static 
         */
            public static function validate($credentials = array()){
            return \Illuminate\Auth\Guard::validate($credentials);
            }
        
            /**
         * Attempt to authenticate using HTTP Basic Auth.
         *
         * @param string $field
         * @param \Symfony\Component\HttpFoundation\Request $request
         * @return \Symfony\Component\HttpFoundation\Response|null 
         * @static 
         */
            public static function basic($field = 'email', $request = null){
            return \Illuminate\Auth\Guard::basic($field, $request);
            }
        
            /**
         * Perform a stateless HTTP Basic login attempt.
         *
         * @param string $field
         * @param \Symfony\Component\HttpFoundation\Request $request
         * @return \Symfony\Component\HttpFoundation\Response|null 
         * @static 
         */
            public static function onceBasic($field = 'email', $request = null){
            return \Illuminate\Auth\Guard::onceBasic($field, $request);
            }
        
            /**
         * Attempt to authenticate a user using the given credentials.
         *
         * @param array $credentials
         * @param bool $remember
         * @param bool $login
         * @return bool 
         * @static 
         */
            public static function attempt($credentials = array(), $remember = false, $login = true){
            return \Illuminate\Auth\Guard::attempt($credentials, $remember, $login);
            }
        
            /**
         * Register an authentication attempt event listener.
         *
         * @param mixed $callback
         * @return void 
         * @static 
         */
            public static function attempting($callback){
            \Illuminate\Auth\Guard::attempting($callback);
            }
        
            /**
         * Log a user into the application.
         *
         * @param \Illuminate\Auth\UserInterface $user
         * @param bool $remember
         * @return void 
         * @static 
         */
            public static function login($user, $remember = false){
            \Illuminate\Auth\Guard::login($user, $remember);
            }
        
            /**
         * Log the given user ID into the application.
         *
         * @param mixed $id
         * @param bool $remember
         * @return \User 
         * @static 
         */
            public static function loginUsingId($id, $remember = false){
            return \Illuminate\Auth\Guard::loginUsingId($id, $remember);
            }
        
            /**
         * Log the given user ID into the application without sessions or cookies.
         *
         * @param mixed $id
         * @return bool 
         * @static 
         */
            public static function onceUsingId($id){
            return \Illuminate\Auth\Guard::onceUsingId($id);
            }
        
            /**
         * Log the user out of the application.
         *
         * @return void 
         * @static 
         */
            public static function logout(){
            \Illuminate\Auth\Guard::logout();
            }
        
            /**
         * Get the cookie creator instance used by the guard.
         *
         * @return \Illuminate\Cookie\CookieJar 
         * @throws \RuntimeException
         * @static 
         */
            public static function getCookieJar(){
            return \Illuminate\Auth\Guard::getCookieJar();
            }
        
            /**
         * Set the cookie creator instance used by the guard.
         *
         * @param \Illuminate\Cookie\CookieJar $cookie
         * @return void 
         * @static 
         */
            public static function setCookieJar($cookie){
            \Illuminate\Auth\Guard::setCookieJar($cookie);
            }
        
            /**
         * Get the event dispatcher instance.
         *
         * @return \Illuminate\Events\Dispatcher 
         * @static 
         */
            public static function getDispatcher(){
            return \Illuminate\Auth\Guard::getDispatcher();
            }
        
            /**
         * Set the event dispatcher instance.
         *
         * @param \Illuminate\Events\Dispatcher
         * @return void 
         * @static 
         */
            public static function setDispatcher($events){
            \Illuminate\Auth\Guard::setDispatcher($events);
            }
        
            /**
         * Get the session store used by the guard.
         *
         * @return \Illuminate\Session\Store 
         * @static 
         */
            public static function getSession(){
            return \Illuminate\Auth\Guard::getSession();
            }
        
            /**
         * Get the user provider used by the guard.
         *
         * @return \Illuminate\Auth\Guard 
         * @static 
         */
            public static function getProvider(){
            return \Illuminate\Auth\Guard::getProvider();
            }
        
            /**
         * Set the user provider used by the guard.
         *
         * @param \Illuminate\Auth\UserProviderInterface $provider
         * @return void 
         * @static 
         */
            public static function setProvider($provider){
            \Illuminate\Auth\Guard::setProvider($provider);
            }
        
            /**
         * Return the currently cached user of the application.
         *
         * @return \User|null 
         * @static 
         */
            public static function getUser(){
            return \Illuminate\Auth\Guard::getUser();
            }
        
            /**
         * Set the current user of the application.
         *
         * @param \Illuminate\Auth\UserInterface $user
         * @return void 
         * @static 
         */
            public static function setUser($user){
            \Illuminate\Auth\Guard::setUser($user);
            }
        
            /**
         * Get the current request instance.
         *
         * @return \Symfony\Component\HttpFoundation\Request 
         * @static 
         */
            public static function getRequest(){
            return \Illuminate\Auth\Guard::getRequest();
            }
        
            /**
         * Set the current request instance.
         *
         * @param \Symfony\Component\HttpFoundation\Request
         * @return $this 
         * @static 
         */
            public static function setRequest($request){
            return \Illuminate\Auth\Guard::setRequest($request);
            }
        
            /**
         * Get the last user we attempted to authenticate.
         *
         * @return \User 
         * @static 
         */
            public static function getLastAttempted(){
            return \Illuminate\Auth\Guard::getLastAttempted();
            }
        
            /**
         * Get a unique identifier for the auth session value.
         *
         * @return string 
         * @static 
         */
            public static function getName(){
            return \Illuminate\Auth\Guard::getName();
            }
        
            /**
         * Get the name of the cookie used to store the "recaller".
         *
         * @return string 
         * @static 
         */
            public static function getRecallerName(){
            return \Illuminate\Auth\Guard::getRecallerName();
            }
        
            /**
         * Determine if the user was authenticated via "remember me" cookie.
         *
         * @return bool 
         * @static 
         */
            public static function viaRemember(){
            return \Illuminate\Auth\Guard::viaRemember();
            }
        
        }

    
        class Blade extends \Illuminate\Support\Facades\Blade{
        
            /**
         * Compile the view at the given path.
         *
         * @param string $path
         * @return void 
         * @static 
         */
            public static function compile($path = null){
            \Illuminate\View\Compilers\BladeCompiler::compile($path);
            }
        
            /**
         * Get the path currently being compiled.
         *
         * @return string 
         * @static 
         */
            public static function getPath(){
            return \Illuminate\View\Compilers\BladeCompiler::getPath();
            }
        
            /**
         * Set the path currently being compiled.
         *
         * @param string $path
         * @return void 
         * @static 
         */
            public static function setPath($path){
            \Illuminate\View\Compilers\BladeCompiler::setPath($path);
            }
        
            /**
         * Compile the given Blade template contents.
         *
         * @param string $value
         * @return string 
         * @static 
         */
            public static function compileString($value){
            return \Illuminate\View\Compilers\BladeCompiler::compileString($value);
            }
        
            /**
         * Compile the default values for the echo statement.
         *
         * @param string $value
         * @return string 
         * @static 
         */
            public static function compileEchoDefaults($value){
            return \Illuminate\View\Compilers\BladeCompiler::compileEchoDefaults($value);
            }
        
            /**
         * Register a custom Blade compiler.
         *
         * @param \Closure $compiler
         * @return void 
         * @static 
         */
            public static function extend($compiler){
            \Illuminate\View\Compilers\BladeCompiler::extend($compiler);
            }
        
            /**
         * Get the regular expression for a generic Blade function.
         *
         * @param string $function
         * @return string 
         * @static 
         */
            public static function createMatcher($function){
            return \Illuminate\View\Compilers\BladeCompiler::createMatcher($function);
            }
        
            /**
         * Get the regular expression for a generic Blade function.
         *
         * @param string $function
         * @return string 
         * @static 
         */
            public static function createOpenMatcher($function){
            return \Illuminate\View\Compilers\BladeCompiler::createOpenMatcher($function);
            }
        
            /**
         * Create a plain Blade matcher.
         *
         * @param string $function
         * @return string 
         * @static 
         */
            public static function createPlainMatcher($function){
            return \Illuminate\View\Compilers\BladeCompiler::createPlainMatcher($function);
            }
        
            /**
         * Sets the content tags used for the compiler.
         *
         * @param string $openTag
         * @param string $closeTag
         * @param bool $escaped
         * @return void 
         * @static 
         */
            public static function setContentTags($openTag, $closeTag, $escaped = false){
            \Illuminate\View\Compilers\BladeCompiler::setContentTags($openTag, $closeTag, $escaped);
            }
        
            /**
         * Sets the escaped content tags used for the compiler.
         *
         * @param string $openTag
         * @param string $closeTag
         * @return void 
         * @static 
         */
            public static function setEscapedContentTags($openTag, $closeTag){
            \Illuminate\View\Compilers\BladeCompiler::setEscapedContentTags($openTag, $closeTag);
            }
        
            /**
         * Gets the content tags used for the compiler.
         *
         * @return string 
         * @static 
         */
            public static function getContentTags(){
            return \Illuminate\View\Compilers\BladeCompiler::getContentTags();
            }
        
            /**
         * Gets the escaped content tags used for the compiler.
         *
         * @return string 
         * @static 
         */
            public static function getEscapedContentTags(){
            return \Illuminate\View\Compilers\BladeCompiler::getEscapedContentTags();
            }
        
            /**
         * Get the path to the compiled version of a view.
         *
         * @param string $path
         * @return string 
         * @static 
         */
            public static function getCompiledPath($path){
                //Method inherited from \Illuminate\View\Compilers\Compiler            
            return \Illuminate\View\Compilers\BladeCompiler::getCompiledPath($path);
            }
        
            /**
         * Determine if the view at the given path is expired.
         *
         * @param string $path
         * @return bool 
         * @static 
         */
            public static function isExpired($path){
                //Method inherited from \Illuminate\View\Compilers\Compiler            
            return \Illuminate\View\Compilers\BladeCompiler::isExpired($path);
            }
        
        }

    
        class Cache extends \Illuminate\Support\Facades\Cache{
        
            /**
         * Get the cache "prefix" value.
         *
         * @return string 
         * @static 
         */
            public static function getPrefix(){
            return \Illuminate\Cache\CacheManager::getPrefix();
            }
        
            /**
         * Set the cache "prefix" value.
         *
         * @param string $name
         * @return void 
         * @static 
         */
            public static function setPrefix($name){
            \Illuminate\Cache\CacheManager::setPrefix($name);
            }
        
            /**
         * Get the default cache driver name.
         *
         * @return string 
         * @static 
         */
            public static function getDefaultDriver(){
            return \Illuminate\Cache\CacheManager::getDefaultDriver();
            }
        
            /**
         * Set the default cache driver name.
         *
         * @param string $name
         * @return void 
         * @static 
         */
            public static function setDefaultDriver($name){
            \Illuminate\Cache\CacheManager::setDefaultDriver($name);
            }
        
            /**
         * Get a driver instance.
         *
         * @param string $driver
         * @return mixed 
         * @static 
         */
            public static function driver($driver = null){
                //Method inherited from \Illuminate\Support\Manager            
            return \Illuminate\Cache\CacheManager::driver($driver);
            }
        
            /**
         * Register a custom driver creator Closure.
         *
         * @param string $driver
         * @param \Closure $callback
         * @return $this 
         * @static 
         */
            public static function extend($driver, $callback){
                //Method inherited from \Illuminate\Support\Manager            
            return \Illuminate\Cache\CacheManager::extend($driver, $callback);
            }
        
            /**
         * Get all of the created "drivers".
         *
         * @return array 
         * @static 
         */
            public static function getDrivers(){
                //Method inherited from \Illuminate\Support\Manager            
            return \Illuminate\Cache\CacheManager::getDrivers();
            }
        
            /**
         * Determine if an item exists in the cache.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function has($key){
            return \Illuminate\Cache\Repository::has($key);
            }
        
            /**
         * Retrieve an item from the cache by key.
         *
         * @param string $key
         * @param mixed $default
         * @return mixed 
         * @static 
         */
            public static function get($key, $default = null){
            return \Illuminate\Cache\Repository::get($key, $default);
            }
        
            /**
         * Retrieve an item from the cache and delete it.
         *
         * @param string $key
         * @param mixed $default
         * @return mixed 
         * @static 
         */
            public static function pull($key, $default = null){
            return \Illuminate\Cache\Repository::pull($key, $default);
            }
        
            /**
         * Store an item in the cache.
         *
         * @param string $key
         * @param mixed $value
         * @param \DateTime|int $minutes
         * @return void 
         * @static 
         */
            public static function put($key, $value, $minutes){
            \Illuminate\Cache\Repository::put($key, $value, $minutes);
            }
        
            /**
         * Store an item in the cache if the key does not exist.
         *
         * @param string $key
         * @param mixed $value
         * @param \DateTime|int $minutes
         * @return bool 
         * @static 
         */
            public static function add($key, $value, $minutes){
            return \Illuminate\Cache\Repository::add($key, $value, $minutes);
            }
        
            /**
         * Get an item from the cache, or store the default value.
         *
         * @param string $key
         * @param \DateTime|int $minutes
         * @param \Closure $callback
         * @return mixed 
         * @static 
         */
            public static function remember($key, $minutes, $callback){
            return \Illuminate\Cache\Repository::remember($key, $minutes, $callback);
            }
        
            /**
         * Get an item from the cache, or store the default value forever.
         *
         * @param string $key
         * @param \Closure $callback
         * @return mixed 
         * @static 
         */
            public static function sear($key, $callback){
            return \Illuminate\Cache\Repository::sear($key, $callback);
            }
        
            /**
         * Get an item from the cache, or store the default value forever.
         *
         * @param string $key
         * @param \Closure $callback
         * @return mixed 
         * @static 
         */
            public static function rememberForever($key, $callback){
            return \Illuminate\Cache\Repository::rememberForever($key, $callback);
            }
        
            /**
         * Get the default cache time.
         *
         * @return int 
         * @static 
         */
            public static function getDefaultCacheTime(){
            return \Illuminate\Cache\Repository::getDefaultCacheTime();
            }
        
            /**
         * Set the default cache time in minutes.
         *
         * @param int $minutes
         * @return void 
         * @static 
         */
            public static function setDefaultCacheTime($minutes){
            \Illuminate\Cache\Repository::setDefaultCacheTime($minutes);
            }
        
            /**
         * Get the cache store implementation.
         *
         * @return \Illuminate\Cache\FileStore 
         * @static 
         */
            public static function getStore(){
            return \Illuminate\Cache\Repository::getStore();
            }
        
            /**
         * Determine if a cached value exists.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function offsetExists($key){
            return \Illuminate\Cache\Repository::offsetExists($key);
            }
        
            /**
         * Retrieve an item from the cache by key.
         *
         * @param string $key
         * @return mixed 
         * @static 
         */
            public static function offsetGet($key){
            return \Illuminate\Cache\Repository::offsetGet($key);
            }
        
            /**
         * Store an item in the cache for the default time.
         *
         * @param string $key
         * @param mixed $value
         * @return void 
         * @static 
         */
            public static function offsetSet($key, $value){
            \Illuminate\Cache\Repository::offsetSet($key, $value);
            }
        
            /**
         * Remove an item from the cache.
         *
         * @param string $key
         * @return void 
         * @static 
         */
            public static function offsetUnset($key){
            \Illuminate\Cache\Repository::offsetUnset($key);
            }
        
            /**
         * Register a custom macro.
         *
         * @param string $name
         * @param callable $macro
         * @return void 
         * @static 
         */
            public static function macro($name, $macro){
            \Illuminate\Cache\Repository::macro($name, $macro);
            }
        
            /**
         * Checks if macro is registered
         *
         * @param string $name
         * @return boolean 
         * @static 
         */
            public static function hasMacro($name){
            return \Illuminate\Cache\Repository::hasMacro($name);
            }
        
            /**
         * Dynamically handle calls to the class.
         *
         * @param string $method
         * @param array $parameters
         * @return mixed 
         * @throws \BadMethodCallException
         * @static 
         */
            public static function macroCall($method, $parameters){
            return \Illuminate\Cache\Repository::macroCall($method, $parameters);
            }
        
            /**
         * Increment the value of an item in the cache.
         *
         * @param string $key
         * @param mixed $value
         * @return int 
         * @static 
         */
            public static function increment($key, $value = 1){
            return \Illuminate\Cache\FileStore::increment($key, $value);
            }
        
            /**
         * Decrement the value of an item in the cache.
         *
         * @param string $key
         * @param mixed $value
         * @return int 
         * @static 
         */
            public static function decrement($key, $value = 1){
            return \Illuminate\Cache\FileStore::decrement($key, $value);
            }
        
            /**
         * Store an item in the cache indefinitely.
         *
         * @param string $key
         * @param mixed $value
         * @return void 
         * @static 
         */
            public static function forever($key, $value){
            \Illuminate\Cache\FileStore::forever($key, $value);
            }
        
            /**
         * Remove an item from the cache.
         *
         * @param string $key
         * @return void 
         * @static 
         */
            public static function forget($key){
            \Illuminate\Cache\FileStore::forget($key);
            }
        
            /**
         * Remove all items from the cache.
         *
         * @return void 
         * @static 
         */
            public static function flush(){
            \Illuminate\Cache\FileStore::flush();
            }
        
            /**
         * Get the Filesystem instance.
         *
         * @return \Illuminate\Filesystem\Filesystem 
         * @static 
         */
            public static function getFilesystem(){
            return \Illuminate\Cache\FileStore::getFilesystem();
            }
        
            /**
         * Get the working directory of the cache.
         *
         * @return string 
         * @static 
         */
            public static function getDirectory(){
            return \Illuminate\Cache\FileStore::getDirectory();
            }
        
        }

    
        class Carbon extends \Carbon\Carbon{
        
        }

    
        class ClassLoader extends \Illuminate\Support\ClassLoader{
        
        }

    
        class Config extends \Illuminate\Support\Facades\Config{
        
            /**
         * Determine if the given configuration value exists.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function has($key){
            return \Illuminate\Config\Repository::has($key);
            }
        
            /**
         * Determine if a configuration group exists.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function hasGroup($key){
            return \Illuminate\Config\Repository::hasGroup($key);
            }
        
            /**
         * Get the specified configuration value.
         *
         * @param string $key
         * @param mixed $default
         * @return mixed 
         * @static 
         */
            public static function get($key, $default = null){
            return \Illuminate\Config\Repository::get($key, $default);
            }
        
            /**
         * Set a given configuration value.
         *
         * @param string $key
         * @param mixed $value
         * @return void 
         * @static 
         */
            public static function set($key, $value){
            \Illuminate\Config\Repository::set($key, $value);
            }
        
            /**
         * Register a package for cascading configuration.
         *
         * @param string $package
         * @param string $hint
         * @param string $namespace
         * @return void 
         * @static 
         */
            public static function package($package, $hint, $namespace = null){
            \Illuminate\Config\Repository::package($package, $hint, $namespace);
            }
        
            /**
         * Register an after load callback for a given namespace.
         *
         * @param string $namespace
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function afterLoading($namespace, $callback){
            \Illuminate\Config\Repository::afterLoading($namespace, $callback);
            }
        
            /**
         * Add a new namespace to the loader.
         *
         * @param string $namespace
         * @param string $hint
         * @return void 
         * @static 
         */
            public static function addNamespace($namespace, $hint){
            \Illuminate\Config\Repository::addNamespace($namespace, $hint);
            }
        
            /**
         * Returns all registered namespaces with the config
         * loader.
         *
         * @return array 
         * @static 
         */
            public static function getNamespaces(){
            return \Illuminate\Config\Repository::getNamespaces();
            }
        
            /**
         * Get the loader implementation.
         *
         * @return \Illuminate\Config\LoaderInterface 
         * @static 
         */
            public static function getLoader(){
            return \Illuminate\Config\Repository::getLoader();
            }
        
            /**
         * Set the loader implementation.
         *
         * @param \Illuminate\Config\LoaderInterface $loader
         * @return void 
         * @static 
         */
            public static function setLoader($loader){
            \Illuminate\Config\Repository::setLoader($loader);
            }
        
            /**
         * Get the current configuration environment.
         *
         * @return string 
         * @static 
         */
            public static function getEnvironment(){
            return \Illuminate\Config\Repository::getEnvironment();
            }
        
            /**
         * Get the after load callback array.
         *
         * @return array 
         * @static 
         */
            public static function getAfterLoadCallbacks(){
            return \Illuminate\Config\Repository::getAfterLoadCallbacks();
            }
        
            /**
         * Get all of the configuration items.
         *
         * @return array 
         * @static 
         */
            public static function getItems(){
            return \Illuminate\Config\Repository::getItems();
            }
        
            /**
         * Determine if the given configuration option exists.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function offsetExists($key){
            return \Illuminate\Config\Repository::offsetExists($key);
            }
        
            /**
         * Get a configuration option.
         *
         * @param string $key
         * @return mixed 
         * @static 
         */
            public static function offsetGet($key){
            return \Illuminate\Config\Repository::offsetGet($key);
            }
        
            /**
         * Set a configuration option.
         *
         * @param string $key
         * @param mixed $value
         * @return void 
         * @static 
         */
            public static function offsetSet($key, $value){
            \Illuminate\Config\Repository::offsetSet($key, $value);
            }
        
            /**
         * Unset a configuration option.
         *
         * @param string $key
         * @return void 
         * @static 
         */
            public static function offsetUnset($key){
            \Illuminate\Config\Repository::offsetUnset($key);
            }
        
            /**
         * Parse a key into namespace, group, and item.
         *
         * @param string $key
         * @return array 
         * @static 
         */
            public static function parseKey($key){
                //Method inherited from \Illuminate\Support\NamespacedItemResolver            
            return \Illuminate\Config\Repository::parseKey($key);
            }
        
            /**
         * Set the parsed value of a key.
         *
         * @param string $key
         * @param array $parsed
         * @return void 
         * @static 
         */
            public static function setParsedKey($key, $parsed){
                //Method inherited from \Illuminate\Support\NamespacedItemResolver            
            \Illuminate\Config\Repository::setParsedKey($key, $parsed);
            }
        
        }

    
        class Controller extends \Illuminate\Routing\Controller{
        
        }

    
        class Cookie extends \Illuminate\Support\Facades\Cookie{
        
            /**
         * Create a new cookie instance.
         *
         * @param string $name
         * @param string $value
         * @param int $minutes
         * @param string $path
         * @param string $domain
         * @param bool $secure
         * @param bool $httpOnly
         * @return \Symfony\Component\HttpFoundation\Cookie 
         * @static 
         */
            public static function make($name, $value, $minutes = 0, $path = null, $domain = null, $secure = false, $httpOnly = true){
            return \Illuminate\Cookie\CookieJar::make($name, $value, $minutes, $path, $domain, $secure, $httpOnly);
            }
        
            /**
         * Create a cookie that lasts "forever" (five years).
         *
         * @param string $name
         * @param string $value
         * @param string $path
         * @param string $domain
         * @param bool $secure
         * @param bool $httpOnly
         * @return \Symfony\Component\HttpFoundation\Cookie 
         * @static 
         */
            public static function forever($name, $value, $path = null, $domain = null, $secure = false, $httpOnly = true){
            return \Illuminate\Cookie\CookieJar::forever($name, $value, $path, $domain, $secure, $httpOnly);
            }
        
            /**
         * Expire the given cookie.
         *
         * @param string $name
         * @param string $path
         * @param string $domain
         * @return \Symfony\Component\HttpFoundation\Cookie 
         * @static 
         */
            public static function forget($name, $path = null, $domain = null){
            return \Illuminate\Cookie\CookieJar::forget($name, $path, $domain);
            }
        
            /**
         * Determine if a cookie has been queued.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function hasQueued($key){
            return \Illuminate\Cookie\CookieJar::hasQueued($key);
            }
        
            /**
         * Get a queued cookie instance.
         *
         * @param string $key
         * @param mixed $default
         * @return \Symfony\Component\HttpFoundation\Cookie 
         * @static 
         */
            public static function queued($key, $default = null){
            return \Illuminate\Cookie\CookieJar::queued($key, $default);
            }
        
            /**
         * Queue a cookie to send with the next response.
         *
         * @param mixed
         * @return void 
         * @static 
         */
            public static function queue(){
            \Illuminate\Cookie\CookieJar::queue();
            }
        
            /**
         * Remove a cookie from the queue.
         *
         * @param string $name
         * @static 
         */
            public static function unqueue($name){
            return \Illuminate\Cookie\CookieJar::unqueue($name);
            }
        
            /**
         * Set the default path and domain for the jar.
         *
         * @param string $path
         * @param string $domain
         * @return $this 
         * @static 
         */
            public static function setDefaultPathAndDomain($path, $domain){
            return \Illuminate\Cookie\CookieJar::setDefaultPathAndDomain($path, $domain);
            }
        
            /**
         * Get the cookies which have been queued for the next request
         *
         * @return array 
         * @static 
         */
            public static function getQueuedCookies(){
            return \Illuminate\Cookie\CookieJar::getQueuedCookies();
            }
        
        }

    
        class Crypt extends \Illuminate\Support\Facades\Crypt{
        
            /**
         * Encrypt the given value.
         *
         * @param string $value
         * @return string 
         * @static 
         */
            public static function encrypt($value){
            return \Illuminate\Encryption\Encrypter::encrypt($value);
            }
        
            /**
         * Decrypt the given value.
         *
         * @param string $payload
         * @return string 
         * @static 
         */
            public static function decrypt($payload){
            return \Illuminate\Encryption\Encrypter::decrypt($payload);
            }
        
            /**
         * Set the encryption key.
         *
         * @param string $key
         * @return void 
         * @static 
         */
            public static function setKey($key){
            \Illuminate\Encryption\Encrypter::setKey($key);
            }
        
            /**
         * Set the encryption cipher.
         *
         * @param string $cipher
         * @return void 
         * @static 
         */
            public static function setCipher($cipher){
            \Illuminate\Encryption\Encrypter::setCipher($cipher);
            }
        
            /**
         * Set the encryption mode.
         *
         * @param string $mode
         * @return void 
         * @static 
         */
            public static function setMode($mode){
            \Illuminate\Encryption\Encrypter::setMode($mode);
            }
        
        }

    
        class DB extends \Illuminate\Support\Facades\DB{
        
            /**
         * Get a database connection instance.
         *
         * @param string $name
         * @return \Illuminate\Database\Connection 
         * @static 
         */
            public static function connection($name = null){
            return \Illuminate\Database\DatabaseManager::connection($name);
            }
        
            /**
         * Disconnect from the given database and remove from local cache.
         *
         * @param string $name
         * @return void 
         * @static 
         */
            public static function purge($name = null){
            \Illuminate\Database\DatabaseManager::purge($name);
            }
        
            /**
         * Disconnect from the given database.
         *
         * @param string $name
         * @return void 
         * @static 
         */
            public static function disconnect($name = null){
            \Illuminate\Database\DatabaseManager::disconnect($name);
            }
        
            /**
         * Reconnect to the given database.
         *
         * @param string $name
         * @return \Illuminate\Database\Connection 
         * @static 
         */
            public static function reconnect($name = null){
            return \Illuminate\Database\DatabaseManager::reconnect($name);
            }
        
            /**
         * Get the default connection name.
         *
         * @return string 
         * @static 
         */
            public static function getDefaultConnection(){
            return \Illuminate\Database\DatabaseManager::getDefaultConnection();
            }
        
            /**
         * Set the default connection name.
         *
         * @param string $name
         * @return void 
         * @static 
         */
            public static function setDefaultConnection($name){
            \Illuminate\Database\DatabaseManager::setDefaultConnection($name);
            }
        
            /**
         * Register an extension connection resolver.
         *
         * @param string $name
         * @param callable $resolver
         * @return void 
         * @static 
         */
            public static function extend($name, $resolver){
            \Illuminate\Database\DatabaseManager::extend($name, $resolver);
            }
        
            /**
         * Return all of the created connections.
         *
         * @return array 
         * @static 
         */
            public static function getConnections(){
            return \Illuminate\Database\DatabaseManager::getConnections();
            }
        
            /**
         * Set the query grammar to the default implementation.
         *
         * @return void 
         * @static 
         */
            public static function useDefaultQueryGrammar(){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::useDefaultQueryGrammar();
            }
        
            /**
         * Set the schema grammar to the default implementation.
         *
         * @return void 
         * @static 
         */
            public static function useDefaultSchemaGrammar(){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::useDefaultSchemaGrammar();
            }
        
            /**
         * Set the query post processor to the default implementation.
         *
         * @return void 
         * @static 
         */
            public static function useDefaultPostProcessor(){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::useDefaultPostProcessor();
            }
        
            /**
         * Get a schema builder instance for the connection.
         *
         * @return \Illuminate\Database\Schema\Builder 
         * @static 
         */
            public static function getSchemaBuilder(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getSchemaBuilder();
            }
        
            /**
         * Begin a fluent query against a database table.
         *
         * @param string $table
         * @return \Illuminate\Database\Query\Builder 
         * @static 
         */
            public static function table($table){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::table($table);
            }
        
            /**
         * Get a new raw query expression.
         *
         * @param mixed $value
         * @return \Illuminate\Database\Query\Expression 
         * @static 
         */
            public static function raw($value){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::raw($value);
            }
        
            /**
         * Run a select statement and return a single result.
         *
         * @param string $query
         * @param array $bindings
         * @return mixed 
         * @static 
         */
            public static function selectOne($query, $bindings = array()){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::selectOne($query, $bindings);
            }
        
            /**
         * Run a select statement against the database.
         *
         * @param string $query
         * @param array $bindings
         * @return array 
         * @static 
         */
            public static function selectFromWriteConnection($query, $bindings = array()){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::selectFromWriteConnection($query, $bindings);
            }
        
            /**
         * Run a select statement against the database.
         *
         * @param string $query
         * @param array $bindings
         * @param bool $useReadPdo
         * @return array 
         * @static 
         */
            public static function select($query, $bindings = array(), $useReadPdo = true){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::select($query, $bindings, $useReadPdo);
            }
        
            /**
         * Run an insert statement against the database.
         *
         * @param string $query
         * @param array $bindings
         * @return bool 
         * @static 
         */
            public static function insert($query, $bindings = array()){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::insert($query, $bindings);
            }
        
            /**
         * Run an update statement against the database.
         *
         * @param string $query
         * @param array $bindings
         * @return int 
         * @static 
         */
            public static function update($query, $bindings = array()){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::update($query, $bindings);
            }
        
            /**
         * Run a delete statement against the database.
         *
         * @param string $query
         * @param array $bindings
         * @return int 
         * @static 
         */
            public static function delete($query, $bindings = array()){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::delete($query, $bindings);
            }
        
            /**
         * Execute an SQL statement and return the boolean result.
         *
         * @param string $query
         * @param array $bindings
         * @return bool 
         * @static 
         */
            public static function statement($query, $bindings = array()){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::statement($query, $bindings);
            }
        
            /**
         * Run an SQL statement and get the number of rows affected.
         *
         * @param string $query
         * @param array $bindings
         * @return int 
         * @static 
         */
            public static function affectingStatement($query, $bindings = array()){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::affectingStatement($query, $bindings);
            }
        
            /**
         * Run a raw, unprepared query against the PDO connection.
         *
         * @param string $query
         * @return bool 
         * @static 
         */
            public static function unprepared($query){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::unprepared($query);
            }
        
            /**
         * Prepare the query bindings for execution.
         *
         * @param array $bindings
         * @return array 
         * @static 
         */
            public static function prepareBindings($bindings){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::prepareBindings($bindings);
            }
        
            /**
         * Execute a Closure within a transaction.
         *
         * @param \Closure $callback
         * @return mixed 
         * @throws \Exception
         * @static 
         */
            public static function transaction($callback){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::transaction($callback);
            }
        
            /**
         * Start a new database transaction.
         *
         * @return void 
         * @static 
         */
            public static function beginTransaction(){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::beginTransaction();
            }
        
            /**
         * Commit the active database transaction.
         *
         * @return void 
         * @static 
         */
            public static function commit(){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::commit();
            }
        
            /**
         * Rollback the active database transaction.
         *
         * @return void 
         * @static 
         */
            public static function rollBack(){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::rollBack();
            }
        
            /**
         * Get the number of active transactions.
         *
         * @return int 
         * @static 
         */
            public static function transactionLevel(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::transactionLevel();
            }
        
            /**
         * Execute the given callback in "dry run" mode.
         *
         * @param \Closure $callback
         * @return array 
         * @static 
         */
            public static function pretend($callback){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::pretend($callback);
            }
        
            /**
         * Log a query in the connection's query log.
         *
         * @param string $query
         * @param array $bindings
         * @param $time
         * @return void 
         * @static 
         */
            public static function logQuery($query, $bindings, $time = null){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::logQuery($query, $bindings, $time);
            }
        
            /**
         * Register a database query listener with the connection.
         *
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function listen($callback){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::listen($callback);
            }
        
            /**
         * Get a Doctrine Schema Column instance.
         *
         * @param string $table
         * @param string $column
         * @return \Doctrine\DBAL\Schema\Column 
         * @static 
         */
            public static function getDoctrineColumn($table, $column){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getDoctrineColumn($table, $column);
            }
        
            /**
         * Get the Doctrine DBAL schema manager for the connection.
         *
         * @return \Doctrine\DBAL\Schema\AbstractSchemaManager 
         * @static 
         */
            public static function getDoctrineSchemaManager(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getDoctrineSchemaManager();
            }
        
            /**
         * Get the Doctrine DBAL database connection instance.
         *
         * @return \Doctrine\DBAL\Connection 
         * @static 
         */
            public static function getDoctrineConnection(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getDoctrineConnection();
            }
        
            /**
         * Get the current PDO connection.
         *
         * @return \PDO 
         * @static 
         */
            public static function getPdo(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getPdo();
            }
        
            /**
         * Get the current PDO connection used for reading.
         *
         * @return \PDO 
         * @static 
         */
            public static function getReadPdo(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getReadPdo();
            }
        
            /**
         * Set the PDO connection.
         *
         * @param \PDO|null $pdo
         * @return $this 
         * @static 
         */
            public static function setPdo($pdo){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::setPdo($pdo);
            }
        
            /**
         * Set the PDO connection used for reading.
         *
         * @param \PDO|null $pdo
         * @return $this 
         * @static 
         */
            public static function setReadPdo($pdo){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::setReadPdo($pdo);
            }
        
            /**
         * Set the reconnect instance on the connection.
         *
         * @param callable $reconnector
         * @return $this 
         * @static 
         */
            public static function setReconnector($reconnector){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::setReconnector($reconnector);
            }
        
            /**
         * Get the database connection name.
         *
         * @return string|null 
         * @static 
         */
            public static function getName(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getName();
            }
        
            /**
         * Get an option from the configuration options.
         *
         * @param string $option
         * @return mixed 
         * @static 
         */
            public static function getConfig($option){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getConfig($option);
            }
        
            /**
         * Get the PDO driver name.
         *
         * @return string 
         * @static 
         */
            public static function getDriverName(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getDriverName();
            }
        
            /**
         * Get the query grammar used by the connection.
         *
         * @return \Illuminate\Database\Query\Grammars\Grammar 
         * @static 
         */
            public static function getQueryGrammar(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getQueryGrammar();
            }
        
            /**
         * Set the query grammar used by the connection.
         *
         * @param \Illuminate\Database\Query\Grammars\Grammar
         * @return void 
         * @static 
         */
            public static function setQueryGrammar($grammar){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::setQueryGrammar($grammar);
            }
        
            /**
         * Get the schema grammar used by the connection.
         *
         * @return \Illuminate\Database\Query\Grammars\Grammar 
         * @static 
         */
            public static function getSchemaGrammar(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getSchemaGrammar();
            }
        
            /**
         * Set the schema grammar used by the connection.
         *
         * @param \Illuminate\Database\Schema\Grammars\Grammar
         * @return void 
         * @static 
         */
            public static function setSchemaGrammar($grammar){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::setSchemaGrammar($grammar);
            }
        
            /**
         * Get the query post processor used by the connection.
         *
         * @return \Illuminate\Database\Query\Processors\Processor 
         * @static 
         */
            public static function getPostProcessor(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getPostProcessor();
            }
        
            /**
         * Set the query post processor used by the connection.
         *
         * @param \Illuminate\Database\Query\Processors\Processor
         * @return void 
         * @static 
         */
            public static function setPostProcessor($processor){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::setPostProcessor($processor);
            }
        
            /**
         * Get the event dispatcher used by the connection.
         *
         * @return \Illuminate\Events\Dispatcher 
         * @static 
         */
            public static function getEventDispatcher(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getEventDispatcher();
            }
        
            /**
         * Set the event dispatcher instance on the connection.
         *
         * @param \Illuminate\Events\Dispatcher
         * @return void 
         * @static 
         */
            public static function setEventDispatcher($events){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::setEventDispatcher($events);
            }
        
            /**
         * Get the paginator environment instance.
         *
         * @return \Illuminate\Pagination\Factory 
         * @static 
         */
            public static function getPaginator(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getPaginator();
            }
        
            /**
         * Set the pagination environment instance.
         *
         * @param \Illuminate\Pagination\Factory|\Closure $paginator
         * @return void 
         * @static 
         */
            public static function setPaginator($paginator){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::setPaginator($paginator);
            }
        
            /**
         * Get the cache manager instance.
         *
         * @return \Illuminate\Cache\CacheManager 
         * @static 
         */
            public static function getCacheManager(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getCacheManager();
            }
        
            /**
         * Set the cache manager instance on the connection.
         *
         * @param \Illuminate\Cache\CacheManager|\Closure $cache
         * @return void 
         * @static 
         */
            public static function setCacheManager($cache){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::setCacheManager($cache);
            }
        
            /**
         * Determine if the connection in a "dry run".
         *
         * @return bool 
         * @static 
         */
            public static function pretending(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::pretending();
            }
        
            /**
         * Get the default fetch mode for the connection.
         *
         * @return int 
         * @static 
         */
            public static function getFetchMode(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getFetchMode();
            }
        
            /**
         * Set the default fetch mode for the connection.
         *
         * @param int $fetchMode
         * @return int 
         * @static 
         */
            public static function setFetchMode($fetchMode){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::setFetchMode($fetchMode);
            }
        
            /**
         * Get the connection query log.
         *
         * @return array 
         * @static 
         */
            public static function getQueryLog(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getQueryLog();
            }
        
            /**
         * Clear the query log.
         *
         * @return void 
         * @static 
         */
            public static function flushQueryLog(){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::flushQueryLog();
            }
        
            /**
         * Enable the query log on the connection.
         *
         * @return void 
         * @static 
         */
            public static function enableQueryLog(){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::enableQueryLog();
            }
        
            /**
         * Disable the query log on the connection.
         *
         * @return void 
         * @static 
         */
            public static function disableQueryLog(){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::disableQueryLog();
            }
        
            /**
         * Determine whether we're logging queries.
         *
         * @return bool 
         * @static 
         */
            public static function logging(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::logging();
            }
        
            /**
         * Get the name of the connected database.
         *
         * @return string 
         * @static 
         */
            public static function getDatabaseName(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getDatabaseName();
            }
        
            /**
         * Set the name of the connected database.
         *
         * @param string $database
         * @return string 
         * @static 
         */
            public static function setDatabaseName($database){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::setDatabaseName($database);
            }
        
            /**
         * Get the table prefix for the connection.
         *
         * @return string 
         * @static 
         */
            public static function getTablePrefix(){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::getTablePrefix();
            }
        
            /**
         * Set the table prefix in use by the connection.
         *
         * @param string $prefix
         * @return void 
         * @static 
         */
            public static function setTablePrefix($prefix){
                //Method inherited from \Illuminate\Database\Connection            
            \Illuminate\Database\SQLiteConnection::setTablePrefix($prefix);
            }
        
            /**
         * Set the table prefix and return the grammar.
         *
         * @param \Illuminate\Database\Grammar $grammar
         * @return \Illuminate\Database\Grammar 
         * @static 
         */
            public static function withTablePrefix($grammar){
                //Method inherited from \Illuminate\Database\Connection            
            return \Illuminate\Database\SQLiteConnection::withTablePrefix($grammar);
            }
        
        }

    
        class Eloquent extends \Illuminate\Database\Eloquent\Model{
        
            /**
         * Find a model by its primary key.
         *
         * @param array $id
         * @param array $columns
         * @return \Illuminate\Database\Eloquent\Model|\Illuminate\Database\Eloquent\Collection|static 
         * @static 
         */
            public static function findMany($id, $columns = array()){
            return \Illuminate\Database\Eloquent\Builder::findMany($id, $columns);
            }
        
            /**
         * Execute the query and get the first result.
         *
         * @param array $columns
         * @return \Illuminate\Database\Eloquent\Model|static|null 
         * @static 
         */
            public static function first($columns = array()){
            return \Illuminate\Database\Eloquent\Builder::first($columns);
            }
        
            /**
         * Execute the query and get the first result or throw an exception.
         *
         * @param array $columns
         * @return \Illuminate\Database\Eloquent\Model|static 
         * @throws \Illuminate\Database\Eloquent\ModelNotFoundException
         * @static 
         */
            public static function firstOrFail($columns = array()){
            return \Illuminate\Database\Eloquent\Builder::firstOrFail($columns);
            }
        
            /**
         * Execute the query as a "select" statement.
         *
         * @param array $columns
         * @return \Illuminate\Database\Eloquent\Collection|static[] 
         * @static 
         */
            public static function get($columns = array()){
            return \Illuminate\Database\Eloquent\Builder::get($columns);
            }
        
            /**
         * Pluck a single column from the database.
         *
         * @param string $column
         * @return mixed 
         * @static 
         */
            public static function pluck($column){
            return \Illuminate\Database\Eloquent\Builder::pluck($column);
            }
        
            /**
         * Chunk the results of the query.
         *
         * @param int $count
         * @param callable $callback
         * @return void 
         * @static 
         */
            public static function chunk($count, $callback){
            \Illuminate\Database\Eloquent\Builder::chunk($count, $callback);
            }
        
            /**
         * Get an array with the values of a given column.
         *
         * @param string $column
         * @param string $key
         * @return array 
         * @static 
         */
            public static function lists($column, $key = null){
            return \Illuminate\Database\Eloquent\Builder::lists($column, $key);
            }
        
            /**
         * Get a paginator for the "select" statement.
         *
         * @param int $perPage
         * @param array $columns
         * @return \Illuminate\Pagination\Paginator 
         * @static 
         */
            public static function paginate($perPage = null, $columns = array()){
            return \Illuminate\Database\Eloquent\Builder::paginate($perPage, $columns);
            }
        
            /**
         * Get a paginator only supporting simple next and previous links.
         * 
         * This is more efficient on larger data-sets, etc.
         *
         * @param int $perPage
         * @param array $columns
         * @return \Illuminate\Pagination\Paginator 
         * @static 
         */
            public static function simplePaginate($perPage = null, $columns = array()){
            return \Illuminate\Database\Eloquent\Builder::simplePaginate($perPage, $columns);
            }
        
            /**
         * Register a replacement for the default delete function.
         *
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function onDelete($callback){
            \Illuminate\Database\Eloquent\Builder::onDelete($callback);
            }
        
            /**
         * Get the hydrated models without eager loading.
         *
         * @param array $columns
         * @return \Illuminate\Database\Eloquent\Model[] 
         * @static 
         */
            public static function getModels($columns = array()){
            return \Illuminate\Database\Eloquent\Builder::getModels($columns);
            }
        
            /**
         * Eager load the relationships for the models.
         *
         * @param array $models
         * @return array 
         * @static 
         */
            public static function eagerLoadRelations($models){
            return \Illuminate\Database\Eloquent\Builder::eagerLoadRelations($models);
            }
        
            /**
         * Add a basic where clause to the query.
         *
         * @param string $column
         * @param string $operator
         * @param mixed $value
         * @param string $boolean
         * @return $this 
         * @static 
         */
            public static function where($column, $operator = null, $value = null, $boolean = 'and'){
            return \Illuminate\Database\Eloquent\Builder::where($column, $operator, $value, $boolean);
            }
        
            /**
         * Add an "or where" clause to the query.
         *
         * @param string $column
         * @param string $operator
         * @param mixed $value
         * @return \Illuminate\Database\Eloquent\Builder|static 
         * @static 
         */
            public static function orWhere($column, $operator = null, $value = null){
            return \Illuminate\Database\Eloquent\Builder::orWhere($column, $operator, $value);
            }
        
            /**
         * Add a relationship count condition to the query.
         *
         * @param string $relation
         * @param string $operator
         * @param int $count
         * @param string $boolean
         * @param \Closure $callback
         * @return \Illuminate\Database\Eloquent\Builder|static 
         * @static 
         */
            public static function has($relation, $operator = '>=', $count = 1, $boolean = 'and', $callback = null){
            return \Illuminate\Database\Eloquent\Builder::has($relation, $operator, $count, $boolean, $callback);
            }
        
            /**
         * Add a relationship count condition to the query with where clauses.
         *
         * @param string $relation
         * @param \Closure $callback
         * @param string $operator
         * @param int $count
         * @return \Illuminate\Database\Eloquent\Builder|static 
         * @static 
         */
            public static function whereHas($relation, $callback, $operator = '>=', $count = 1){
            return \Illuminate\Database\Eloquent\Builder::whereHas($relation, $callback, $operator, $count);
            }
        
            /**
         * Add a relationship count condition to the query with an "or".
         *
         * @param string $relation
         * @param string $operator
         * @param int $count
         * @return \Illuminate\Database\Eloquent\Builder|static 
         * @static 
         */
            public static function orHas($relation, $operator = '>=', $count = 1){
            return \Illuminate\Database\Eloquent\Builder::orHas($relation, $operator, $count);
            }
        
            /**
         * Add a relationship count condition to the query with where clauses and an "or".
         *
         * @param string $relation
         * @param \Closure $callback
         * @param string $operator
         * @param int $count
         * @return \Illuminate\Database\Eloquent\Builder|static 
         * @static 
         */
            public static function orWhereHas($relation, $callback, $operator = '>=', $count = 1){
            return \Illuminate\Database\Eloquent\Builder::orWhereHas($relation, $callback, $operator, $count);
            }
        
            /**
         * Get the underlying query builder instance.
         *
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function getQuery(){
            return \Illuminate\Database\Eloquent\Builder::getQuery();
            }
        
            /**
         * Set the underlying query builder instance.
         *
         * @param \Illuminate\Database\Query\Builder $query
         * @return void 
         * @static 
         */
            public static function setQuery($query){
            \Illuminate\Database\Eloquent\Builder::setQuery($query);
            }
        
            /**
         * Get the relationships being eagerly loaded.
         *
         * @return array 
         * @static 
         */
            public static function getEagerLoads(){
            return \Illuminate\Database\Eloquent\Builder::getEagerLoads();
            }
        
            /**
         * Set the relationships being eagerly loaded.
         *
         * @param array $eagerLoad
         * @return void 
         * @static 
         */
            public static function setEagerLoads($eagerLoad){
            \Illuminate\Database\Eloquent\Builder::setEagerLoads($eagerLoad);
            }
        
            /**
         * Get the model instance being queried.
         *
         * @return \Illuminate\Database\Eloquent\Model 
         * @static 
         */
            public static function getModel(){
            return \Illuminate\Database\Eloquent\Builder::getModel();
            }
        
            /**
         * Set a model instance for the model being queried.
         *
         * @param \Illuminate\Database\Eloquent\Model $model
         * @return $this 
         * @static 
         */
            public static function setModel($model){
            return \Illuminate\Database\Eloquent\Builder::setModel($model);
            }
        
            /**
         * Extend the builder with a given callback.
         *
         * @param string $name
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function macro($name, $callback){
            \Illuminate\Database\Eloquent\Builder::macro($name, $callback);
            }
        
            /**
         * Get the given macro by name.
         *
         * @param string $name
         * @return \Closure 
         * @static 
         */
            public static function getMacro($name){
            return \Illuminate\Database\Eloquent\Builder::getMacro($name);
            }
        
            /**
         * Set the columns to be selected.
         *
         * @param array $columns
         * @return $this 
         * @static 
         */
            public static function select($columns = array()){
            return \Illuminate\Database\Query\Builder::select($columns);
            }
        
            /**
         * Add a new "raw" select expression to the query.
         *
         * @param string $expression
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function selectRaw($expression){
            return \Illuminate\Database\Query\Builder::selectRaw($expression);
            }
        
            /**
         * Add a new select column to the query.
         *
         * @param mixed $column
         * @return $this 
         * @static 
         */
            public static function addSelect($column){
            return \Illuminate\Database\Query\Builder::addSelect($column);
            }
        
            /**
         * Force the query to only return distinct results.
         *
         * @return $this 
         * @static 
         */
            public static function distinct(){
            return \Illuminate\Database\Query\Builder::distinct();
            }
        
            /**
         * Set the table which the query is targeting.
         *
         * @param string $table
         * @return $this 
         * @static 
         */
            public static function from($table){
            return \Illuminate\Database\Query\Builder::from($table);
            }
        
            /**
         * Add a join clause to the query.
         *
         * @param string $table
         * @param string $one
         * @param string $operator
         * @param string $two
         * @param string $type
         * @param bool $where
         * @return $this 
         * @static 
         */
            public static function join($table, $one, $operator = null, $two = null, $type = 'inner', $where = false){
            return \Illuminate\Database\Query\Builder::join($table, $one, $operator, $two, $type, $where);
            }
        
            /**
         * Add a "join where" clause to the query.
         *
         * @param string $table
         * @param string $one
         * @param string $operator
         * @param string $two
         * @param string $type
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function joinWhere($table, $one, $operator, $two, $type = 'inner'){
            return \Illuminate\Database\Query\Builder::joinWhere($table, $one, $operator, $two, $type);
            }
        
            /**
         * Add a left join to the query.
         *
         * @param string $table
         * @param string $first
         * @param string $operator
         * @param string $second
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function leftJoin($table, $first, $operator = null, $second = null){
            return \Illuminate\Database\Query\Builder::leftJoin($table, $first, $operator, $second);
            }
        
            /**
         * Add a "join where" clause to the query.
         *
         * @param string $table
         * @param string $one
         * @param string $operator
         * @param string $two
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function leftJoinWhere($table, $one, $operator, $two){
            return \Illuminate\Database\Query\Builder::leftJoinWhere($table, $one, $operator, $two);
            }
        
            /**
         * Add a right join to the query.
         *
         * @param string $table
         * @param string $first
         * @param string $operator
         * @param string $second
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function rightJoin($table, $first, $operator = null, $second = null){
            return \Illuminate\Database\Query\Builder::rightJoin($table, $first, $operator, $second);
            }
        
            /**
         * Add a "right join where" clause to the query.
         *
         * @param string $table
         * @param string $one
         * @param string $operator
         * @param string $two
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function rightJoinWhere($table, $one, $operator, $two){
            return \Illuminate\Database\Query\Builder::rightJoinWhere($table, $one, $operator, $two);
            }
        
            /**
         * Add a raw where clause to the query.
         *
         * @param string $sql
         * @param array $bindings
         * @param string $boolean
         * @return $this 
         * @static 
         */
            public static function whereRaw($sql, $bindings = array(), $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::whereRaw($sql, $bindings, $boolean);
            }
        
            /**
         * Add a raw or where clause to the query.
         *
         * @param string $sql
         * @param array $bindings
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function orWhereRaw($sql, $bindings = array()){
            return \Illuminate\Database\Query\Builder::orWhereRaw($sql, $bindings);
            }
        
            /**
         * Add a where between statement to the query.
         *
         * @param string $column
         * @param array $values
         * @param string $boolean
         * @param bool $not
         * @return $this 
         * @static 
         */
            public static function whereBetween($column, $values, $boolean = 'and', $not = false){
            return \Illuminate\Database\Query\Builder::whereBetween($column, $values, $boolean, $not);
            }
        
            /**
         * Add an or where between statement to the query.
         *
         * @param string $column
         * @param array $values
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function orWhereBetween($column, $values){
            return \Illuminate\Database\Query\Builder::orWhereBetween($column, $values);
            }
        
            /**
         * Add a where not between statement to the query.
         *
         * @param string $column
         * @param array $values
         * @param string $boolean
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function whereNotBetween($column, $values, $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::whereNotBetween($column, $values, $boolean);
            }
        
            /**
         * Add an or where not between statement to the query.
         *
         * @param string $column
         * @param array $values
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function orWhereNotBetween($column, $values){
            return \Illuminate\Database\Query\Builder::orWhereNotBetween($column, $values);
            }
        
            /**
         * Add a nested where statement to the query.
         *
         * @param \Closure $callback
         * @param string $boolean
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function whereNested($callback, $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::whereNested($callback, $boolean);
            }
        
            /**
         * Add another query builder as a nested where to the query builder.
         *
         * @param \Illuminate\Database\Query\Builder|static $query
         * @param string $boolean
         * @return $this 
         * @static 
         */
            public static function addNestedWhereQuery($query, $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::addNestedWhereQuery($query, $boolean);
            }
        
            /**
         * Add an exists clause to the query.
         *
         * @param \Closure $callback
         * @param string $boolean
         * @param bool $not
         * @return $this 
         * @static 
         */
            public static function whereExists($callback, $boolean = 'and', $not = false){
            return \Illuminate\Database\Query\Builder::whereExists($callback, $boolean, $not);
            }
        
            /**
         * Add an or exists clause to the query.
         *
         * @param \Closure $callback
         * @param bool $not
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function orWhereExists($callback, $not = false){
            return \Illuminate\Database\Query\Builder::orWhereExists($callback, $not);
            }
        
            /**
         * Add a where not exists clause to the query.
         *
         * @param \Closure $callback
         * @param string $boolean
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function whereNotExists($callback, $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::whereNotExists($callback, $boolean);
            }
        
            /**
         * Add a where not exists clause to the query.
         *
         * @param \Closure $callback
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function orWhereNotExists($callback){
            return \Illuminate\Database\Query\Builder::orWhereNotExists($callback);
            }
        
            /**
         * Add a "where in" clause to the query.
         *
         * @param string $column
         * @param mixed $values
         * @param string $boolean
         * @param bool $not
         * @return $this 
         * @static 
         */
            public static function whereIn($column, $values, $boolean = 'and', $not = false){
            return \Illuminate\Database\Query\Builder::whereIn($column, $values, $boolean, $not);
            }
        
            /**
         * Add an "or where in" clause to the query.
         *
         * @param string $column
         * @param mixed $values
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function orWhereIn($column, $values){
            return \Illuminate\Database\Query\Builder::orWhereIn($column, $values);
            }
        
            /**
         * Add a "where not in" clause to the query.
         *
         * @param string $column
         * @param mixed $values
         * @param string $boolean
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function whereNotIn($column, $values, $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::whereNotIn($column, $values, $boolean);
            }
        
            /**
         * Add an "or where not in" clause to the query.
         *
         * @param string $column
         * @param mixed $values
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function orWhereNotIn($column, $values){
            return \Illuminate\Database\Query\Builder::orWhereNotIn($column, $values);
            }
        
            /**
         * Add a "where null" clause to the query.
         *
         * @param string $column
         * @param string $boolean
         * @param bool $not
         * @return $this 
         * @static 
         */
            public static function whereNull($column, $boolean = 'and', $not = false){
            return \Illuminate\Database\Query\Builder::whereNull($column, $boolean, $not);
            }
        
            /**
         * Add an "or where null" clause to the query.
         *
         * @param string $column
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function orWhereNull($column){
            return \Illuminate\Database\Query\Builder::orWhereNull($column);
            }
        
            /**
         * Add a "where not null" clause to the query.
         *
         * @param string $column
         * @param string $boolean
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function whereNotNull($column, $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::whereNotNull($column, $boolean);
            }
        
            /**
         * Add an "or where not null" clause to the query.
         *
         * @param string $column
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function orWhereNotNull($column){
            return \Illuminate\Database\Query\Builder::orWhereNotNull($column);
            }
        
            /**
         * Add a "where day" statement to the query.
         *
         * @param string $column
         * @param string $operator
         * @param int $value
         * @param string $boolean
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function whereDay($column, $operator, $value, $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::whereDay($column, $operator, $value, $boolean);
            }
        
            /**
         * Add a "where month" statement to the query.
         *
         * @param string $column
         * @param string $operator
         * @param int $value
         * @param string $boolean
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function whereMonth($column, $operator, $value, $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::whereMonth($column, $operator, $value, $boolean);
            }
        
            /**
         * Add a "where year" statement to the query.
         *
         * @param string $column
         * @param string $operator
         * @param int $value
         * @param string $boolean
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function whereYear($column, $operator, $value, $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::whereYear($column, $operator, $value, $boolean);
            }
        
            /**
         * Handles dynamic "where" clauses to the query.
         *
         * @param string $method
         * @param string $parameters
         * @return $this 
         * @static 
         */
            public static function dynamicWhere($method, $parameters){
            return \Illuminate\Database\Query\Builder::dynamicWhere($method, $parameters);
            }
        
            /**
         * Add a "group by" clause to the query.
         *
         * @return $this 
         * @static 
         */
            public static function groupBy(){
            return \Illuminate\Database\Query\Builder::groupBy();
            }
        
            /**
         * Add a "having" clause to the query.
         *
         * @param string $column
         * @param string $operator
         * @param string $value
         * @param string $boolean
         * @return $this 
         * @static 
         */
            public static function having($column, $operator = null, $value = null, $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::having($column, $operator, $value, $boolean);
            }
        
            /**
         * Add a "or having" clause to the query.
         *
         * @param string $column
         * @param string $operator
         * @param string $value
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function orHaving($column, $operator = null, $value = null){
            return \Illuminate\Database\Query\Builder::orHaving($column, $operator, $value);
            }
        
            /**
         * Add a raw having clause to the query.
         *
         * @param string $sql
         * @param array $bindings
         * @param string $boolean
         * @return $this 
         * @static 
         */
            public static function havingRaw($sql, $bindings = array(), $boolean = 'and'){
            return \Illuminate\Database\Query\Builder::havingRaw($sql, $bindings, $boolean);
            }
        
            /**
         * Add a raw or having clause to the query.
         *
         * @param string $sql
         * @param array $bindings
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function orHavingRaw($sql, $bindings = array()){
            return \Illuminate\Database\Query\Builder::orHavingRaw($sql, $bindings);
            }
        
            /**
         * Add an "order by" clause to the query.
         *
         * @param string $column
         * @param string $direction
         * @return $this 
         * @static 
         */
            public static function orderBy($column, $direction = 'asc'){
            return \Illuminate\Database\Query\Builder::orderBy($column, $direction);
            }
        
            /**
         * Add an "order by" clause for a timestamp to the query.
         *
         * @param string $column
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function latest($column = 'created_at'){
            return \Illuminate\Database\Query\Builder::latest($column);
            }
        
            /**
         * Add an "order by" clause for a timestamp to the query.
         *
         * @param string $column
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function oldest($column = 'created_at'){
            return \Illuminate\Database\Query\Builder::oldest($column);
            }
        
            /**
         * Add a raw "order by" clause to the query.
         *
         * @param string $sql
         * @param array $bindings
         * @return $this 
         * @static 
         */
            public static function orderByRaw($sql, $bindings = array()){
            return \Illuminate\Database\Query\Builder::orderByRaw($sql, $bindings);
            }
        
            /**
         * Set the "offset" value of the query.
         *
         * @param int $value
         * @return $this 
         * @static 
         */
            public static function offset($value){
            return \Illuminate\Database\Query\Builder::offset($value);
            }
        
            /**
         * Alias to set the "offset" value of the query.
         *
         * @param int $value
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function skip($value){
            return \Illuminate\Database\Query\Builder::skip($value);
            }
        
            /**
         * Set the "limit" value of the query.
         *
         * @param int $value
         * @return $this 
         * @static 
         */
            public static function limit($value){
            return \Illuminate\Database\Query\Builder::limit($value);
            }
        
            /**
         * Alias to set the "limit" value of the query.
         *
         * @param int $value
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function take($value){
            return \Illuminate\Database\Query\Builder::take($value);
            }
        
            /**
         * Set the limit and offset for a given page.
         *
         * @param int $page
         * @param int $perPage
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function forPage($page, $perPage = 15){
            return \Illuminate\Database\Query\Builder::forPage($page, $perPage);
            }
        
            /**
         * Add a union statement to the query.
         *
         * @param \Illuminate\Database\Query\Builder|\Closure $query
         * @param bool $all
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function union($query, $all = false){
            return \Illuminate\Database\Query\Builder::union($query, $all);
            }
        
            /**
         * Add a union all statement to the query.
         *
         * @param \Illuminate\Database\Query\Builder|\Closure $query
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function unionAll($query){
            return \Illuminate\Database\Query\Builder::unionAll($query);
            }
        
            /**
         * Lock the selected rows in the table.
         *
         * @param bool $value
         * @return $this 
         * @static 
         */
            public static function lock($value = true){
            return \Illuminate\Database\Query\Builder::lock($value);
            }
        
            /**
         * Lock the selected rows in the table for updating.
         *
         * @return \Illuminate\Database\Query\Builder 
         * @static 
         */
            public static function lockForUpdate(){
            return \Illuminate\Database\Query\Builder::lockForUpdate();
            }
        
            /**
         * Share lock the selected rows in the table.
         *
         * @return \Illuminate\Database\Query\Builder 
         * @static 
         */
            public static function sharedLock(){
            return \Illuminate\Database\Query\Builder::sharedLock();
            }
        
            /**
         * Get the SQL representation of the query.
         *
         * @return string 
         * @static 
         */
            public static function toSql(){
            return \Illuminate\Database\Query\Builder::toSql();
            }
        
            /**
         * Indicate that the query results should be cached.
         *
         * @param \DateTime|int $minutes
         * @param string $key
         * @return $this 
         * @static 
         */
            public static function remember($minutes, $key = null){
            return \Illuminate\Database\Query\Builder::remember($minutes, $key);
            }
        
            /**
         * Indicate that the query results should be cached forever.
         *
         * @param string $key
         * @return \Illuminate\Database\Query\Builder|static 
         * @static 
         */
            public static function rememberForever($key = null){
            return \Illuminate\Database\Query\Builder::rememberForever($key);
            }
        
            /**
         * Indicate that the results, if cached, should use the given cache tags.
         *
         * @param array|mixed $cacheTags
         * @return $this 
         * @static 
         */
            public static function cacheTags($cacheTags){
            return \Illuminate\Database\Query\Builder::cacheTags($cacheTags);
            }
        
            /**
         * Indicate that the results, if cached, should use the given cache driver.
         *
         * @param string $cacheDriver
         * @return $this 
         * @static 
         */
            public static function cacheDriver($cacheDriver){
            return \Illuminate\Database\Query\Builder::cacheDriver($cacheDriver);
            }
        
            /**
         * Execute the query as a fresh "select" statement.
         *
         * @param array $columns
         * @return array|static[] 
         * @static 
         */
            public static function getFresh($columns = array()){
            return \Illuminate\Database\Query\Builder::getFresh($columns);
            }
        
            /**
         * Execute the query as a cached "select" statement.
         *
         * @param array $columns
         * @return array 
         * @static 
         */
            public static function getCached($columns = array()){
            return \Illuminate\Database\Query\Builder::getCached($columns);
            }
        
            /**
         * Get a unique cache key for the complete query.
         *
         * @return string 
         * @static 
         */
            public static function getCacheKey(){
            return \Illuminate\Database\Query\Builder::getCacheKey();
            }
        
            /**
         * Generate the unique cache key for the query.
         *
         * @return string 
         * @static 
         */
            public static function generateCacheKey(){
            return \Illuminate\Database\Query\Builder::generateCacheKey();
            }
        
            /**
         * Concatenate values of a given column as a string.
         *
         * @param string $column
         * @param string $glue
         * @return string 
         * @static 
         */
            public static function implode($column, $glue = null){
            return \Illuminate\Database\Query\Builder::implode($column, $glue);
            }
        
            /**
         * Build a paginator instance from a raw result array.
         *
         * @param \Illuminate\Pagination\Factory $paginator
         * @param array $results
         * @param int $perPage
         * @return \Illuminate\Pagination\Paginator 
         * @static 
         */
            public static function buildRawPaginator($paginator, $results, $perPage){
            return \Illuminate\Database\Query\Builder::buildRawPaginator($paginator, $results, $perPage);
            }
        
            /**
         * Get the count of the total records for pagination.
         *
         * @return int 
         * @static 
         */
            public static function getPaginationCount(){
            return \Illuminate\Database\Query\Builder::getPaginationCount();
            }
        
            /**
         * Determine if any rows exist for the current query.
         *
         * @return bool 
         * @static 
         */
            public static function exists(){
            return \Illuminate\Database\Query\Builder::exists();
            }
        
            /**
         * Retrieve the "count" result of the query.
         *
         * @param string $columns
         * @return int 
         * @static 
         */
            public static function count($columns = '*'){
            return \Illuminate\Database\Query\Builder::count($columns);
            }
        
            /**
         * Retrieve the minimum value of a given column.
         *
         * @param string $column
         * @return mixed 
         * @static 
         */
            public static function min($column){
            return \Illuminate\Database\Query\Builder::min($column);
            }
        
            /**
         * Retrieve the maximum value of a given column.
         *
         * @param string $column
         * @return mixed 
         * @static 
         */
            public static function max($column){
            return \Illuminate\Database\Query\Builder::max($column);
            }
        
            /**
         * Retrieve the sum of the values of a given column.
         *
         * @param string $column
         * @return mixed 
         * @static 
         */
            public static function sum($column){
            return \Illuminate\Database\Query\Builder::sum($column);
            }
        
            /**
         * Retrieve the average of the values of a given column.
         *
         * @param string $column
         * @return mixed 
         * @static 
         */
            public static function avg($column){
            return \Illuminate\Database\Query\Builder::avg($column);
            }
        
            /**
         * Execute an aggregate function on the database.
         *
         * @param string $function
         * @param array $columns
         * @return mixed 
         * @static 
         */
            public static function aggregate($function, $columns = array()){
            return \Illuminate\Database\Query\Builder::aggregate($function, $columns);
            }
        
            /**
         * Insert a new record into the database.
         *
         * @param array $values
         * @return bool 
         * @static 
         */
            public static function insert($values){
            return \Illuminate\Database\Query\Builder::insert($values);
            }
        
            /**
         * Insert a new record and get the value of the primary key.
         *
         * @param array $values
         * @param string $sequence
         * @return int 
         * @static 
         */
            public static function insertGetId($values, $sequence = null){
            return \Illuminate\Database\Query\Builder::insertGetId($values, $sequence);
            }
        
            /**
         * Run a truncate statement on the table.
         *
         * @return void 
         * @static 
         */
            public static function truncate(){
            \Illuminate\Database\Query\Builder::truncate();
            }
        
            /**
         * Merge an array of where clauses and bindings.
         *
         * @param array $wheres
         * @param array $bindings
         * @return void 
         * @static 
         */
            public static function mergeWheres($wheres, $bindings){
            \Illuminate\Database\Query\Builder::mergeWheres($wheres, $bindings);
            }
        
            /**
         * Create a raw database expression.
         *
         * @param mixed $value
         * @return \Illuminate\Database\Query\Expression 
         * @static 
         */
            public static function raw($value){
            return \Illuminate\Database\Query\Builder::raw($value);
            }
        
            /**
         * Get the current query value bindings in a flattened array.
         *
         * @return array 
         * @static 
         */
            public static function getBindings(){
            return \Illuminate\Database\Query\Builder::getBindings();
            }
        
            /**
         * Get the raw array of bindings.
         *
         * @return array 
         * @static 
         */
            public static function getRawBindings(){
            return \Illuminate\Database\Query\Builder::getRawBindings();
            }
        
            /**
         * Set the bindings on the query builder.
         *
         * @param array $bindings
         * @param string $type
         * @return $this 
         * @throws \InvalidArgumentException
         * @static 
         */
            public static function setBindings($bindings, $type = 'where'){
            return \Illuminate\Database\Query\Builder::setBindings($bindings, $type);
            }
        
            /**
         * Add a binding to the query.
         *
         * @param mixed $value
         * @param string $type
         * @return $this 
         * @throws \InvalidArgumentException
         * @static 
         */
            public static function addBinding($value, $type = 'where'){
            return \Illuminate\Database\Query\Builder::addBinding($value, $type);
            }
        
            /**
         * Merge an array of bindings into our bindings.
         *
         * @param \Illuminate\Database\Query\Builder $query
         * @return $this 
         * @static 
         */
            public static function mergeBindings($query){
            return \Illuminate\Database\Query\Builder::mergeBindings($query);
            }
        
            /**
         * Get the database query processor instance.
         *
         * @return \Illuminate\Database\Query\Processors\Processor 
         * @static 
         */
            public static function getProcessor(){
            return \Illuminate\Database\Query\Builder::getProcessor();
            }
        
            /**
         * Get the query grammar instance.
         *
         * @return \Illuminate\Database\Grammar 
         * @static 
         */
            public static function getGrammar(){
            return \Illuminate\Database\Query\Builder::getGrammar();
            }
        
        }

    
        class Event extends \Illuminate\Support\Facades\Event{
        
            /**
         * Register an event listener with the dispatcher.
         *
         * @param string|array $events
         * @param mixed $listener
         * @param int $priority
         * @return void 
         * @static 
         */
            public static function listen($events, $listener, $priority = 0){
            \Illuminate\Events\Dispatcher::listen($events, $listener, $priority);
            }
        
            /**
         * Determine if a given event has listeners.
         *
         * @param string $eventName
         * @return bool 
         * @static 
         */
            public static function hasListeners($eventName){
            return \Illuminate\Events\Dispatcher::hasListeners($eventName);
            }
        
            /**
         * Register a queued event and payload.
         *
         * @param string $event
         * @param array $payload
         * @return void 
         * @static 
         */
            public static function queue($event, $payload = array()){
            \Illuminate\Events\Dispatcher::queue($event, $payload);
            }
        
            /**
         * Register an event subscriber with the dispatcher.
         *
         * @param string $subscriber
         * @return void 
         * @static 
         */
            public static function subscribe($subscriber){
            \Illuminate\Events\Dispatcher::subscribe($subscriber);
            }
        
            /**
         * Fire an event until the first non-null response is returned.
         *
         * @param string $event
         * @param array $payload
         * @return mixed 
         * @static 
         */
            public static function until($event, $payload = array()){
            return \Illuminate\Events\Dispatcher::until($event, $payload);
            }
        
            /**
         * Flush a set of queued events.
         *
         * @param string $event
         * @return void 
         * @static 
         */
            public static function flush($event){
            \Illuminate\Events\Dispatcher::flush($event);
            }
        
            /**
         * Get the event that is currently firing.
         *
         * @return string 
         * @static 
         */
            public static function firing(){
            return \Illuminate\Events\Dispatcher::firing();
            }
        
            /**
         * Fire an event and call the listeners.
         *
         * @param string $event
         * @param mixed $payload
         * @param bool $halt
         * @return array|null 
         * @static 
         */
            public static function fire($event, $payload = array(), $halt = false){
            return \Illuminate\Events\Dispatcher::fire($event, $payload, $halt);
            }
        
            /**
         * Get all of the listeners for a given event name.
         *
         * @param string $eventName
         * @return array 
         * @static 
         */
            public static function getListeners($eventName){
            return \Illuminate\Events\Dispatcher::getListeners($eventName);
            }
        
            /**
         * Register an event listener with the dispatcher.
         *
         * @param mixed $listener
         * @return mixed 
         * @static 
         */
            public static function makeListener($listener){
            return \Illuminate\Events\Dispatcher::makeListener($listener);
            }
        
            /**
         * Create a class based listener using the IoC container.
         *
         * @param mixed $listener
         * @return \Closure 
         * @static 
         */
            public static function createClassListener($listener){
            return \Illuminate\Events\Dispatcher::createClassListener($listener);
            }
        
            /**
         * Remove a set of listeners from the dispatcher.
         *
         * @param string $event
         * @return void 
         * @static 
         */
            public static function forget($event){
            \Illuminate\Events\Dispatcher::forget($event);
            }
        
            /**
         * Forget all of the queued listeners.
         *
         * @return void 
         * @static 
         */
            public static function forgetQueued(){
            \Illuminate\Events\Dispatcher::forgetQueued();
            }
        
        }

    
        class File extends \Illuminate\Support\Facades\File{
        
            /**
         * Determine if a file exists.
         *
         * @param string $path
         * @return bool 
         * @static 
         */
            public static function exists($path){
            return \Illuminate\Filesystem\Filesystem::exists($path);
            }
        
            /**
         * Get the contents of a file.
         *
         * @param string $path
         * @return string 
         * @throws FileNotFoundException
         * @static 
         */
            public static function get($path){
            return \Illuminate\Filesystem\Filesystem::get($path);
            }
        
            /**
         * Get the returned value of a file.
         *
         * @param string $path
         * @return mixed 
         * @throws FileNotFoundException
         * @static 
         */
            public static function getRequire($path){
            return \Illuminate\Filesystem\Filesystem::getRequire($path);
            }
        
            /**
         * Require the given file once.
         *
         * @param string $file
         * @return mixed 
         * @static 
         */
            public static function requireOnce($file){
            return \Illuminate\Filesystem\Filesystem::requireOnce($file);
            }
        
            /**
         * Write the contents of a file.
         *
         * @param string $path
         * @param string $contents
         * @return int 
         * @static 
         */
            public static function put($path, $contents){
            return \Illuminate\Filesystem\Filesystem::put($path, $contents);
            }
        
            /**
         * Prepend to a file.
         *
         * @param string $path
         * @param string $data
         * @return int 
         * @static 
         */
            public static function prepend($path, $data){
            return \Illuminate\Filesystem\Filesystem::prepend($path, $data);
            }
        
            /**
         * Append to a file.
         *
         * @param string $path
         * @param string $data
         * @return int 
         * @static 
         */
            public static function append($path, $data){
            return \Illuminate\Filesystem\Filesystem::append($path, $data);
            }
        
            /**
         * Delete the file at a given path.
         *
         * @param string|array $paths
         * @return bool 
         * @static 
         */
            public static function delete($paths){
            return \Illuminate\Filesystem\Filesystem::delete($paths);
            }
        
            /**
         * Move a file to a new location.
         *
         * @param string $path
         * @param string $target
         * @return bool 
         * @static 
         */
            public static function move($path, $target){
            return \Illuminate\Filesystem\Filesystem::move($path, $target);
            }
        
            /**
         * Copy a file to a new location.
         *
         * @param string $path
         * @param string $target
         * @return bool 
         * @static 
         */
            public static function copy($path, $target){
            return \Illuminate\Filesystem\Filesystem::copy($path, $target);
            }
        
            /**
         * Extract the file extension from a file path.
         *
         * @param string $path
         * @return string 
         * @static 
         */
            public static function extension($path){
            return \Illuminate\Filesystem\Filesystem::extension($path);
            }
        
            /**
         * Get the file type of a given file.
         *
         * @param string $path
         * @return string 
         * @static 
         */
            public static function type($path){
            return \Illuminate\Filesystem\Filesystem::type($path);
            }
        
            /**
         * Get the file size of a given file.
         *
         * @param string $path
         * @return int 
         * @static 
         */
            public static function size($path){
            return \Illuminate\Filesystem\Filesystem::size($path);
            }
        
            /**
         * Get the file's last modification time.
         *
         * @param string $path
         * @return int 
         * @static 
         */
            public static function lastModified($path){
            return \Illuminate\Filesystem\Filesystem::lastModified($path);
            }
        
            /**
         * Determine if the given path is a directory.
         *
         * @param string $directory
         * @return bool 
         * @static 
         */
            public static function isDirectory($directory){
            return \Illuminate\Filesystem\Filesystem::isDirectory($directory);
            }
        
            /**
         * Determine if the given path is writable.
         *
         * @param string $path
         * @return bool 
         * @static 
         */
            public static function isWritable($path){
            return \Illuminate\Filesystem\Filesystem::isWritable($path);
            }
        
            /**
         * Determine if the given path is a file.
         *
         * @param string $file
         * @return bool 
         * @static 
         */
            public static function isFile($file){
            return \Illuminate\Filesystem\Filesystem::isFile($file);
            }
        
            /**
         * Find path names matching a given pattern.
         *
         * @param string $pattern
         * @param int $flags
         * @return array 
         * @static 
         */
            public static function glob($pattern, $flags = 0){
            return \Illuminate\Filesystem\Filesystem::glob($pattern, $flags);
            }
        
            /**
         * Get an array of all files in a directory.
         *
         * @param string $directory
         * @return array 
         * @static 
         */
            public static function files($directory){
            return \Illuminate\Filesystem\Filesystem::files($directory);
            }
        
            /**
         * Get all of the files from the given directory (recursive).
         *
         * @param string $directory
         * @return array 
         * @static 
         */
            public static function allFiles($directory){
            return \Illuminate\Filesystem\Filesystem::allFiles($directory);
            }
        
            /**
         * Get all of the directories within a given directory.
         *
         * @param string $directory
         * @return array 
         * @static 
         */
            public static function directories($directory){
            return \Illuminate\Filesystem\Filesystem::directories($directory);
            }
        
            /**
         * Create a directory.
         *
         * @param string $path
         * @param int $mode
         * @param bool $recursive
         * @param bool $force
         * @return bool 
         * @static 
         */
            public static function makeDirectory($path, $mode = 493, $recursive = false, $force = false){
            return \Illuminate\Filesystem\Filesystem::makeDirectory($path, $mode, $recursive, $force);
            }
        
            /**
         * Copy a directory from one location to another.
         *
         * @param string $directory
         * @param string $destination
         * @param int $options
         * @return bool 
         * @static 
         */
            public static function copyDirectory($directory, $destination, $options = null){
            return \Illuminate\Filesystem\Filesystem::copyDirectory($directory, $destination, $options);
            }
        
            /**
         * Recursively delete a directory.
         * 
         * The directory itself may be optionally preserved.
         *
         * @param string $directory
         * @param bool $preserve
         * @return bool 
         * @static 
         */
            public static function deleteDirectory($directory, $preserve = false){
            return \Illuminate\Filesystem\Filesystem::deleteDirectory($directory, $preserve);
            }
        
            /**
         * Empty the specified directory of all files and folders.
         *
         * @param string $directory
         * @return bool 
         * @static 
         */
            public static function cleanDirectory($directory){
            return \Illuminate\Filesystem\Filesystem::cleanDirectory($directory);
            }
        
        }

    
        class Form extends \Illuminate\Support\Facades\Form{
        
            /**
         * Open up a new HTML form.
         *
         * @param array $options
         * @return string 
         * @static 
         */
            public static function open($options = array()){
            return \Illuminate\Html\FormBuilder::open($options);
            }
        
            /**
         * Create a new model based form builder.
         *
         * @param mixed $model
         * @param array $options
         * @return string 
         * @static 
         */
            public static function model($model, $options = array()){
            return \Illuminate\Html\FormBuilder::model($model, $options);
            }
        
            /**
         * Set the model instance on the form builder.
         *
         * @param mixed $model
         * @return void 
         * @static 
         */
            public static function setModel($model){
            \Illuminate\Html\FormBuilder::setModel($model);
            }
        
            /**
         * Close the current form.
         *
         * @return string 
         * @static 
         */
            public static function close(){
            return \Illuminate\Html\FormBuilder::close();
            }
        
            /**
         * Generate a hidden field with the current CSRF token.
         *
         * @return string 
         * @static 
         */
            public static function token(){
            return \Illuminate\Html\FormBuilder::token();
            }
        
            /**
         * Create a form label element.
         *
         * @param string $name
         * @param string $value
         * @param array $options
         * @return string 
         * @static 
         */
            public static function label($name, $value = null, $options = array()){
            return \Illuminate\Html\FormBuilder::label($name, $value, $options);
            }
        
            /**
         * Create a form input field.
         *
         * @param string $type
         * @param string $name
         * @param string $value
         * @param array $options
         * @return string 
         * @static 
         */
            public static function input($type, $name, $value = null, $options = array()){
            return \Illuminate\Html\FormBuilder::input($type, $name, $value, $options);
            }
        
            /**
         * Create a text input field.
         *
         * @param string $name
         * @param string $value
         * @param array $options
         * @return string 
         * @static 
         */
            public static function text($name, $value = null, $options = array()){
            return \Illuminate\Html\FormBuilder::text($name, $value, $options);
            }
        
            /**
         * Create a password input field.
         *
         * @param string $name
         * @param array $options
         * @return string 
         * @static 
         */
            public static function password($name, $options = array()){
            return \Illuminate\Html\FormBuilder::password($name, $options);
            }
        
            /**
         * Create a hidden input field.
         *
         * @param string $name
         * @param string $value
         * @param array $options
         * @return string 
         * @static 
         */
            public static function hidden($name, $value = null, $options = array()){
            return \Illuminate\Html\FormBuilder::hidden($name, $value, $options);
            }
        
            /**
         * Create an e-mail input field.
         *
         * @param string $name
         * @param string $value
         * @param array $options
         * @return string 
         * @static 
         */
            public static function email($name, $value = null, $options = array()){
            return \Illuminate\Html\FormBuilder::email($name, $value, $options);
            }
        
            /**
         * Create a url input field.
         *
         * @param string $name
         * @param string $value
         * @param array $options
         * @return string 
         * @static 
         */
            public static function url($name, $value = null, $options = array()){
            return \Illuminate\Html\FormBuilder::url($name, $value, $options);
            }
        
            /**
         * Create a file input field.
         *
         * @param string $name
         * @param array $options
         * @return string 
         * @static 
         */
            public static function file($name, $options = array()){
            return \Illuminate\Html\FormBuilder::file($name, $options);
            }
        
            /**
         * Create a textarea input field.
         *
         * @param string $name
         * @param string $value
         * @param array $options
         * @return string 
         * @static 
         */
            public static function textarea($name, $value = null, $options = array()){
            return \Illuminate\Html\FormBuilder::textarea($name, $value, $options);
            }
        
            /**
         * Create a number input field.
         *
         * @param string $name
         * @param array $options
         * @return string 
         * @static 
         */
            public static function number($name, $value = null, $options = array()){
            return \Illuminate\Html\FormBuilder::number($name, $value, $options);
            }
        
            /**
         * Create a select box field.
         *
         * @param string $name
         * @param array $list
         * @param string $selected
         * @param array $options
         * @return string 
         * @static 
         */
            public static function select($name, $list = array(), $selected = null, $options = array()){
            return \Illuminate\Html\FormBuilder::select($name, $list, $selected, $options);
            }
        
            /**
         * Create a select range field.
         *
         * @param string $name
         * @param string $begin
         * @param string $end
         * @param string $selected
         * @param array $options
         * @return string 
         * @static 
         */
            public static function selectRange($name, $begin, $end, $selected = null, $options = array()){
            return \Illuminate\Html\FormBuilder::selectRange($name, $begin, $end, $selected, $options);
            }
        
            /**
         * Create a select year field.
         *
         * @param string $name
         * @param string $begin
         * @param string $end
         * @param string $selected
         * @param array $options
         * @return string 
         * @static 
         */
            public static function selectYear(){
            return \Illuminate\Html\FormBuilder::selectYear();
            }
        
            /**
         * Create a select month field.
         *
         * @param string $name
         * @param string $selected
         * @param array $options
         * @param string $format
         * @return string 
         * @static 
         */
            public static function selectMonth($name, $selected = null, $options = array(), $format = '%B'){
            return \Illuminate\Html\FormBuilder::selectMonth($name, $selected, $options, $format);
            }
        
            /**
         * Get the select option for the given value.
         *
         * @param string $display
         * @param string $value
         * @param string $selected
         * @return string 
         * @static 
         */
            public static function getSelectOption($display, $value, $selected){
            return \Illuminate\Html\FormBuilder::getSelectOption($display, $value, $selected);
            }
        
            /**
         * Create a checkbox input field.
         *
         * @param string $name
         * @param mixed $value
         * @param bool $checked
         * @param array $options
         * @return string 
         * @static 
         */
            public static function checkbox($name, $value = 1, $checked = null, $options = array()){
            return \Illuminate\Html\FormBuilder::checkbox($name, $value, $checked, $options);
            }
        
            /**
         * Create a radio button input field.
         *
         * @param string $name
         * @param mixed $value
         * @param bool $checked
         * @param array $options
         * @return string 
         * @static 
         */
            public static function radio($name, $value = null, $checked = null, $options = array()){
            return \Illuminate\Html\FormBuilder::radio($name, $value, $checked, $options);
            }
        
            /**
         * Create a HTML reset input element.
         *
         * @param string $value
         * @param array $attributes
         * @return string 
         * @static 
         */
            public static function reset($value, $attributes = array()){
            return \Illuminate\Html\FormBuilder::reset($value, $attributes);
            }
        
            /**
         * Create a HTML image input element.
         *
         * @param string $url
         * @param string $name
         * @param array $attributes
         * @return string 
         * @static 
         */
            public static function image($url, $name = null, $attributes = array()){
            return \Illuminate\Html\FormBuilder::image($url, $name, $attributes);
            }
        
            /**
         * Create a submit button element.
         *
         * @param string $value
         * @param array $options
         * @return string 
         * @static 
         */
            public static function submit($value = null, $options = array()){
            return \Illuminate\Html\FormBuilder::submit($value, $options);
            }
        
            /**
         * Create a button element.
         *
         * @param string $value
         * @param array $options
         * @return string 
         * @static 
         */
            public static function button($value = null, $options = array()){
            return \Illuminate\Html\FormBuilder::button($value, $options);
            }
        
            /**
         * Get the ID attribute for a field name.
         *
         * @param string $name
         * @param array $attributes
         * @return string 
         * @static 
         */
            public static function getIdAttribute($name, $attributes){
            return \Illuminate\Html\FormBuilder::getIdAttribute($name, $attributes);
            }
        
            /**
         * Get the value that should be assigned to the field.
         *
         * @param string $name
         * @param string $value
         * @return string 
         * @static 
         */
            public static function getValueAttribute($name, $value = null){
            return \Illuminate\Html\FormBuilder::getValueAttribute($name, $value);
            }
        
            /**
         * Get a value from the session's old input.
         *
         * @param string $name
         * @return string 
         * @static 
         */
            public static function old($name){
            return \Illuminate\Html\FormBuilder::old($name);
            }
        
            /**
         * Determine if the old input is empty.
         *
         * @return bool 
         * @static 
         */
            public static function oldInputIsEmpty(){
            return \Illuminate\Html\FormBuilder::oldInputIsEmpty();
            }
        
            /**
         * Get the session store implementation.
         *
         * @return \Illuminate\Session\Store $session
         * @static 
         */
            public static function getSessionStore(){
            return \Illuminate\Html\FormBuilder::getSessionStore();
            }
        
            /**
         * Set the session store implementation.
         *
         * @param \Illuminate\Session\Store $session
         * @return $this 
         * @static 
         */
            public static function setSessionStore($session){
            return \Illuminate\Html\FormBuilder::setSessionStore($session);
            }
        
            /**
         * Register a custom macro.
         *
         * @param string $name
         * @param callable $macro
         * @return void 
         * @static 
         */
            public static function macro($name, $macro){
            \Illuminate\Html\FormBuilder::macro($name, $macro);
            }
        
            /**
         * Checks if macro is registered
         *
         * @param string $name
         * @return boolean 
         * @static 
         */
            public static function hasMacro($name){
            return \Illuminate\Html\FormBuilder::hasMacro($name);
            }
        
        }

    
        class Hash extends \Illuminate\Support\Facades\Hash{
        
            /**
         * Hash the given value.
         *
         * @param string $value
         * @param array $options
         * @return string 
         * @throws \RuntimeException
         * @static 
         */
            public static function make($value, $options = array()){
            return \Illuminate\Hashing\BcryptHasher::make($value, $options);
            }
        
            /**
         * Check the given plain value against a hash.
         *
         * @param string $value
         * @param string $hashedValue
         * @param array $options
         * @return bool 
         * @static 
         */
            public static function check($value, $hashedValue, $options = array()){
            return \Illuminate\Hashing\BcryptHasher::check($value, $hashedValue, $options);
            }
        
            /**
         * Check if the given hash has been hashed using the given options.
         *
         * @param string $hashedValue
         * @param array $options
         * @return bool 
         * @static 
         */
            public static function needsRehash($hashedValue, $options = array()){
            return \Illuminate\Hashing\BcryptHasher::needsRehash($hashedValue, $options);
            }
        
        }

    
        class HTML extends \Illuminate\Support\Facades\HTML{
        
            /**
         * Convert an HTML string to entities.
         *
         * @param string $value
         * @return string 
         * @static 
         */
            public static function entities($value){
            return \Illuminate\Html\HtmlBuilder::entities($value);
            }
        
            /**
         * Convert entities to HTML characters.
         *
         * @param string $value
         * @return string 
         * @static 
         */
            public static function decode($value){
            return \Illuminate\Html\HtmlBuilder::decode($value);
            }
        
            /**
         * Generate a link to a JavaScript file.
         *
         * @param string $url
         * @param array $attributes
         * @param bool $secure
         * @return string 
         * @static 
         */
            public static function script($url, $attributes = array(), $secure = null){
            return \Illuminate\Html\HtmlBuilder::script($url, $attributes, $secure);
            }
        
            /**
         * Generate a link to a CSS file.
         *
         * @param string $url
         * @param array $attributes
         * @param bool $secure
         * @return string 
         * @static 
         */
            public static function style($url, $attributes = array(), $secure = null){
            return \Illuminate\Html\HtmlBuilder::style($url, $attributes, $secure);
            }
        
            /**
         * Generate an HTML image element.
         *
         * @param string $url
         * @param string $alt
         * @param array $attributes
         * @param bool $secure
         * @return string 
         * @static 
         */
            public static function image($url, $alt = null, $attributes = array(), $secure = null){
            return \Illuminate\Html\HtmlBuilder::image($url, $alt, $attributes, $secure);
            }
        
            /**
         * Generate a HTML link.
         *
         * @param string $url
         * @param string $title
         * @param array $attributes
         * @param bool $secure
         * @return string 
         * @static 
         */
            public static function link($url, $title = null, $attributes = array(), $secure = null){
            return \Illuminate\Html\HtmlBuilder::link($url, $title, $attributes, $secure);
            }
        
            /**
         * Generate a HTTPS HTML link.
         *
         * @param string $url
         * @param string $title
         * @param array $attributes
         * @return string 
         * @static 
         */
            public static function secureLink($url, $title = null, $attributes = array()){
            return \Illuminate\Html\HtmlBuilder::secureLink($url, $title, $attributes);
            }
        
            /**
         * Generate a HTML link to an asset.
         *
         * @param string $url
         * @param string $title
         * @param array $attributes
         * @param bool $secure
         * @return string 
         * @static 
         */
            public static function linkAsset($url, $title = null, $attributes = array(), $secure = null){
            return \Illuminate\Html\HtmlBuilder::linkAsset($url, $title, $attributes, $secure);
            }
        
            /**
         * Generate a HTTPS HTML link to an asset.
         *
         * @param string $url
         * @param string $title
         * @param array $attributes
         * @return string 
         * @static 
         */
            public static function linkSecureAsset($url, $title = null, $attributes = array()){
            return \Illuminate\Html\HtmlBuilder::linkSecureAsset($url, $title, $attributes);
            }
        
            /**
         * Generate a HTML link to a named route.
         *
         * @param string $name
         * @param string $title
         * @param array $parameters
         * @param array $attributes
         * @return string 
         * @static 
         */
            public static function linkRoute($name, $title = null, $parameters = array(), $attributes = array()){
            return \Illuminate\Html\HtmlBuilder::linkRoute($name, $title, $parameters, $attributes);
            }
        
            /**
         * Generate a HTML link to a controller action.
         *
         * @param string $action
         * @param string $title
         * @param array $parameters
         * @param array $attributes
         * @return string 
         * @static 
         */
            public static function linkAction($action, $title = null, $parameters = array(), $attributes = array()){
            return \Illuminate\Html\HtmlBuilder::linkAction($action, $title, $parameters, $attributes);
            }
        
            /**
         * Generate a HTML link to an email address.
         *
         * @param string $email
         * @param string $title
         * @param array $attributes
         * @return string 
         * @static 
         */
            public static function mailto($email, $title = null, $attributes = array()){
            return \Illuminate\Html\HtmlBuilder::mailto($email, $title, $attributes);
            }
        
            /**
         * Obfuscate an e-mail address to prevent spam-bots from sniffing it.
         *
         * @param string $email
         * @return string 
         * @static 
         */
            public static function email($email){
            return \Illuminate\Html\HtmlBuilder::email($email);
            }
        
            /**
         * Generate an ordered list of items.
         *
         * @param array $list
         * @param array $attributes
         * @return string 
         * @static 
         */
            public static function ol($list, $attributes = array()){
            return \Illuminate\Html\HtmlBuilder::ol($list, $attributes);
            }
        
            /**
         * Generate an un-ordered list of items.
         *
         * @param array $list
         * @param array $attributes
         * @return string 
         * @static 
         */
            public static function ul($list, $attributes = array()){
            return \Illuminate\Html\HtmlBuilder::ul($list, $attributes);
            }
        
            /**
         * Build an HTML attribute string from an array.
         *
         * @param array $attributes
         * @return string 
         * @static 
         */
            public static function attributes($attributes){
            return \Illuminate\Html\HtmlBuilder::attributes($attributes);
            }
        
            /**
         * Obfuscate a string to prevent spam-bots from sniffing it.
         *
         * @param string $value
         * @return string 
         * @static 
         */
            public static function obfuscate($value){
            return \Illuminate\Html\HtmlBuilder::obfuscate($value);
            }
        
            /**
         * Register a custom macro.
         *
         * @param string $name
         * @param callable $macro
         * @return void 
         * @static 
         */
            public static function macro($name, $macro){
            \Illuminate\Html\HtmlBuilder::macro($name, $macro);
            }
        
            /**
         * Checks if macro is registered
         *
         * @param string $name
         * @return boolean 
         * @static 
         */
            public static function hasMacro($name){
            return \Illuminate\Html\HtmlBuilder::hasMacro($name);
            }
        
        }

    
        class Input extends \Illuminate\Support\Facades\Input{
        
            /**
         * Return the Request instance.
         *
         * @return $this 
         * @static 
         */
            public static function instance(){
            return \Illuminate\Http\Request::instance();
            }
        
            /**
         * Get the request method.
         *
         * @return string 
         * @static 
         */
            public static function method(){
            return \Illuminate\Http\Request::method();
            }
        
            /**
         * Get the root URL for the application.
         *
         * @return string 
         * @static 
         */
            public static function root(){
            return \Illuminate\Http\Request::root();
            }
        
            /**
         * Get the URL (no query string) for the request.
         *
         * @return string 
         * @static 
         */
            public static function url(){
            return \Illuminate\Http\Request::url();
            }
        
            /**
         * Get the full URL for the request.
         *
         * @return string 
         * @static 
         */
            public static function fullUrl(){
            return \Illuminate\Http\Request::fullUrl();
            }
        
            /**
         * Get the current path info for the request.
         *
         * @return string 
         * @static 
         */
            public static function path(){
            return \Illuminate\Http\Request::path();
            }
        
            /**
         * Get the current encoded path info for the request.
         *
         * @return string 
         * @static 
         */
            public static function decodedPath(){
            return \Illuminate\Http\Request::decodedPath();
            }
        
            /**
         * Get a segment from the URI (1 based index).
         *
         * @param string $index
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function segment($index, $default = null){
            return \Illuminate\Http\Request::segment($index, $default);
            }
        
            /**
         * Get all of the segments for the request path.
         *
         * @return array 
         * @static 
         */
            public static function segments(){
            return \Illuminate\Http\Request::segments();
            }
        
            /**
         * Determine if the current request URI matches a pattern.
         *
         * @param mixed  string
         * @return bool 
         * @static 
         */
            public static function is(){
            return \Illuminate\Http\Request::is();
            }
        
            /**
         * Determine if the request is the result of an AJAX call.
         *
         * @return bool 
         * @static 
         */
            public static function ajax(){
            return \Illuminate\Http\Request::ajax();
            }
        
            /**
         * Determine if the request is over HTTPS.
         *
         * @return bool 
         * @static 
         */
            public static function secure(){
            return \Illuminate\Http\Request::secure();
            }
        
            /**
         * Returns the client IP address.
         *
         * @return string 
         * @static 
         */
            public static function ip(){
            return \Illuminate\Http\Request::ip();
            }
        
            /**
         * Returns the client IP addresses.
         *
         * @return array 
         * @static 
         */
            public static function ips(){
            return \Illuminate\Http\Request::ips();
            }
        
            /**
         * Determine if the request contains a given input item key.
         *
         * @param string|array $key
         * @return bool 
         * @static 
         */
            public static function exists($key){
            return \Illuminate\Http\Request::exists($key);
            }
        
            /**
         * Determine if the request contains a non-empty value for an input item.
         *
         * @param string|array $key
         * @return bool 
         * @static 
         */
            public static function has($key){
            return \Illuminate\Http\Request::has($key);
            }
        
            /**
         * Get all of the input and files for the request.
         *
         * @return array 
         * @static 
         */
            public static function all(){
            return \Illuminate\Http\Request::all();
            }
        
            /**
         * Retrieve an input item from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function input($key = null, $default = null){
            return \Illuminate\Http\Request::input($key, $default);
            }
        
            /**
         * Get a subset of the items from the input data.
         *
         * @param array $keys
         * @return array 
         * @static 
         */
            public static function only($keys){
            return \Illuminate\Http\Request::only($keys);
            }
        
            /**
         * Get all of the input except for a specified array of items.
         *
         * @param array $keys
         * @return array 
         * @static 
         */
            public static function except($keys){
            return \Illuminate\Http\Request::except($keys);
            }
        
            /**
         * Retrieve a query string item from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function query($key = null, $default = null){
            return \Illuminate\Http\Request::query($key, $default);
            }
        
            /**
         * Determine if a cookie is set on the request.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function hasCookie($key){
            return \Illuminate\Http\Request::hasCookie($key);
            }
        
            /**
         * Retrieve a cookie from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function cookie($key = null, $default = null){
            return \Illuminate\Http\Request::cookie($key, $default);
            }
        
            /**
         * Retrieve a file from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return \Symfony\Component\HttpFoundation\File\UploadedFile|array 
         * @static 
         */
            public static function file($key = null, $default = null){
            return \Illuminate\Http\Request::file($key, $default);
            }
        
            /**
         * Determine if the uploaded data contains a file.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function hasFile($key){
            return \Illuminate\Http\Request::hasFile($key);
            }
        
            /**
         * Retrieve a header from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function header($key = null, $default = null){
            return \Illuminate\Http\Request::header($key, $default);
            }
        
            /**
         * Retrieve a server variable from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function server($key = null, $default = null){
            return \Illuminate\Http\Request::server($key, $default);
            }
        
            /**
         * Retrieve an old input item.
         *
         * @param string $key
         * @param mixed $default
         * @return mixed 
         * @static 
         */
            public static function old($key = null, $default = null){
            return \Illuminate\Http\Request::old($key, $default);
            }
        
            /**
         * Flash the input for the current request to the session.
         *
         * @param string $filter
         * @param array $keys
         * @return void 
         * @static 
         */
            public static function flash($filter = null, $keys = array()){
            \Illuminate\Http\Request::flash($filter, $keys);
            }
        
            /**
         * Flash only some of the input to the session.
         *
         * @param mixed  string
         * @return void 
         * @static 
         */
            public static function flashOnly($keys){
            \Illuminate\Http\Request::flashOnly($keys);
            }
        
            /**
         * Flash only some of the input to the session.
         *
         * @param mixed  string
         * @return void 
         * @static 
         */
            public static function flashExcept($keys){
            \Illuminate\Http\Request::flashExcept($keys);
            }
        
            /**
         * Flush all of the old input from the session.
         *
         * @return void 
         * @static 
         */
            public static function flush(){
            \Illuminate\Http\Request::flush();
            }
        
            /**
         * Merge new input into the current request's input array.
         *
         * @param array $input
         * @return void 
         * @static 
         */
            public static function merge($input){
            \Illuminate\Http\Request::merge($input);
            }
        
            /**
         * Replace the input for the current request.
         *
         * @param array $input
         * @return void 
         * @static 
         */
            public static function replace($input){
            \Illuminate\Http\Request::replace($input);
            }
        
            /**
         * Get the JSON payload for the request.
         *
         * @param string $key
         * @param mixed $default
         * @return mixed 
         * @static 
         */
            public static function json($key = null, $default = null){
            return \Illuminate\Http\Request::json($key, $default);
            }
        
            /**
         * Determine if the request is sending JSON.
         *
         * @return bool 
         * @static 
         */
            public static function isJson(){
            return \Illuminate\Http\Request::isJson();
            }
        
            /**
         * Determine if the current request is asking for JSON in return.
         *
         * @return bool 
         * @static 
         */
            public static function wantsJson(){
            return \Illuminate\Http\Request::wantsJson();
            }
        
            /**
         * Get the data format expected in the response.
         *
         * @param string $default
         * @return string 
         * @static 
         */
            public static function format($default = 'html'){
            return \Illuminate\Http\Request::format($default);
            }
        
            /**
         * Create an Illuminate request from a Symfony instance.
         *
         * @param \Symfony\Component\HttpFoundation\Request $request
         * @return \Illuminate\Http\Request 
         * @static 
         */
            public static function createFromBase($request){
            return \Illuminate\Http\Request::createFromBase($request);
            }
        
            /**
         * Get the session associated with the request.
         *
         * @return \Illuminate\Session\Store 
         * @throws \RuntimeException
         * @static 
         */
            public static function session(){
            return \Illuminate\Http\Request::session();
            }
        
            /**
         * Sets the parameters for this request.
         * 
         * This method also re-initializes all properties.
         *
         * @param array $query The GET parameters
         * @param array $request The POST parameters
         * @param array $attributes The request attributes (parameters parsed from the PATH_INFO, ...)
         * @param array $cookies The COOKIE parameters
         * @param array $files The FILES parameters
         * @param array $server The SERVER parameters
         * @param string $content The raw body data
         * @api 
         * @static 
         */
            public static function initialize($query = array(), $request = array(), $attributes = array(), $cookies = array(), $files = array(), $server = array(), $content = null){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::initialize($query, $request, $attributes, $cookies, $files, $server, $content);
            }
        
            /**
         * Creates a new request with values from PHP's super globals.
         *
         * @return \Symfony\Component\HttpFoundation\Request A new request
         * @api 
         * @static 
         */
            public static function createFromGlobals(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::createFromGlobals();
            }
        
            /**
         * Creates a Request based on a given URI and configuration.
         * 
         * The information contained in the URI always take precedence
         * over the other information (server and parameters).
         *
         * @param string $uri The URI
         * @param string $method The HTTP method
         * @param array $parameters The query (GET) or request (POST) parameters
         * @param array $cookies The request cookies ($_COOKIE)
         * @param array $files The request files ($_FILES)
         * @param array $server The server parameters ($_SERVER)
         * @param string $content The raw body data
         * @return \Symfony\Component\HttpFoundation\Request A Request instance
         * @api 
         * @static 
         */
            public static function create($uri, $method = 'GET', $parameters = array(), $cookies = array(), $files = array(), $server = array(), $content = null){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::create($uri, $method, $parameters, $cookies, $files, $server, $content);
            }
        
            /**
         * Sets a callable able to create a Request instance.
         * 
         * This is mainly useful when you need to override the Request class
         * to keep BC with an existing system. It should not be used for any
         * other purpose.
         *
         * @param callable|null $callable A PHP callable
         * @static 
         */
            public static function setFactory($callable){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setFactory($callable);
            }
        
            /**
         * Clones a request and overrides some of its parameters.
         *
         * @param array $query The GET parameters
         * @param array $request The POST parameters
         * @param array $attributes The request attributes (parameters parsed from the PATH_INFO, ...)
         * @param array $cookies The COOKIE parameters
         * @param array $files The FILES parameters
         * @param array $server The SERVER parameters
         * @return \Symfony\Component\HttpFoundation\Request The duplicated request
         * @api 
         * @static 
         */
            public static function duplicate($query = null, $request = null, $attributes = null, $cookies = null, $files = null, $server = null){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::duplicate($query, $request, $attributes, $cookies, $files, $server);
            }
        
            /**
         * Overrides the PHP global variables according to this request instance.
         * 
         * It overrides $_GET, $_POST, $_REQUEST, $_SERVER, $_COOKIE.
         * $_FILES is never override, see rfc1867
         *
         * @api 
         * @static 
         */
            public static function overrideGlobals(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::overrideGlobals();
            }
        
            /**
         * Sets a list of trusted proxies.
         * 
         * You should only list the reverse proxies that you manage directly.
         *
         * @param array $proxies A list of trusted proxies
         * @api 
         * @static 
         */
            public static function setTrustedProxies($proxies){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setTrustedProxies($proxies);
            }
        
            /**
         * Gets the list of trusted proxies.
         *
         * @return array An array of trusted proxies.
         * @static 
         */
            public static function getTrustedProxies(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getTrustedProxies();
            }
        
            /**
         * Sets a list of trusted host patterns.
         * 
         * You should only list the hosts you manage using regexs.
         *
         * @param array $hostPatterns A list of trusted host patterns
         * @static 
         */
            public static function setTrustedHosts($hostPatterns){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setTrustedHosts($hostPatterns);
            }
        
            /**
         * Gets the list of trusted host patterns.
         *
         * @return array An array of trusted host patterns.
         * @static 
         */
            public static function getTrustedHosts(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getTrustedHosts();
            }
        
            /**
         * Sets the name for trusted headers.
         * 
         * The following header keys are supported:
         * 
         *  * Request::HEADER_CLIENT_IP:    defaults to X-Forwarded-For   (see getClientIp())
         *  * Request::HEADER_CLIENT_HOST:  defaults to X-Forwarded-Host  (see getClientHost())
         *  * Request::HEADER_CLIENT_PORT:  defaults to X-Forwarded-Port  (see getClientPort())
         *  * Request::HEADER_CLIENT_PROTO: defaults to X-Forwarded-Proto (see getScheme() and isSecure())
         * 
         * Setting an empty value allows to disable the trusted header for the given key.
         *
         * @param string $key The header key
         * @param string $value The header name
         * @throws \InvalidArgumentException
         * @static 
         */
            public static function setTrustedHeaderName($key, $value){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setTrustedHeaderName($key, $value);
            }
        
            /**
         * Gets the trusted proxy header name.
         *
         * @param string $key The header key
         * @return string The header name
         * @throws \InvalidArgumentException
         * @static 
         */
            public static function getTrustedHeaderName($key){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getTrustedHeaderName($key);
            }
        
            /**
         * Normalizes a query string.
         * 
         * It builds a normalized query string, where keys/value pairs are alphabetized,
         * have consistent escaping and unneeded delimiters are removed.
         *
         * @param string $qs Query string
         * @return string A normalized query string for the Request
         * @static 
         */
            public static function normalizeQueryString($qs){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::normalizeQueryString($qs);
            }
        
            /**
         * Enables support for the _method request parameter to determine the intended HTTP method.
         * 
         * Be warned that enabling this feature might lead to CSRF issues in your code.
         * Check that you are using CSRF tokens when required.
         * 
         * The HTTP method can only be overridden when the real HTTP method is POST.
         *
         * @static 
         */
            public static function enableHttpMethodParameterOverride(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::enableHttpMethodParameterOverride();
            }
        
            /**
         * Checks whether support for the _method request parameter is enabled.
         *
         * @return bool True when the _method request parameter is enabled, false otherwise
         * @static 
         */
            public static function getHttpMethodParameterOverride(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getHttpMethodParameterOverride();
            }
        
            /**
         * Gets a "parameter" value.
         * 
         * This method is mainly useful for libraries that want to provide some flexibility.
         * 
         * Order of precedence: GET, PATH, POST
         * 
         * Avoid using this method in controllers:
         * 
         *  * slow
         *  * prefer to get from a "named" source
         * 
         * It is better to explicitly get request parameters from the appropriate
         * public property instead (query, attributes, request).
         *
         * @param string $key the key
         * @param mixed $default the default value
         * @param bool $deep is parameter deep in multidimensional array
         * @return mixed 
         * @static 
         */
            public static function get($key, $default = null, $deep = false){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::get($key, $default, $deep);
            }
        
            /**
         * Gets the Session.
         *
         * @return \Symfony\Component\HttpFoundation\SessionInterface|null The session
         * @api 
         * @static 
         */
            public static function getSession(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getSession();
            }
        
            /**
         * Whether the request contains a Session which was started in one of the
         * previous requests.
         *
         * @return bool 
         * @api 
         * @static 
         */
            public static function hasPreviousSession(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::hasPreviousSession();
            }
        
            /**
         * Whether the request contains a Session object.
         * 
         * This method does not give any information about the state of the session object,
         * like whether the session is started or not. It is just a way to check if this Request
         * is associated with a Session instance.
         *
         * @return bool true when the Request contains a Session object, false otherwise
         * @api 
         * @static 
         */
            public static function hasSession(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::hasSession();
            }
        
            /**
         * Sets the Session.
         *
         * @param \Symfony\Component\HttpFoundation\SessionInterface $session The Session
         * @api 
         * @static 
         */
            public static function setSession($session){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setSession($session);
            }
        
            /**
         * Returns the client IP addresses.
         * 
         * In the returned array the most trusted IP address is first, and the
         * least trusted one last. The "real" client IP address is the last one,
         * but this is also the least trusted one. Trusted proxies are stripped.
         * 
         * Use this method carefully; you should use getClientIp() instead.
         *
         * @return array The client IP addresses
         * @see getClientIp()
         * @static 
         */
            public static function getClientIps(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getClientIps();
            }
        
            /**
         * Returns the client IP address.
         * 
         * This method can read the client IP address from the "X-Forwarded-For" header
         * when trusted proxies were set via "setTrustedProxies()". The "X-Forwarded-For"
         * header value is a comma+space separated list of IP addresses, the left-most
         * being the original client, and each successive proxy that passed the request
         * adding the IP address where it received the request from.
         * 
         * If your reverse proxy uses a different header name than "X-Forwarded-For",
         * ("Client-Ip" for instance), configure it via "setTrustedHeaderName()" with
         * the "client-ip" key.
         *
         * @return string The client IP address
         * @see getClientIps()
         * @see http://en.wikipedia.org/wiki/X-Forwarded-For
         * @api 
         * @static 
         */
            public static function getClientIp(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getClientIp();
            }
        
            /**
         * Returns current script name.
         *
         * @return string 
         * @api 
         * @static 
         */
            public static function getScriptName(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getScriptName();
            }
        
            /**
         * Returns the path being requested relative to the executed script.
         * 
         * The path info always starts with a /.
         * 
         * Suppose this request is instantiated from /mysite on localhost:
         * 
         *  * http://localhost/mysite              returns an empty string
         *  * http://localhost/mysite/about        returns '/about'
         *  * http://localhost/mysite/enco%20ded   returns '/enco%20ded'
         *  * http://localhost/mysite/about?var=1  returns '/about'
         *
         * @return string The raw path (i.e. not urldecoded)
         * @api 
         * @static 
         */
            public static function getPathInfo(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getPathInfo();
            }
        
            /**
         * Returns the root path from which this request is executed.
         * 
         * Suppose that an index.php file instantiates this request object:
         * 
         *  * http://localhost/index.php         returns an empty string
         *  * http://localhost/index.php/page    returns an empty string
         *  * http://localhost/web/index.php     returns '/web'
         *  * http://localhost/we%20b/index.php  returns '/we%20b'
         *
         * @return string The raw path (i.e. not urldecoded)
         * @api 
         * @static 
         */
            public static function getBasePath(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getBasePath();
            }
        
            /**
         * Returns the root URL from which this request is executed.
         * 
         * The base URL never ends with a /.
         * 
         * This is similar to getBasePath(), except that it also includes the
         * script filename (e.g. index.php) if one exists.
         *
         * @return string The raw URL (i.e. not urldecoded)
         * @api 
         * @static 
         */
            public static function getBaseUrl(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getBaseUrl();
            }
        
            /**
         * Gets the request's scheme.
         *
         * @return string 
         * @api 
         * @static 
         */
            public static function getScheme(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getScheme();
            }
        
            /**
         * Returns the port on which the request is made.
         * 
         * This method can read the client port from the "X-Forwarded-Port" header
         * when trusted proxies were set via "setTrustedProxies()".
         * 
         * The "X-Forwarded-Port" header must contain the client port.
         * 
         * If your reverse proxy uses a different header name than "X-Forwarded-Port",
         * configure it via "setTrustedHeaderName()" with the "client-port" key.
         *
         * @return string 
         * @api 
         * @static 
         */
            public static function getPort(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getPort();
            }
        
            /**
         * Returns the user.
         *
         * @return string|null 
         * @static 
         */
            public static function getUser(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getUser();
            }
        
            /**
         * Returns the password.
         *
         * @return string|null 
         * @static 
         */
            public static function getPassword(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getPassword();
            }
        
            /**
         * Gets the user info.
         *
         * @return string A user name and, optionally, scheme-specific information about how to gain authorization to
         *                access the server
         * @static 
         */
            public static function getUserInfo(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getUserInfo();
            }
        
            /**
         * Returns the HTTP host being requested.
         * 
         * The port name will be appended to the host if it's non-standard.
         *
         * @return string 
         * @api 
         * @static 
         */
            public static function getHttpHost(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getHttpHost();
            }
        
            /**
         * Returns the requested URI (path and query string).
         *
         * @return string The raw URI (i.e. not URI decoded)
         * @api 
         * @static 
         */
            public static function getRequestUri(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getRequestUri();
            }
        
            /**
         * Gets the scheme and HTTP host.
         * 
         * If the URL was called with basic authentication, the user
         * and the password are not added to the generated string.
         *
         * @return string The scheme and HTTP host
         * @static 
         */
            public static function getSchemeAndHttpHost(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getSchemeAndHttpHost();
            }
        
            /**
         * Generates a normalized URI (URL) for the Request.
         *
         * @return string A normalized URI (URL) for the Request
         * @see getQueryString()
         * @api 
         * @static 
         */
            public static function getUri(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getUri();
            }
        
            /**
         * Generates a normalized URI for the given path.
         *
         * @param string $path A path to use instead of the current one
         * @return string The normalized URI for the path
         * @api 
         * @static 
         */
            public static function getUriForPath($path){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getUriForPath($path);
            }
        
            /**
         * Generates the normalized query string for the Request.
         * 
         * It builds a normalized query string, where keys/value pairs are alphabetized
         * and have consistent escaping.
         *
         * @return string|null A normalized query string for the Request
         * @api 
         * @static 
         */
            public static function getQueryString(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getQueryString();
            }
        
            /**
         * Checks whether the request is secure or not.
         * 
         * This method can read the client port from the "X-Forwarded-Proto" header
         * when trusted proxies were set via "setTrustedProxies()".
         * 
         * The "X-Forwarded-Proto" header must contain the protocol: "https" or "http".
         * 
         * If your reverse proxy uses a different header name than "X-Forwarded-Proto"
         * ("SSL_HTTPS" for instance), configure it via "setTrustedHeaderName()" with
         * the "client-proto" key.
         *
         * @return bool 
         * @api 
         * @static 
         */
            public static function isSecure(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::isSecure();
            }
        
            /**
         * Returns the host name.
         * 
         * This method can read the client port from the "X-Forwarded-Host" header
         * when trusted proxies were set via "setTrustedProxies()".
         * 
         * The "X-Forwarded-Host" header must contain the client host name.
         * 
         * If your reverse proxy uses a different header name than "X-Forwarded-Host",
         * configure it via "setTrustedHeaderName()" with the "client-host" key.
         *
         * @return string 
         * @throws \UnexpectedValueException when the host name is invalid
         * @api 
         * @static 
         */
            public static function getHost(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getHost();
            }
        
            /**
         * Sets the request method.
         *
         * @param string $method
         * @api 
         * @static 
         */
            public static function setMethod($method){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setMethod($method);
            }
        
            /**
         * Gets the request "intended" method.
         * 
         * If the X-HTTP-Method-Override header is set, and if the method is a POST,
         * then it is used to determine the "real" intended HTTP method.
         * 
         * The _method request parameter can also be used to determine the HTTP method,
         * but only if enableHttpMethodParameterOverride() has been called.
         * 
         * The method is always an uppercased string.
         *
         * @return string The request method
         * @api 
         * @see getRealMethod
         * @static 
         */
            public static function getMethod(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getMethod();
            }
        
            /**
         * Gets the "real" request method.
         *
         * @return string The request method
         * @see getMethod
         * @static 
         */
            public static function getRealMethod(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getRealMethod();
            }
        
            /**
         * Gets the mime type associated with the format.
         *
         * @param string $format The format
         * @return string The associated mime type (null if not found)
         * @api 
         * @static 
         */
            public static function getMimeType($format){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getMimeType($format);
            }
        
            /**
         * Gets the format associated with the mime type.
         *
         * @param string $mimeType The associated mime type
         * @return string|null The format (null if not found)
         * @api 
         * @static 
         */
            public static function getFormat($mimeType){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getFormat($mimeType);
            }
        
            /**
         * Associates a format with mime types.
         *
         * @param string $format The format
         * @param string|array $mimeTypes The associated mime types (the preferred one must be the first as it will be
         *                                used as the content type)
         * @api 
         * @static 
         */
            public static function setFormat($format, $mimeTypes){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setFormat($format, $mimeTypes);
            }
        
            /**
         * Gets the request format.
         * 
         * Here is the process to determine the format:
         * 
         *  * format defined by the user (with setRequestFormat())
         *  * _format request parameter
         *  * $default
         *
         * @param string $default The default format
         * @return string The request format
         * @api 
         * @static 
         */
            public static function getRequestFormat($default = 'html'){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getRequestFormat($default);
            }
        
            /**
         * Sets the request format.
         *
         * @param string $format The request format.
         * @api 
         * @static 
         */
            public static function setRequestFormat($format){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setRequestFormat($format);
            }
        
            /**
         * Gets the format associated with the request.
         *
         * @return string|null The format (null if no content type is present)
         * @api 
         * @static 
         */
            public static function getContentType(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getContentType();
            }
        
            /**
         * Sets the default locale.
         *
         * @param string $locale
         * @api 
         * @static 
         */
            public static function setDefaultLocale($locale){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setDefaultLocale($locale);
            }
        
            /**
         * Get the default locale.
         *
         * @return string 
         * @static 
         */
            public static function getDefaultLocale(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getDefaultLocale();
            }
        
            /**
         * Sets the locale.
         *
         * @param string $locale
         * @api 
         * @static 
         */
            public static function setLocale($locale){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setLocale($locale);
            }
        
            /**
         * Get the locale.
         *
         * @return string 
         * @static 
         */
            public static function getLocale(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getLocale();
            }
        
            /**
         * Checks if the request method is of specified type.
         *
         * @param string $method Uppercase request method (GET, POST etc).
         * @return bool 
         * @static 
         */
            public static function isMethod($method){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::isMethod($method);
            }
        
            /**
         * Checks whether the method is safe or not.
         *
         * @return bool 
         * @api 
         * @static 
         */
            public static function isMethodSafe(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::isMethodSafe();
            }
        
            /**
         * Returns the request body content.
         *
         * @param bool $asResource If true, a resource will be returned
         * @return string|resource The request body content or a resource to read the body stream.
         * @throws \LogicException
         * @static 
         */
            public static function getContent($asResource = false){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getContent($asResource);
            }
        
            /**
         * Gets the Etags.
         *
         * @return array The entity tags
         * @static 
         */
            public static function getETags(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getETags();
            }
        
            /**
         * 
         *
         * @return bool 
         * @static 
         */
            public static function isNoCache(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::isNoCache();
            }
        
            /**
         * Returns the preferred language.
         *
         * @param array $locales An array of ordered available locales
         * @return string|null The preferred locale
         * @api 
         * @static 
         */
            public static function getPreferredLanguage($locales = null){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getPreferredLanguage($locales);
            }
        
            /**
         * Gets a list of languages acceptable by the client browser.
         *
         * @return array Languages ordered in the user browser preferences
         * @api 
         * @static 
         */
            public static function getLanguages(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getLanguages();
            }
        
            /**
         * Gets a list of charsets acceptable by the client browser.
         *
         * @return array List of charsets in preferable order
         * @api 
         * @static 
         */
            public static function getCharsets(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getCharsets();
            }
        
            /**
         * Gets a list of encodings acceptable by the client browser.
         *
         * @return array List of encodings in preferable order
         * @static 
         */
            public static function getEncodings(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getEncodings();
            }
        
            /**
         * Gets a list of content types acceptable by the client browser
         *
         * @return array List of content types in preferable order
         * @api 
         * @static 
         */
            public static function getAcceptableContentTypes(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getAcceptableContentTypes();
            }
        
            /**
         * Returns true if the request is a XMLHttpRequest.
         * 
         * It works if your JavaScript library set an X-Requested-With HTTP header.
         * It is known to work with common JavaScript frameworks:
         *
         * @link http://en.wikipedia.org/wiki/List_of_Ajax_frameworks#JavaScript
         * @return bool true if the request is an XMLHttpRequest, false otherwise
         * @api 
         * @static 
         */
            public static function isXmlHttpRequest(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::isXmlHttpRequest();
            }
        
        }

    
        class Lang extends \Illuminate\Support\Facades\Lang{
        
            /**
         * Determine if a translation exists.
         *
         * @param string $key
         * @param string $locale
         * @return bool 
         * @static 
         */
            public static function has($key, $locale = null){
            return \Illuminate\Translation\Translator::has($key, $locale);
            }
        
            /**
         * Get the translation for the given key.
         *
         * @param string $key
         * @param array $replace
         * @param string $locale
         * @return string 
         * @static 
         */
            public static function get($key, $replace = array(), $locale = null){
            return \Illuminate\Translation\Translator::get($key, $replace, $locale);
            }
        
            /**
         * Get a translation according to an integer value.
         *
         * @param string $key
         * @param int $number
         * @param array $replace
         * @param string $locale
         * @return string 
         * @static 
         */
            public static function choice($key, $number, $replace = array(), $locale = null){
            return \Illuminate\Translation\Translator::choice($key, $number, $replace, $locale);
            }
        
            /**
         * Get the translation for a given key.
         *
         * @param string $id
         * @param array $parameters
         * @param string $domain
         * @param string $locale
         * @return string 
         * @static 
         */
            public static function trans($id, $parameters = array(), $domain = 'messages', $locale = null){
            return \Illuminate\Translation\Translator::trans($id, $parameters, $domain, $locale);
            }
        
            /**
         * Get a translation according to an integer value.
         *
         * @param string $id
         * @param int $number
         * @param array $parameters
         * @param string $domain
         * @param string $locale
         * @return string 
         * @static 
         */
            public static function transChoice($id, $number, $parameters = array(), $domain = 'messages', $locale = null){
            return \Illuminate\Translation\Translator::transChoice($id, $number, $parameters, $domain, $locale);
            }
        
            /**
         * Load the specified language group.
         *
         * @param string $namespace
         * @param string $group
         * @param string $locale
         * @return void 
         * @static 
         */
            public static function load($namespace, $group, $locale){
            \Illuminate\Translation\Translator::load($namespace, $group, $locale);
            }
        
            /**
         * Add a new namespace to the loader.
         *
         * @param string $namespace
         * @param string $hint
         * @return void 
         * @static 
         */
            public static function addNamespace($namespace, $hint){
            \Illuminate\Translation\Translator::addNamespace($namespace, $hint);
            }
        
            /**
         * Parse a key into namespace, group, and item.
         *
         * @param string $key
         * @return array 
         * @static 
         */
            public static function parseKey($key){
            return \Illuminate\Translation\Translator::parseKey($key);
            }
        
            /**
         * Get the message selector instance.
         *
         * @return \Symfony\Component\Translation\MessageSelector 
         * @static 
         */
            public static function getSelector(){
            return \Illuminate\Translation\Translator::getSelector();
            }
        
            /**
         * Set the message selector instance.
         *
         * @param \Symfony\Component\Translation\MessageSelector $selector
         * @return void 
         * @static 
         */
            public static function setSelector($selector){
            \Illuminate\Translation\Translator::setSelector($selector);
            }
        
            /**
         * Get the language line loader implementation.
         *
         * @return \Illuminate\Translation\LoaderInterface 
         * @static 
         */
            public static function getLoader(){
            return \Illuminate\Translation\Translator::getLoader();
            }
        
            /**
         * Get the default locale being used.
         *
         * @return string 
         * @static 
         */
            public static function locale(){
            return \Illuminate\Translation\Translator::locale();
            }
        
            /**
         * Get the default locale being used.
         *
         * @return string 
         * @static 
         */
            public static function getLocale(){
            return \Illuminate\Translation\Translator::getLocale();
            }
        
            /**
         * Set the default locale.
         *
         * @param string $locale
         * @return void 
         * @static 
         */
            public static function setLocale($locale){
            \Illuminate\Translation\Translator::setLocale($locale);
            }
        
            /**
         * Get the fallback locale being used.
         *
         * @return string 
         * @static 
         */
            public static function getFallback(){
            return \Illuminate\Translation\Translator::getFallback();
            }
        
            /**
         * Set the fallback locale being used.
         *
         * @param string $fallback
         * @return void 
         * @static 
         */
            public static function setFallback($fallback){
            \Illuminate\Translation\Translator::setFallback($fallback);
            }
        
            /**
         * Set the parsed value of a key.
         *
         * @param string $key
         * @param array $parsed
         * @return void 
         * @static 
         */
            public static function setParsedKey($key, $parsed){
                //Method inherited from \Illuminate\Support\NamespacedItemResolver            
            \Illuminate\Translation\Translator::setParsedKey($key, $parsed);
            }
        
        }

    
        class Log extends \Illuminate\Support\Facades\Log{
        
            /**
         * Adds a log record at the DEBUG level.
         *
         * @param string $message The log message
         * @param array $context The log context
         * @return Boolean Whether the record has been processed
         * @static 
         */
            public static function debug($message, $context = array()){
            return \Monolog\Logger::debug($message, $context);
            }
        
            /**
         * Adds a log record at the INFO level.
         *
         * @param string $message The log message
         * @param array $context The log context
         * @return Boolean Whether the record has been processed
         * @static 
         */
            public static function info($message, $context = array()){
            return \Monolog\Logger::info($message, $context);
            }
        
            /**
         * Adds a log record at the NOTICE level.
         *
         * @param string $message The log message
         * @param array $context The log context
         * @return Boolean Whether the record has been processed
         * @static 
         */
            public static function notice($message, $context = array()){
            return \Monolog\Logger::notice($message, $context);
            }
        
            /**
         * Adds a log record at the WARNING level.
         *
         * @param string $message The log message
         * @param array $context The log context
         * @return Boolean Whether the record has been processed
         * @static 
         */
            public static function warning($message, $context = array()){
            return \Monolog\Logger::warning($message, $context);
            }
        
            /**
         * Adds a log record at the ERROR level.
         *
         * @param string $message The log message
         * @param array $context The log context
         * @return Boolean Whether the record has been processed
         * @static 
         */
            public static function error($message, $context = array()){
            return \Monolog\Logger::error($message, $context);
            }
        
            /**
         * Adds a log record at the CRITICAL level.
         *
         * @param string $message The log message
         * @param array $context The log context
         * @return Boolean Whether the record has been processed
         * @static 
         */
            public static function critical($message, $context = array()){
            return \Monolog\Logger::critical($message, $context);
            }
        
            /**
         * Adds a log record at the ALERT level.
         *
         * @param string $message The log message
         * @param array $context The log context
         * @return Boolean Whether the record has been processed
         * @static 
         */
            public static function alert($message, $context = array()){
            return \Monolog\Logger::alert($message, $context);
            }
        
            /**
         * Adds a log record at the EMERGENCY level.
         *
         * @param string $message The log message
         * @param array $context The log context
         * @return Boolean Whether the record has been processed
         * @static 
         */
            public static function emergency($message, $context = array()){
            return \Monolog\Logger::emergency($message, $context);
            }
        
            /**
         * Register a file log handler.
         *
         * @param string $path
         * @param string $level
         * @return void 
         * @static 
         */
            public static function useFiles($path, $level = 'debug'){
            \Illuminate\Log\Writer::useFiles($path, $level);
            }
        
            /**
         * Register a daily file log handler.
         *
         * @param string $path
         * @param int $days
         * @param string $level
         * @return void 
         * @static 
         */
            public static function useDailyFiles($path, $days = 0, $level = 'debug'){
            \Illuminate\Log\Writer::useDailyFiles($path, $days, $level);
            }
        
            /**
         * Register an error_log handler.
         *
         * @param string $level
         * @param integer $messageType
         * @return void 
         * @static 
         */
            public static function useErrorLog($level = 'debug', $messageType = 0){
            \Illuminate\Log\Writer::useErrorLog($level, $messageType);
            }
        
            /**
         * Register a new callback handler for when
         * a log event is triggered.
         *
         * @param \Closure $callback
         * @return void 
         * @throws \RuntimeException
         * @static 
         */
            public static function listen($callback){
            \Illuminate\Log\Writer::listen($callback);
            }
        
            /**
         * Get the underlying Monolog instance.
         *
         * @return \Monolog\Logger 
         * @static 
         */
            public static function getMonolog(){
            return \Illuminate\Log\Writer::getMonolog();
            }
        
            /**
         * Get the event dispatcher instance.
         *
         * @return \Illuminate\Events\Dispatcher 
         * @static 
         */
            public static function getEventDispatcher(){
            return \Illuminate\Log\Writer::getEventDispatcher();
            }
        
            /**
         * Set the event dispatcher instance.
         *
         * @param \Illuminate\Events\Dispatcher
         * @return void 
         * @static 
         */
            public static function setEventDispatcher($dispatcher){
            \Illuminate\Log\Writer::setEventDispatcher($dispatcher);
            }
        
            /**
         * Dynamically pass log calls into the writer.
         *
         * @param mixed  (level, param, param)
         * @return mixed 
         * @static 
         */
            public static function write(){
            return \Illuminate\Log\Writer::write();
            }
        
        }

    
        class Mail extends \Illuminate\Support\Facades\Mail{
        
            /**
         * Set the global from address and name.
         *
         * @param string $address
         * @param string $name
         * @return void 
         * @static 
         */
            public static function alwaysFrom($address, $name = null){
            \Illuminate\Mail\Mailer::alwaysFrom($address, $name);
            }
        
            /**
         * Send a new message when only a plain part.
         *
         * @param string $view
         * @param array $data
         * @param mixed $callback
         * @return int 
         * @static 
         */
            public static function plain($view, $data, $callback){
            return \Illuminate\Mail\Mailer::plain($view, $data, $callback);
            }
        
            /**
         * Send a new message using a view.
         *
         * @param string|array $view
         * @param array $data
         * @param \Closure|string $callback
         * @return void 
         * @static 
         */
            public static function send($view, $data, $callback){
            \Illuminate\Mail\Mailer::send($view, $data, $callback);
            }
        
            /**
         * Queue a new e-mail message for sending.
         *
         * @param string|array $view
         * @param array $data
         * @param \Closure|string $callback
         * @param string $queue
         * @return mixed 
         * @static 
         */
            public static function queue($view, $data, $callback, $queue = null){
            return \Illuminate\Mail\Mailer::queue($view, $data, $callback, $queue);
            }
        
            /**
         * Queue a new e-mail message for sending on the given queue.
         *
         * @param string $queue
         * @param string|array $view
         * @param array $data
         * @param \Closure|string $callback
         * @return mixed 
         * @static 
         */
            public static function queueOn($queue, $view, $data, $callback){
            return \Illuminate\Mail\Mailer::queueOn($queue, $view, $data, $callback);
            }
        
            /**
         * Queue a new e-mail message for sending after (n) seconds.
         *
         * @param int $delay
         * @param string|array $view
         * @param array $data
         * @param \Closure|string $callback
         * @param string $queue
         * @return mixed 
         * @static 
         */
            public static function later($delay, $view, $data, $callback, $queue = null){
            return \Illuminate\Mail\Mailer::later($delay, $view, $data, $callback, $queue);
            }
        
            /**
         * Queue a new e-mail message for sending after (n) seconds on the given queue.
         *
         * @param string $queue
         * @param int $delay
         * @param string|array $view
         * @param array $data
         * @param \Closure|string $callback
         * @return mixed 
         * @static 
         */
            public static function laterOn($queue, $delay, $view, $data, $callback){
            return \Illuminate\Mail\Mailer::laterOn($queue, $delay, $view, $data, $callback);
            }
        
            /**
         * Handle a queued e-mail message job.
         *
         * @param \Illuminate\Queue\Jobs\Job $job
         * @param array $data
         * @return void 
         * @static 
         */
            public static function handleQueuedMessage($job, $data){
            \Illuminate\Mail\Mailer::handleQueuedMessage($job, $data);
            }
        
            /**
         * Tell the mailer to not really send messages.
         *
         * @param bool $value
         * @return void 
         * @static 
         */
            public static function pretend($value = true){
            \Illuminate\Mail\Mailer::pretend($value);
            }
        
            /**
         * Check if the mailer is pretending to send messages.
         *
         * @return bool 
         * @static 
         */
            public static function isPretending(){
            return \Illuminate\Mail\Mailer::isPretending();
            }
        
            /**
         * Get the view factory instance.
         *
         * @return \Illuminate\View\Factory 
         * @static 
         */
            public static function getViewFactory(){
            return \Illuminate\Mail\Mailer::getViewFactory();
            }
        
            /**
         * Get the Swift Mailer instance.
         *
         * @return \Swift_Mailer 
         * @static 
         */
            public static function getSwiftMailer(){
            return \Illuminate\Mail\Mailer::getSwiftMailer();
            }
        
            /**
         * Get the array of failed recipients.
         *
         * @return array 
         * @static 
         */
            public static function failures(){
            return \Illuminate\Mail\Mailer::failures();
            }
        
            /**
         * Set the Swift Mailer instance.
         *
         * @param \Swift_Mailer $swift
         * @return void 
         * @static 
         */
            public static function setSwiftMailer($swift){
            \Illuminate\Mail\Mailer::setSwiftMailer($swift);
            }
        
            /**
         * Set the log writer instance.
         *
         * @param \Illuminate\Log\Writer $logger
         * @return $this 
         * @static 
         */
            public static function setLogger($logger){
            return \Illuminate\Mail\Mailer::setLogger($logger);
            }
        
            /**
         * Set the queue manager instance.
         *
         * @param \Illuminate\Queue\QueueManager $queue
         * @return $this 
         * @static 
         */
            public static function setQueue($queue){
            return \Illuminate\Mail\Mailer::setQueue($queue);
            }
        
            /**
         * Set the IoC container instance.
         *
         * @param \Illuminate\Container\Container $container
         * @return void 
         * @static 
         */
            public static function setContainer($container){
            \Illuminate\Mail\Mailer::setContainer($container);
            }
        
        }

    
        class Paginator extends \Illuminate\Support\Facades\Paginator{
        
            /**
         * Get a new paginator instance.
         *
         * @param array $items
         * @param int $total
         * @param int|null $perPage
         * @return \Illuminate\Pagination\Paginator 
         * @static 
         */
            public static function make($items, $total, $perPage = null){
            return \Illuminate\Pagination\Factory::make($items, $total, $perPage);
            }
        
            /**
         * Get the pagination view.
         *
         * @param \Illuminate\Pagination\Paginator $paginator
         * @param string $view
         * @return \Illuminate\View\View 
         * @static 
         */
            public static function getPaginationView($paginator, $view = null){
            return \Illuminate\Pagination\Factory::getPaginationView($paginator, $view);
            }
        
            /**
         * Get the number of the current page.
         *
         * @return int 
         * @static 
         */
            public static function getCurrentPage(){
            return \Illuminate\Pagination\Factory::getCurrentPage();
            }
        
            /**
         * Set the number of the current page.
         *
         * @param int $number
         * @return void 
         * @static 
         */
            public static function setCurrentPage($number){
            \Illuminate\Pagination\Factory::setCurrentPage($number);
            }
        
            /**
         * Get the root URL for the request.
         *
         * @return string 
         * @static 
         */
            public static function getCurrentUrl(){
            return \Illuminate\Pagination\Factory::getCurrentUrl();
            }
        
            /**
         * Set the base URL in use by the paginator.
         *
         * @param string $baseUrl
         * @return void 
         * @static 
         */
            public static function setBaseUrl($baseUrl){
            \Illuminate\Pagination\Factory::setBaseUrl($baseUrl);
            }
        
            /**
         * Set the input page parameter name used by the paginator.
         *
         * @param string $pageName
         * @return void 
         * @static 
         */
            public static function setPageName($pageName){
            \Illuminate\Pagination\Factory::setPageName($pageName);
            }
        
            /**
         * Get the input page parameter name used by the paginator.
         *
         * @return string 
         * @static 
         */
            public static function getPageName(){
            return \Illuminate\Pagination\Factory::getPageName();
            }
        
            /**
         * Get the name of the pagination view.
         *
         * @param string $view
         * @return string 
         * @static 
         */
            public static function getViewName($view = null){
            return \Illuminate\Pagination\Factory::getViewName($view);
            }
        
            /**
         * Set the name of the pagination view.
         *
         * @param string $viewName
         * @return void 
         * @static 
         */
            public static function setViewName($viewName){
            \Illuminate\Pagination\Factory::setViewName($viewName);
            }
        
            /**
         * Get the locale of the paginator.
         *
         * @return string 
         * @static 
         */
            public static function getLocale(){
            return \Illuminate\Pagination\Factory::getLocale();
            }
        
            /**
         * Set the locale of the paginator.
         *
         * @param string $locale
         * @return void 
         * @static 
         */
            public static function setLocale($locale){
            \Illuminate\Pagination\Factory::setLocale($locale);
            }
        
            /**
         * Get the active request instance.
         *
         * @return \Symfony\Component\HttpFoundation\Request 
         * @static 
         */
            public static function getRequest(){
            return \Illuminate\Pagination\Factory::getRequest();
            }
        
            /**
         * Set the active request instance.
         *
         * @param \Symfony\Component\HttpFoundation\Request $request
         * @return void 
         * @static 
         */
            public static function setRequest($request){
            \Illuminate\Pagination\Factory::setRequest($request);
            }
        
            /**
         * Get the current view factory.
         *
         * @return \Illuminate\View\Factory 
         * @static 
         */
            public static function getViewFactory(){
            return \Illuminate\Pagination\Factory::getViewFactory();
            }
        
            /**
         * Set the current view factory.
         *
         * @param \Illuminate\View\Factory $view
         * @return void 
         * @static 
         */
            public static function setViewFactory($view){
            \Illuminate\Pagination\Factory::setViewFactory($view);
            }
        
            /**
         * Get the translator instance.
         *
         * @return \Symfony\Component\Translation\TranslatorInterface 
         * @static 
         */
            public static function getTranslator(){
            return \Illuminate\Pagination\Factory::getTranslator();
            }
        
        }

    
        class Password extends \Illuminate\Support\Facades\Password{
        
            /**
         * Send a password reminder to a user.
         *
         * @param array $credentials
         * @param \Closure $callback
         * @return string 
         * @static 
         */
            public static function remind($credentials, $callback = null){
            return \Illuminate\Auth\Reminders\PasswordBroker::remind($credentials, $callback);
            }
        
            /**
         * Send the password reminder e-mail.
         *
         * @param \Illuminate\Auth\Reminders\RemindableInterface $user
         * @param string $token
         * @param \Closure $callback
         * @return int 
         * @static 
         */
            public static function sendReminder($user, $token, $callback = null){
            return \Illuminate\Auth\Reminders\PasswordBroker::sendReminder($user, $token, $callback);
            }
        
            /**
         * Reset the password for the given token.
         *
         * @param array $credentials
         * @param \Closure $callback
         * @return mixed 
         * @static 
         */
            public static function reset($credentials, $callback){
            return \Illuminate\Auth\Reminders\PasswordBroker::reset($credentials, $callback);
            }
        
            /**
         * Set a custom password validator.
         *
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function validator($callback){
            \Illuminate\Auth\Reminders\PasswordBroker::validator($callback);
            }
        
            /**
         * Get the user for the given credentials.
         *
         * @param array $credentials
         * @return \Illuminate\Auth\Reminders\RemindableInterface 
         * @throws \UnexpectedValueException
         * @static 
         */
            public static function getUser($credentials){
            return \Illuminate\Auth\Reminders\PasswordBroker::getUser($credentials);
            }
        
        }

    
        class Queue extends \Illuminate\Support\Facades\Queue{
        
            /**
         * Register an event listener for the daemon queue loop.
         *
         * @param mixed $callback
         * @return void 
         * @static 
         */
            public static function looping($callback){
            \Illuminate\Queue\QueueManager::looping($callback);
            }
        
            /**
         * Register an event listener for the failed job event.
         *
         * @param mixed $callback
         * @return void 
         * @static 
         */
            public static function failing($callback){
            \Illuminate\Queue\QueueManager::failing($callback);
            }
        
            /**
         * Register an event listener for the daemon queue stopping.
         *
         * @param mixed $callback
         * @return void 
         * @static 
         */
            public static function stopping($callback){
            \Illuminate\Queue\QueueManager::stopping($callback);
            }
        
            /**
         * Determine if the driver is connected.
         *
         * @param string $name
         * @return bool 
         * @static 
         */
            public static function connected($name = null){
            return \Illuminate\Queue\QueueManager::connected($name);
            }
        
            /**
         * Resolve a queue connection instance.
         *
         * @param string $name
         * @return \Illuminate\Queue\SyncQueue 
         * @static 
         */
            public static function connection($name = null){
            return \Illuminate\Queue\QueueManager::connection($name);
            }
        
            /**
         * Add a queue connection resolver.
         *
         * @param string $driver
         * @param \Closure $resolver
         * @return void 
         * @static 
         */
            public static function extend($driver, $resolver){
            \Illuminate\Queue\QueueManager::extend($driver, $resolver);
            }
        
            /**
         * Add a queue connection resolver.
         *
         * @param string $driver
         * @param \Closure $resolver
         * @return void 
         * @static 
         */
            public static function addConnector($driver, $resolver){
            \Illuminate\Queue\QueueManager::addConnector($driver, $resolver);
            }
        
            /**
         * Get the name of the default queue connection.
         *
         * @return string 
         * @static 
         */
            public static function getDefaultDriver(){
            return \Illuminate\Queue\QueueManager::getDefaultDriver();
            }
        
            /**
         * Set the name of the default queue connection.
         *
         * @param string $name
         * @return void 
         * @static 
         */
            public static function setDefaultDriver($name){
            \Illuminate\Queue\QueueManager::setDefaultDriver($name);
            }
        
            /**
         * Get the full name for the given connection.
         *
         * @param string $connection
         * @return string 
         * @static 
         */
            public static function getName($connection = null){
            return \Illuminate\Queue\QueueManager::getName($connection);
            }
        
            /**
         * Determine if the application is in maintenance mode.
         *
         * @return bool 
         * @static 
         */
            public static function isDownForMaintenance(){
            return \Illuminate\Queue\QueueManager::isDownForMaintenance();
            }
        
            /**
         * Push a new job onto the queue.
         *
         * @param string $job
         * @param mixed $data
         * @param string $queue
         * @return mixed 
         * @static 
         */
            public static function push($job, $data = '', $queue = null){
            return \Illuminate\Queue\SyncQueue::push($job, $data, $queue);
            }
        
            /**
         * Push a raw payload onto the queue.
         *
         * @param string $payload
         * @param string $queue
         * @param array $options
         * @return mixed 
         * @static 
         */
            public static function pushRaw($payload, $queue = null, $options = array()){
            return \Illuminate\Queue\SyncQueue::pushRaw($payload, $queue, $options);
            }
        
            /**
         * Push a new job onto the queue after a delay.
         *
         * @param \DateTime|int $delay
         * @param string $job
         * @param mixed $data
         * @param string $queue
         * @return mixed 
         * @static 
         */
            public static function later($delay, $job, $data = '', $queue = null){
            return \Illuminate\Queue\SyncQueue::later($delay, $job, $data, $queue);
            }
        
            /**
         * Pop the next job off of the queue.
         *
         * @param string $queue
         * @return \Illuminate\Queue\Jobs\Job|null 
         * @static 
         */
            public static function pop($queue = null){
            return \Illuminate\Queue\SyncQueue::pop($queue);
            }
        
            /**
         * Marshal a push queue request and fire the job.
         *
         * @throws \RuntimeException
         * @static 
         */
            public static function marshal(){
                //Method inherited from \Illuminate\Queue\Queue            
            return \Illuminate\Queue\SyncQueue::marshal();
            }
        
            /**
         * Push a new an array of jobs onto the queue.
         *
         * @param array $jobs
         * @param mixed $data
         * @param string $queue
         * @return mixed 
         * @static 
         */
            public static function bulk($jobs, $data = '', $queue = null){
                //Method inherited from \Illuminate\Queue\Queue            
            return \Illuminate\Queue\SyncQueue::bulk($jobs, $data, $queue);
            }
        
            /**
         * Get the current UNIX timestamp.
         *
         * @return int 
         * @static 
         */
            public static function getTime(){
                //Method inherited from \Illuminate\Queue\Queue            
            return \Illuminate\Queue\SyncQueue::getTime();
            }
        
            /**
         * Set the IoC container instance.
         *
         * @param \Illuminate\Container\Container $container
         * @return void 
         * @static 
         */
            public static function setContainer($container){
                //Method inherited from \Illuminate\Queue\Queue            
            \Illuminate\Queue\SyncQueue::setContainer($container);
            }
        
            /**
         * Set the encrypter instance.
         *
         * @param \Illuminate\Encryption\Encrypter $crypt
         * @return void 
         * @static 
         */
            public static function setEncrypter($crypt){
                //Method inherited from \Illuminate\Queue\Queue            
            \Illuminate\Queue\SyncQueue::setEncrypter($crypt);
            }
        
        }

    
        class Redirect extends \Illuminate\Support\Facades\Redirect{
        
            /**
         * Create a new redirect response to the "home" route.
         *
         * @param int $status
         * @return \Illuminate\Http\RedirectResponse 
         * @static 
         */
            public static function home($status = 302){
            return \Illuminate\Routing\Redirector::home($status);
            }
        
            /**
         * Create a new redirect response to the previous location.
         *
         * @param int $status
         * @param array $headers
         * @return \Illuminate\Http\RedirectResponse 
         * @static 
         */
            public static function back($status = 302, $headers = array()){
            return \Illuminate\Routing\Redirector::back($status, $headers);
            }
        
            /**
         * Create a new redirect response to the current URI.
         *
         * @param int $status
         * @param array $headers
         * @return \Illuminate\Http\RedirectResponse 
         * @static 
         */
            public static function refresh($status = 302, $headers = array()){
            return \Illuminate\Routing\Redirector::refresh($status, $headers);
            }
        
            /**
         * Create a new redirect response, while putting the current URL in the session.
         *
         * @param string $path
         * @param int $status
         * @param array $headers
         * @param bool $secure
         * @return \Illuminate\Http\RedirectResponse 
         * @static 
         */
            public static function guest($path, $status = 302, $headers = array(), $secure = null){
            return \Illuminate\Routing\Redirector::guest($path, $status, $headers, $secure);
            }
        
            /**
         * Create a new redirect response to the previously intended location.
         *
         * @param string $default
         * @param int $status
         * @param array $headers
         * @param bool $secure
         * @return \Illuminate\Http\RedirectResponse 
         * @static 
         */
            public static function intended($default = '/', $status = 302, $headers = array(), $secure = null){
            return \Illuminate\Routing\Redirector::intended($default, $status, $headers, $secure);
            }
        
            /**
         * Create a new redirect response to the given path.
         *
         * @param string $path
         * @param int $status
         * @param array $headers
         * @param bool $secure
         * @return \Illuminate\Http\RedirectResponse 
         * @static 
         */
            public static function to($path, $status = 302, $headers = array(), $secure = null){
            return \Illuminate\Routing\Redirector::to($path, $status, $headers, $secure);
            }
        
            /**
         * Create a new redirect response to an external URL (no validation).
         *
         * @param string $path
         * @param int $status
         * @param array $headers
         * @return \Illuminate\Http\RedirectResponse 
         * @static 
         */
            public static function away($path, $status = 302, $headers = array()){
            return \Illuminate\Routing\Redirector::away($path, $status, $headers);
            }
        
            /**
         * Create a new redirect response to the given HTTPS path.
         *
         * @param string $path
         * @param int $status
         * @param array $headers
         * @return \Illuminate\Http\RedirectResponse 
         * @static 
         */
            public static function secure($path, $status = 302, $headers = array()){
            return \Illuminate\Routing\Redirector::secure($path, $status, $headers);
            }
        
            /**
         * Create a new redirect response to a named route.
         *
         * @param string $route
         * @param array $parameters
         * @param int $status
         * @param array $headers
         * @return \Illuminate\Http\RedirectResponse 
         * @static 
         */
            public static function route($route, $parameters = array(), $status = 302, $headers = array()){
            return \Illuminate\Routing\Redirector::route($route, $parameters, $status, $headers);
            }
        
            /**
         * Create a new redirect response to a controller action.
         *
         * @param string $action
         * @param array $parameters
         * @param int $status
         * @param array $headers
         * @return \Illuminate\Http\RedirectResponse 
         * @static 
         */
            public static function action($action, $parameters = array(), $status = 302, $headers = array()){
            return \Illuminate\Routing\Redirector::action($action, $parameters, $status, $headers);
            }
        
            /**
         * Get the URL generator instance.
         *
         * @return \Illuminate\Routing\UrlGenerator 
         * @static 
         */
            public static function getUrlGenerator(){
            return \Illuminate\Routing\Redirector::getUrlGenerator();
            }
        
            /**
         * Set the active session store.
         *
         * @param \Illuminate\Session\Store $session
         * @return void 
         * @static 
         */
            public static function setSession($session){
            \Illuminate\Routing\Redirector::setSession($session);
            }
        
        }

    
        class Redis extends \Illuminate\Support\Facades\Redis{
        
            /**
         * Get a specific Redis connection instance.
         *
         * @param string $name
         * @return \Predis\ClientInterface 
         * @static 
         */
            public static function connection($name = 'default'){
            return \Illuminate\Redis\Database::connection($name);
            }
        
            /**
         * Run a command against the Redis database.
         *
         * @param string $method
         * @param array $parameters
         * @return mixed 
         * @static 
         */
            public static function command($method, $parameters = array()){
            return \Illuminate\Redis\Database::command($method, $parameters);
            }
        
        }

    
        class Request extends \Illuminate\Support\Facades\Request{
        
            /**
         * Return the Request instance.
         *
         * @return $this 
         * @static 
         */
            public static function instance(){
            return \Illuminate\Http\Request::instance();
            }
        
            /**
         * Get the request method.
         *
         * @return string 
         * @static 
         */
            public static function method(){
            return \Illuminate\Http\Request::method();
            }
        
            /**
         * Get the root URL for the application.
         *
         * @return string 
         * @static 
         */
            public static function root(){
            return \Illuminate\Http\Request::root();
            }
        
            /**
         * Get the URL (no query string) for the request.
         *
         * @return string 
         * @static 
         */
            public static function url(){
            return \Illuminate\Http\Request::url();
            }
        
            /**
         * Get the full URL for the request.
         *
         * @return string 
         * @static 
         */
            public static function fullUrl(){
            return \Illuminate\Http\Request::fullUrl();
            }
        
            /**
         * Get the current path info for the request.
         *
         * @return string 
         * @static 
         */
            public static function path(){
            return \Illuminate\Http\Request::path();
            }
        
            /**
         * Get the current encoded path info for the request.
         *
         * @return string 
         * @static 
         */
            public static function decodedPath(){
            return \Illuminate\Http\Request::decodedPath();
            }
        
            /**
         * Get a segment from the URI (1 based index).
         *
         * @param string $index
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function segment($index, $default = null){
            return \Illuminate\Http\Request::segment($index, $default);
            }
        
            /**
         * Get all of the segments for the request path.
         *
         * @return array 
         * @static 
         */
            public static function segments(){
            return \Illuminate\Http\Request::segments();
            }
        
            /**
         * Determine if the current request URI matches a pattern.
         *
         * @param mixed  string
         * @return bool 
         * @static 
         */
            public static function is(){
            return \Illuminate\Http\Request::is();
            }
        
            /**
         * Determine if the request is the result of an AJAX call.
         *
         * @return bool 
         * @static 
         */
            public static function ajax(){
            return \Illuminate\Http\Request::ajax();
            }
        
            /**
         * Determine if the request is over HTTPS.
         *
         * @return bool 
         * @static 
         */
            public static function secure(){
            return \Illuminate\Http\Request::secure();
            }
        
            /**
         * Returns the client IP address.
         *
         * @return string 
         * @static 
         */
            public static function ip(){
            return \Illuminate\Http\Request::ip();
            }
        
            /**
         * Returns the client IP addresses.
         *
         * @return array 
         * @static 
         */
            public static function ips(){
            return \Illuminate\Http\Request::ips();
            }
        
            /**
         * Determine if the request contains a given input item key.
         *
         * @param string|array $key
         * @return bool 
         * @static 
         */
            public static function exists($key){
            return \Illuminate\Http\Request::exists($key);
            }
        
            /**
         * Determine if the request contains a non-empty value for an input item.
         *
         * @param string|array $key
         * @return bool 
         * @static 
         */
            public static function has($key){
            return \Illuminate\Http\Request::has($key);
            }
        
            /**
         * Get all of the input and files for the request.
         *
         * @return array 
         * @static 
         */
            public static function all(){
            return \Illuminate\Http\Request::all();
            }
        
            /**
         * Retrieve an input item from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function input($key = null, $default = null){
            return \Illuminate\Http\Request::input($key, $default);
            }
        
            /**
         * Get a subset of the items from the input data.
         *
         * @param array $keys
         * @return array 
         * @static 
         */
            public static function only($keys){
            return \Illuminate\Http\Request::only($keys);
            }
        
            /**
         * Get all of the input except for a specified array of items.
         *
         * @param array $keys
         * @return array 
         * @static 
         */
            public static function except($keys){
            return \Illuminate\Http\Request::except($keys);
            }
        
            /**
         * Retrieve a query string item from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function query($key = null, $default = null){
            return \Illuminate\Http\Request::query($key, $default);
            }
        
            /**
         * Determine if a cookie is set on the request.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function hasCookie($key){
            return \Illuminate\Http\Request::hasCookie($key);
            }
        
            /**
         * Retrieve a cookie from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function cookie($key = null, $default = null){
            return \Illuminate\Http\Request::cookie($key, $default);
            }
        
            /**
         * Retrieve a file from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return \Symfony\Component\HttpFoundation\File\UploadedFile|array 
         * @static 
         */
            public static function file($key = null, $default = null){
            return \Illuminate\Http\Request::file($key, $default);
            }
        
            /**
         * Determine if the uploaded data contains a file.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function hasFile($key){
            return \Illuminate\Http\Request::hasFile($key);
            }
        
            /**
         * Retrieve a header from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function header($key = null, $default = null){
            return \Illuminate\Http\Request::header($key, $default);
            }
        
            /**
         * Retrieve a server variable from the request.
         *
         * @param string $key
         * @param mixed $default
         * @return string 
         * @static 
         */
            public static function server($key = null, $default = null){
            return \Illuminate\Http\Request::server($key, $default);
            }
        
            /**
         * Retrieve an old input item.
         *
         * @param string $key
         * @param mixed $default
         * @return mixed 
         * @static 
         */
            public static function old($key = null, $default = null){
            return \Illuminate\Http\Request::old($key, $default);
            }
        
            /**
         * Flash the input for the current request to the session.
         *
         * @param string $filter
         * @param array $keys
         * @return void 
         * @static 
         */
            public static function flash($filter = null, $keys = array()){
            \Illuminate\Http\Request::flash($filter, $keys);
            }
        
            /**
         * Flash only some of the input to the session.
         *
         * @param mixed  string
         * @return void 
         * @static 
         */
            public static function flashOnly($keys){
            \Illuminate\Http\Request::flashOnly($keys);
            }
        
            /**
         * Flash only some of the input to the session.
         *
         * @param mixed  string
         * @return void 
         * @static 
         */
            public static function flashExcept($keys){
            \Illuminate\Http\Request::flashExcept($keys);
            }
        
            /**
         * Flush all of the old input from the session.
         *
         * @return void 
         * @static 
         */
            public static function flush(){
            \Illuminate\Http\Request::flush();
            }
        
            /**
         * Merge new input into the current request's input array.
         *
         * @param array $input
         * @return void 
         * @static 
         */
            public static function merge($input){
            \Illuminate\Http\Request::merge($input);
            }
        
            /**
         * Replace the input for the current request.
         *
         * @param array $input
         * @return void 
         * @static 
         */
            public static function replace($input){
            \Illuminate\Http\Request::replace($input);
            }
        
            /**
         * Get the JSON payload for the request.
         *
         * @param string $key
         * @param mixed $default
         * @return mixed 
         * @static 
         */
            public static function json($key = null, $default = null){
            return \Illuminate\Http\Request::json($key, $default);
            }
        
            /**
         * Determine if the request is sending JSON.
         *
         * @return bool 
         * @static 
         */
            public static function isJson(){
            return \Illuminate\Http\Request::isJson();
            }
        
            /**
         * Determine if the current request is asking for JSON in return.
         *
         * @return bool 
         * @static 
         */
            public static function wantsJson(){
            return \Illuminate\Http\Request::wantsJson();
            }
        
            /**
         * Get the data format expected in the response.
         *
         * @param string $default
         * @return string 
         * @static 
         */
            public static function format($default = 'html'){
            return \Illuminate\Http\Request::format($default);
            }
        
            /**
         * Create an Illuminate request from a Symfony instance.
         *
         * @param \Symfony\Component\HttpFoundation\Request $request
         * @return \Illuminate\Http\Request 
         * @static 
         */
            public static function createFromBase($request){
            return \Illuminate\Http\Request::createFromBase($request);
            }
        
            /**
         * Get the session associated with the request.
         *
         * @return \Illuminate\Session\Store 
         * @throws \RuntimeException
         * @static 
         */
            public static function session(){
            return \Illuminate\Http\Request::session();
            }
        
            /**
         * Sets the parameters for this request.
         * 
         * This method also re-initializes all properties.
         *
         * @param array $query The GET parameters
         * @param array $request The POST parameters
         * @param array $attributes The request attributes (parameters parsed from the PATH_INFO, ...)
         * @param array $cookies The COOKIE parameters
         * @param array $files The FILES parameters
         * @param array $server The SERVER parameters
         * @param string $content The raw body data
         * @api 
         * @static 
         */
            public static function initialize($query = array(), $request = array(), $attributes = array(), $cookies = array(), $files = array(), $server = array(), $content = null){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::initialize($query, $request, $attributes, $cookies, $files, $server, $content);
            }
        
            /**
         * Creates a new request with values from PHP's super globals.
         *
         * @return \Symfony\Component\HttpFoundation\Request A new request
         * @api 
         * @static 
         */
            public static function createFromGlobals(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::createFromGlobals();
            }
        
            /**
         * Creates a Request based on a given URI and configuration.
         * 
         * The information contained in the URI always take precedence
         * over the other information (server and parameters).
         *
         * @param string $uri The URI
         * @param string $method The HTTP method
         * @param array $parameters The query (GET) or request (POST) parameters
         * @param array $cookies The request cookies ($_COOKIE)
         * @param array $files The request files ($_FILES)
         * @param array $server The server parameters ($_SERVER)
         * @param string $content The raw body data
         * @return \Symfony\Component\HttpFoundation\Request A Request instance
         * @api 
         * @static 
         */
            public static function create($uri, $method = 'GET', $parameters = array(), $cookies = array(), $files = array(), $server = array(), $content = null){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::create($uri, $method, $parameters, $cookies, $files, $server, $content);
            }
        
            /**
         * Sets a callable able to create a Request instance.
         * 
         * This is mainly useful when you need to override the Request class
         * to keep BC with an existing system. It should not be used for any
         * other purpose.
         *
         * @param callable|null $callable A PHP callable
         * @static 
         */
            public static function setFactory($callable){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setFactory($callable);
            }
        
            /**
         * Clones a request and overrides some of its parameters.
         *
         * @param array $query The GET parameters
         * @param array $request The POST parameters
         * @param array $attributes The request attributes (parameters parsed from the PATH_INFO, ...)
         * @param array $cookies The COOKIE parameters
         * @param array $files The FILES parameters
         * @param array $server The SERVER parameters
         * @return \Symfony\Component\HttpFoundation\Request The duplicated request
         * @api 
         * @static 
         */
            public static function duplicate($query = null, $request = null, $attributes = null, $cookies = null, $files = null, $server = null){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::duplicate($query, $request, $attributes, $cookies, $files, $server);
            }
        
            /**
         * Overrides the PHP global variables according to this request instance.
         * 
         * It overrides $_GET, $_POST, $_REQUEST, $_SERVER, $_COOKIE.
         * $_FILES is never override, see rfc1867
         *
         * @api 
         * @static 
         */
            public static function overrideGlobals(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::overrideGlobals();
            }
        
            /**
         * Sets a list of trusted proxies.
         * 
         * You should only list the reverse proxies that you manage directly.
         *
         * @param array $proxies A list of trusted proxies
         * @api 
         * @static 
         */
            public static function setTrustedProxies($proxies){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setTrustedProxies($proxies);
            }
        
            /**
         * Gets the list of trusted proxies.
         *
         * @return array An array of trusted proxies.
         * @static 
         */
            public static function getTrustedProxies(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getTrustedProxies();
            }
        
            /**
         * Sets a list of trusted host patterns.
         * 
         * You should only list the hosts you manage using regexs.
         *
         * @param array $hostPatterns A list of trusted host patterns
         * @static 
         */
            public static function setTrustedHosts($hostPatterns){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setTrustedHosts($hostPatterns);
            }
        
            /**
         * Gets the list of trusted host patterns.
         *
         * @return array An array of trusted host patterns.
         * @static 
         */
            public static function getTrustedHosts(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getTrustedHosts();
            }
        
            /**
         * Sets the name for trusted headers.
         * 
         * The following header keys are supported:
         * 
         *  * Request::HEADER_CLIENT_IP:    defaults to X-Forwarded-For   (see getClientIp())
         *  * Request::HEADER_CLIENT_HOST:  defaults to X-Forwarded-Host  (see getClientHost())
         *  * Request::HEADER_CLIENT_PORT:  defaults to X-Forwarded-Port  (see getClientPort())
         *  * Request::HEADER_CLIENT_PROTO: defaults to X-Forwarded-Proto (see getScheme() and isSecure())
         * 
         * Setting an empty value allows to disable the trusted header for the given key.
         *
         * @param string $key The header key
         * @param string $value The header name
         * @throws \InvalidArgumentException
         * @static 
         */
            public static function setTrustedHeaderName($key, $value){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setTrustedHeaderName($key, $value);
            }
        
            /**
         * Gets the trusted proxy header name.
         *
         * @param string $key The header key
         * @return string The header name
         * @throws \InvalidArgumentException
         * @static 
         */
            public static function getTrustedHeaderName($key){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getTrustedHeaderName($key);
            }
        
            /**
         * Normalizes a query string.
         * 
         * It builds a normalized query string, where keys/value pairs are alphabetized,
         * have consistent escaping and unneeded delimiters are removed.
         *
         * @param string $qs Query string
         * @return string A normalized query string for the Request
         * @static 
         */
            public static function normalizeQueryString($qs){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::normalizeQueryString($qs);
            }
        
            /**
         * Enables support for the _method request parameter to determine the intended HTTP method.
         * 
         * Be warned that enabling this feature might lead to CSRF issues in your code.
         * Check that you are using CSRF tokens when required.
         * 
         * The HTTP method can only be overridden when the real HTTP method is POST.
         *
         * @static 
         */
            public static function enableHttpMethodParameterOverride(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::enableHttpMethodParameterOverride();
            }
        
            /**
         * Checks whether support for the _method request parameter is enabled.
         *
         * @return bool True when the _method request parameter is enabled, false otherwise
         * @static 
         */
            public static function getHttpMethodParameterOverride(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getHttpMethodParameterOverride();
            }
        
            /**
         * Gets a "parameter" value.
         * 
         * This method is mainly useful for libraries that want to provide some flexibility.
         * 
         * Order of precedence: GET, PATH, POST
         * 
         * Avoid using this method in controllers:
         * 
         *  * slow
         *  * prefer to get from a "named" source
         * 
         * It is better to explicitly get request parameters from the appropriate
         * public property instead (query, attributes, request).
         *
         * @param string $key the key
         * @param mixed $default the default value
         * @param bool $deep is parameter deep in multidimensional array
         * @return mixed 
         * @static 
         */
            public static function get($key, $default = null, $deep = false){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::get($key, $default, $deep);
            }
        
            /**
         * Gets the Session.
         *
         * @return \Symfony\Component\HttpFoundation\SessionInterface|null The session
         * @api 
         * @static 
         */
            public static function getSession(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getSession();
            }
        
            /**
         * Whether the request contains a Session which was started in one of the
         * previous requests.
         *
         * @return bool 
         * @api 
         * @static 
         */
            public static function hasPreviousSession(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::hasPreviousSession();
            }
        
            /**
         * Whether the request contains a Session object.
         * 
         * This method does not give any information about the state of the session object,
         * like whether the session is started or not. It is just a way to check if this Request
         * is associated with a Session instance.
         *
         * @return bool true when the Request contains a Session object, false otherwise
         * @api 
         * @static 
         */
            public static function hasSession(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::hasSession();
            }
        
            /**
         * Sets the Session.
         *
         * @param \Symfony\Component\HttpFoundation\SessionInterface $session The Session
         * @api 
         * @static 
         */
            public static function setSession($session){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setSession($session);
            }
        
            /**
         * Returns the client IP addresses.
         * 
         * In the returned array the most trusted IP address is first, and the
         * least trusted one last. The "real" client IP address is the last one,
         * but this is also the least trusted one. Trusted proxies are stripped.
         * 
         * Use this method carefully; you should use getClientIp() instead.
         *
         * @return array The client IP addresses
         * @see getClientIp()
         * @static 
         */
            public static function getClientIps(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getClientIps();
            }
        
            /**
         * Returns the client IP address.
         * 
         * This method can read the client IP address from the "X-Forwarded-For" header
         * when trusted proxies were set via "setTrustedProxies()". The "X-Forwarded-For"
         * header value is a comma+space separated list of IP addresses, the left-most
         * being the original client, and each successive proxy that passed the request
         * adding the IP address where it received the request from.
         * 
         * If your reverse proxy uses a different header name than "X-Forwarded-For",
         * ("Client-Ip" for instance), configure it via "setTrustedHeaderName()" with
         * the "client-ip" key.
         *
         * @return string The client IP address
         * @see getClientIps()
         * @see http://en.wikipedia.org/wiki/X-Forwarded-For
         * @api 
         * @static 
         */
            public static function getClientIp(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getClientIp();
            }
        
            /**
         * Returns current script name.
         *
         * @return string 
         * @api 
         * @static 
         */
            public static function getScriptName(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getScriptName();
            }
        
            /**
         * Returns the path being requested relative to the executed script.
         * 
         * The path info always starts with a /.
         * 
         * Suppose this request is instantiated from /mysite on localhost:
         * 
         *  * http://localhost/mysite              returns an empty string
         *  * http://localhost/mysite/about        returns '/about'
         *  * http://localhost/mysite/enco%20ded   returns '/enco%20ded'
         *  * http://localhost/mysite/about?var=1  returns '/about'
         *
         * @return string The raw path (i.e. not urldecoded)
         * @api 
         * @static 
         */
            public static function getPathInfo(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getPathInfo();
            }
        
            /**
         * Returns the root path from which this request is executed.
         * 
         * Suppose that an index.php file instantiates this request object:
         * 
         *  * http://localhost/index.php         returns an empty string
         *  * http://localhost/index.php/page    returns an empty string
         *  * http://localhost/web/index.php     returns '/web'
         *  * http://localhost/we%20b/index.php  returns '/we%20b'
         *
         * @return string The raw path (i.e. not urldecoded)
         * @api 
         * @static 
         */
            public static function getBasePath(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getBasePath();
            }
        
            /**
         * Returns the root URL from which this request is executed.
         * 
         * The base URL never ends with a /.
         * 
         * This is similar to getBasePath(), except that it also includes the
         * script filename (e.g. index.php) if one exists.
         *
         * @return string The raw URL (i.e. not urldecoded)
         * @api 
         * @static 
         */
            public static function getBaseUrl(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getBaseUrl();
            }
        
            /**
         * Gets the request's scheme.
         *
         * @return string 
         * @api 
         * @static 
         */
            public static function getScheme(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getScheme();
            }
        
            /**
         * Returns the port on which the request is made.
         * 
         * This method can read the client port from the "X-Forwarded-Port" header
         * when trusted proxies were set via "setTrustedProxies()".
         * 
         * The "X-Forwarded-Port" header must contain the client port.
         * 
         * If your reverse proxy uses a different header name than "X-Forwarded-Port",
         * configure it via "setTrustedHeaderName()" with the "client-port" key.
         *
         * @return string 
         * @api 
         * @static 
         */
            public static function getPort(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getPort();
            }
        
            /**
         * Returns the user.
         *
         * @return string|null 
         * @static 
         */
            public static function getUser(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getUser();
            }
        
            /**
         * Returns the password.
         *
         * @return string|null 
         * @static 
         */
            public static function getPassword(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getPassword();
            }
        
            /**
         * Gets the user info.
         *
         * @return string A user name and, optionally, scheme-specific information about how to gain authorization to
         *                access the server
         * @static 
         */
            public static function getUserInfo(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getUserInfo();
            }
        
            /**
         * Returns the HTTP host being requested.
         * 
         * The port name will be appended to the host if it's non-standard.
         *
         * @return string 
         * @api 
         * @static 
         */
            public static function getHttpHost(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getHttpHost();
            }
        
            /**
         * Returns the requested URI (path and query string).
         *
         * @return string The raw URI (i.e. not URI decoded)
         * @api 
         * @static 
         */
            public static function getRequestUri(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getRequestUri();
            }
        
            /**
         * Gets the scheme and HTTP host.
         * 
         * If the URL was called with basic authentication, the user
         * and the password are not added to the generated string.
         *
         * @return string The scheme and HTTP host
         * @static 
         */
            public static function getSchemeAndHttpHost(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getSchemeAndHttpHost();
            }
        
            /**
         * Generates a normalized URI (URL) for the Request.
         *
         * @return string A normalized URI (URL) for the Request
         * @see getQueryString()
         * @api 
         * @static 
         */
            public static function getUri(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getUri();
            }
        
            /**
         * Generates a normalized URI for the given path.
         *
         * @param string $path A path to use instead of the current one
         * @return string The normalized URI for the path
         * @api 
         * @static 
         */
            public static function getUriForPath($path){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getUriForPath($path);
            }
        
            /**
         * Generates the normalized query string for the Request.
         * 
         * It builds a normalized query string, where keys/value pairs are alphabetized
         * and have consistent escaping.
         *
         * @return string|null A normalized query string for the Request
         * @api 
         * @static 
         */
            public static function getQueryString(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getQueryString();
            }
        
            /**
         * Checks whether the request is secure or not.
         * 
         * This method can read the client port from the "X-Forwarded-Proto" header
         * when trusted proxies were set via "setTrustedProxies()".
         * 
         * The "X-Forwarded-Proto" header must contain the protocol: "https" or "http".
         * 
         * If your reverse proxy uses a different header name than "X-Forwarded-Proto"
         * ("SSL_HTTPS" for instance), configure it via "setTrustedHeaderName()" with
         * the "client-proto" key.
         *
         * @return bool 
         * @api 
         * @static 
         */
            public static function isSecure(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::isSecure();
            }
        
            /**
         * Returns the host name.
         * 
         * This method can read the client port from the "X-Forwarded-Host" header
         * when trusted proxies were set via "setTrustedProxies()".
         * 
         * The "X-Forwarded-Host" header must contain the client host name.
         * 
         * If your reverse proxy uses a different header name than "X-Forwarded-Host",
         * configure it via "setTrustedHeaderName()" with the "client-host" key.
         *
         * @return string 
         * @throws \UnexpectedValueException when the host name is invalid
         * @api 
         * @static 
         */
            public static function getHost(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getHost();
            }
        
            /**
         * Sets the request method.
         *
         * @param string $method
         * @api 
         * @static 
         */
            public static function setMethod($method){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setMethod($method);
            }
        
            /**
         * Gets the request "intended" method.
         * 
         * If the X-HTTP-Method-Override header is set, and if the method is a POST,
         * then it is used to determine the "real" intended HTTP method.
         * 
         * The _method request parameter can also be used to determine the HTTP method,
         * but only if enableHttpMethodParameterOverride() has been called.
         * 
         * The method is always an uppercased string.
         *
         * @return string The request method
         * @api 
         * @see getRealMethod
         * @static 
         */
            public static function getMethod(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getMethod();
            }
        
            /**
         * Gets the "real" request method.
         *
         * @return string The request method
         * @see getMethod
         * @static 
         */
            public static function getRealMethod(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getRealMethod();
            }
        
            /**
         * Gets the mime type associated with the format.
         *
         * @param string $format The format
         * @return string The associated mime type (null if not found)
         * @api 
         * @static 
         */
            public static function getMimeType($format){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getMimeType($format);
            }
        
            /**
         * Gets the format associated with the mime type.
         *
         * @param string $mimeType The associated mime type
         * @return string|null The format (null if not found)
         * @api 
         * @static 
         */
            public static function getFormat($mimeType){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getFormat($mimeType);
            }
        
            /**
         * Associates a format with mime types.
         *
         * @param string $format The format
         * @param string|array $mimeTypes The associated mime types (the preferred one must be the first as it will be
         *                                used as the content type)
         * @api 
         * @static 
         */
            public static function setFormat($format, $mimeTypes){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setFormat($format, $mimeTypes);
            }
        
            /**
         * Gets the request format.
         * 
         * Here is the process to determine the format:
         * 
         *  * format defined by the user (with setRequestFormat())
         *  * _format request parameter
         *  * $default
         *
         * @param string $default The default format
         * @return string The request format
         * @api 
         * @static 
         */
            public static function getRequestFormat($default = 'html'){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getRequestFormat($default);
            }
        
            /**
         * Sets the request format.
         *
         * @param string $format The request format.
         * @api 
         * @static 
         */
            public static function setRequestFormat($format){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setRequestFormat($format);
            }
        
            /**
         * Gets the format associated with the request.
         *
         * @return string|null The format (null if no content type is present)
         * @api 
         * @static 
         */
            public static function getContentType(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getContentType();
            }
        
            /**
         * Sets the default locale.
         *
         * @param string $locale
         * @api 
         * @static 
         */
            public static function setDefaultLocale($locale){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setDefaultLocale($locale);
            }
        
            /**
         * Get the default locale.
         *
         * @return string 
         * @static 
         */
            public static function getDefaultLocale(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getDefaultLocale();
            }
        
            /**
         * Sets the locale.
         *
         * @param string $locale
         * @api 
         * @static 
         */
            public static function setLocale($locale){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::setLocale($locale);
            }
        
            /**
         * Get the locale.
         *
         * @return string 
         * @static 
         */
            public static function getLocale(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getLocale();
            }
        
            /**
         * Checks if the request method is of specified type.
         *
         * @param string $method Uppercase request method (GET, POST etc).
         * @return bool 
         * @static 
         */
            public static function isMethod($method){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::isMethod($method);
            }
        
            /**
         * Checks whether the method is safe or not.
         *
         * @return bool 
         * @api 
         * @static 
         */
            public static function isMethodSafe(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::isMethodSafe();
            }
        
            /**
         * Returns the request body content.
         *
         * @param bool $asResource If true, a resource will be returned
         * @return string|resource The request body content or a resource to read the body stream.
         * @throws \LogicException
         * @static 
         */
            public static function getContent($asResource = false){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getContent($asResource);
            }
        
            /**
         * Gets the Etags.
         *
         * @return array The entity tags
         * @static 
         */
            public static function getETags(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getETags();
            }
        
            /**
         * 
         *
         * @return bool 
         * @static 
         */
            public static function isNoCache(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::isNoCache();
            }
        
            /**
         * Returns the preferred language.
         *
         * @param array $locales An array of ordered available locales
         * @return string|null The preferred locale
         * @api 
         * @static 
         */
            public static function getPreferredLanguage($locales = null){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getPreferredLanguage($locales);
            }
        
            /**
         * Gets a list of languages acceptable by the client browser.
         *
         * @return array Languages ordered in the user browser preferences
         * @api 
         * @static 
         */
            public static function getLanguages(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getLanguages();
            }
        
            /**
         * Gets a list of charsets acceptable by the client browser.
         *
         * @return array List of charsets in preferable order
         * @api 
         * @static 
         */
            public static function getCharsets(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getCharsets();
            }
        
            /**
         * Gets a list of encodings acceptable by the client browser.
         *
         * @return array List of encodings in preferable order
         * @static 
         */
            public static function getEncodings(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getEncodings();
            }
        
            /**
         * Gets a list of content types acceptable by the client browser
         *
         * @return array List of content types in preferable order
         * @api 
         * @static 
         */
            public static function getAcceptableContentTypes(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::getAcceptableContentTypes();
            }
        
            /**
         * Returns true if the request is a XMLHttpRequest.
         * 
         * It works if your JavaScript library set an X-Requested-With HTTP header.
         * It is known to work with common JavaScript frameworks:
         *
         * @link http://en.wikipedia.org/wiki/List_of_Ajax_frameworks#JavaScript
         * @return bool true if the request is an XMLHttpRequest, false otherwise
         * @api 
         * @static 
         */
            public static function isXmlHttpRequest(){
                //Method inherited from \Symfony\Component\HttpFoundation\Request            
            return \Illuminate\Http\Request::isXmlHttpRequest();
            }
        
        }

    
        class Response extends \Illuminate\Support\Facades\Response{
        
        }

    
        class Route extends \Illuminate\Support\Facades\Route{
        
            /**
         * Register a new GET route with the router.
         *
         * @param string $uri
         * @param \Closure|array|string $action
         * @return \Illuminate\Routing\Route 
         * @static 
         */
            public static function get($uri, $action){
            return \Illuminate\Routing\Router::get($uri, $action);
            }
        
            /**
         * Register a new POST route with the router.
         *
         * @param string $uri
         * @param \Closure|array|string $action
         * @return \Illuminate\Routing\Route 
         * @static 
         */
            public static function post($uri, $action){
            return \Illuminate\Routing\Router::post($uri, $action);
            }
        
            /**
         * Register a new PUT route with the router.
         *
         * @param string $uri
         * @param \Closure|array|string $action
         * @return \Illuminate\Routing\Route 
         * @static 
         */
            public static function put($uri, $action){
            return \Illuminate\Routing\Router::put($uri, $action);
            }
        
            /**
         * Register a new PATCH route with the router.
         *
         * @param string $uri
         * @param \Closure|array|string $action
         * @return \Illuminate\Routing\Route 
         * @static 
         */
            public static function patch($uri, $action){
            return \Illuminate\Routing\Router::patch($uri, $action);
            }
        
            /**
         * Register a new DELETE route with the router.
         *
         * @param string $uri
         * @param \Closure|array|string $action
         * @return \Illuminate\Routing\Route 
         * @static 
         */
            public static function delete($uri, $action){
            return \Illuminate\Routing\Router::delete($uri, $action);
            }
        
            /**
         * Register a new OPTIONS route with the router.
         *
         * @param string $uri
         * @param \Closure|array|string $action
         * @return \Illuminate\Routing\Route 
         * @static 
         */
            public static function options($uri, $action){
            return \Illuminate\Routing\Router::options($uri, $action);
            }
        
            /**
         * Register a new route responding to all verbs.
         *
         * @param string $uri
         * @param \Closure|array|string $action
         * @return \Illuminate\Routing\Route 
         * @static 
         */
            public static function any($uri, $action){
            return \Illuminate\Routing\Router::any($uri, $action);
            }
        
            /**
         * Register a new route with the given verbs.
         *
         * @param array|string $methods
         * @param string $uri
         * @param \Closure|array|string $action
         * @return \Illuminate\Routing\Route 
         * @static 
         */
            public static function match($methods, $uri, $action){
            return \Illuminate\Routing\Router::match($methods, $uri, $action);
            }
        
            /**
         * Register an array of controllers with wildcard routing.
         *
         * @param array $controllers
         * @return void 
         * @static 
         */
            public static function controllers($controllers){
            \Illuminate\Routing\Router::controllers($controllers);
            }
        
            /**
         * Route a controller to a URI with wildcard routing.
         *
         * @param string $uri
         * @param string $controller
         * @param array $names
         * @return void 
         * @static 
         */
            public static function controller($uri, $controller, $names = array()){
            \Illuminate\Routing\Router::controller($uri, $controller, $names);
            }
        
            /**
         * Route a resource to a controller.
         *
         * @param string $name
         * @param string $controller
         * @param array $options
         * @return void 
         * @static 
         */
            public static function resource($name, $controller, $options = array()){
            \Illuminate\Routing\Router::resource($name, $controller, $options);
            }
        
            /**
         * Get the base resource URI for a given resource.
         *
         * @param string $resource
         * @return string 
         * @static 
         */
            public static function getResourceUri($resource){
            return \Illuminate\Routing\Router::getResourceUri($resource);
            }
        
            /**
         * Format a resource wildcard for usage.
         *
         * @param string $value
         * @return string 
         * @static 
         */
            public static function getResourceWildcard($value){
            return \Illuminate\Routing\Router::getResourceWildcard($value);
            }
        
            /**
         * Create a route group with shared attributes.
         *
         * @param array $attributes
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function group($attributes, $callback){
            \Illuminate\Routing\Router::group($attributes, $callback);
            }
        
            /**
         * Merge the given array with the last group stack.
         *
         * @param array $new
         * @return array 
         * @static 
         */
            public static function mergeWithLastGroup($new){
            return \Illuminate\Routing\Router::mergeWithLastGroup($new);
            }
        
            /**
         * Merge the given group attributes.
         *
         * @param array $new
         * @param array $old
         * @return array 
         * @static 
         */
            public static function mergeGroup($new, $old){
            return \Illuminate\Routing\Router::mergeGroup($new, $old);
            }
        
            /**
         * Dispatch the request to the application.
         *
         * @param \Illuminate\Http\Request $request
         * @return \Illuminate\Http\Response 
         * @static 
         */
            public static function dispatch($request){
            return \Illuminate\Routing\Router::dispatch($request);
            }
        
            /**
         * Dispatch the request to a route and return the response.
         *
         * @param \Illuminate\Http\Request $request
         * @return mixed 
         * @static 
         */
            public static function dispatchToRoute($request){
            return \Illuminate\Routing\Router::dispatchToRoute($request);
            }
        
            /**
         * Register a route matched event listener.
         *
         * @param string|callable $callback
         * @return void 
         * @static 
         */
            public static function matched($callback){
            \Illuminate\Routing\Router::matched($callback);
            }
        
            /**
         * Register a new "before" filter with the router.
         *
         * @param string|callable $callback
         * @return void 
         * @static 
         */
            public static function before($callback){
            \Illuminate\Routing\Router::before($callback);
            }
        
            /**
         * Register a new "after" filter with the router.
         *
         * @param string|callable $callback
         * @return void 
         * @static 
         */
            public static function after($callback){
            \Illuminate\Routing\Router::after($callback);
            }
        
            /**
         * Register a new filter with the router.
         *
         * @param string $name
         * @param string|callable $callback
         * @return void 
         * @static 
         */
            public static function filter($name, $callback){
            \Illuminate\Routing\Router::filter($name, $callback);
            }
        
            /**
         * Register a pattern-based filter with the router.
         *
         * @param string $pattern
         * @param string $name
         * @param array|null $methods
         * @return void 
         * @static 
         */
            public static function when($pattern, $name, $methods = null){
            \Illuminate\Routing\Router::when($pattern, $name, $methods);
            }
        
            /**
         * Register a regular expression based filter with the router.
         *
         * @param string $pattern
         * @param string $name
         * @param array|null $methods
         * @return void 
         * @static 
         */
            public static function whenRegex($pattern, $name, $methods = null){
            \Illuminate\Routing\Router::whenRegex($pattern, $name, $methods);
            }
        
            /**
         * Register a model binder for a wildcard.
         *
         * @param string $key
         * @param string $class
         * @param \Closure $callback
         * @return void 
         * @throws NotFoundHttpException
         * @static 
         */
            public static function model($key, $class, $callback = null){
            \Illuminate\Routing\Router::model($key, $class, $callback);
            }
        
            /**
         * Add a new route parameter binder.
         *
         * @param string $key
         * @param string|callable $binder
         * @return void 
         * @static 
         */
            public static function bind($key, $binder){
            \Illuminate\Routing\Router::bind($key, $binder);
            }
        
            /**
         * Create a class based binding using the IoC container.
         *
         * @param string $binding
         * @return \Closure 
         * @static 
         */
            public static function createClassBinding($binding){
            return \Illuminate\Routing\Router::createClassBinding($binding);
            }
        
            /**
         * Set a global where pattern on all routes
         *
         * @param string $key
         * @param string $pattern
         * @return void 
         * @static 
         */
            public static function pattern($key, $pattern){
            \Illuminate\Routing\Router::pattern($key, $pattern);
            }
        
            /**
         * Set a group of global where patterns on all routes
         *
         * @param array $patterns
         * @return void 
         * @static 
         */
            public static function patterns($patterns){
            \Illuminate\Routing\Router::patterns($patterns);
            }
        
            /**
         * Call the given route's before filters.
         *
         * @param \Illuminate\Routing\Route $route
         * @param \Illuminate\Http\Request $request
         * @return mixed 
         * @static 
         */
            public static function callRouteBefore($route, $request){
            return \Illuminate\Routing\Router::callRouteBefore($route, $request);
            }
        
            /**
         * Find the patterned filters matching a request.
         *
         * @param \Illuminate\Http\Request $request
         * @return array 
         * @static 
         */
            public static function findPatternFilters($request){
            return \Illuminate\Routing\Router::findPatternFilters($request);
            }
        
            /**
         * Call the given route's before filters.
         *
         * @param \Illuminate\Routing\Route $route
         * @param \Illuminate\Http\Request $request
         * @param \Illuminate\Http\Response $response
         * @return mixed 
         * @static 
         */
            public static function callRouteAfter($route, $request, $response){
            return \Illuminate\Routing\Router::callRouteAfter($route, $request, $response);
            }
        
            /**
         * Call the given route filter.
         *
         * @param string $filter
         * @param array $parameters
         * @param \Illuminate\Routing\Route $route
         * @param \Illuminate\Http\Request $request
         * @param \Illuminate\Http\Response|null $response
         * @return mixed 
         * @static 
         */
            public static function callRouteFilter($filter, $parameters, $route, $request, $response = null){
            return \Illuminate\Routing\Router::callRouteFilter($filter, $parameters, $route, $request, $response);
            }
        
            /**
         * Run a callback with filters disable on the router.
         *
         * @param callable $callback
         * @return void 
         * @static 
         */
            public static function withoutFilters($callback){
            \Illuminate\Routing\Router::withoutFilters($callback);
            }
        
            /**
         * Enable route filtering on the router.
         *
         * @return void 
         * @static 
         */
            public static function enableFilters(){
            \Illuminate\Routing\Router::enableFilters();
            }
        
            /**
         * Disable route filtering on the router.
         *
         * @return void 
         * @static 
         */
            public static function disableFilters(){
            \Illuminate\Routing\Router::disableFilters();
            }
        
            /**
         * Get a route parameter for the current route.
         *
         * @param string $key
         * @param string $default
         * @return mixed 
         * @static 
         */
            public static function input($key, $default = null){
            return \Illuminate\Routing\Router::input($key, $default);
            }
        
            /**
         * Get the currently dispatched route instance.
         *
         * @return \Illuminate\Routing\Route 
         * @static 
         */
            public static function getCurrentRoute(){
            return \Illuminate\Routing\Router::getCurrentRoute();
            }
        
            /**
         * Get the currently dispatched route instance.
         *
         * @return \Illuminate\Routing\Route 
         * @static 
         */
            public static function current(){
            return \Illuminate\Routing\Router::current();
            }
        
            /**
         * Check if a route with the given name exists.
         *
         * @param string $name
         * @return bool 
         * @static 
         */
            public static function has($name){
            return \Illuminate\Routing\Router::has($name);
            }
        
            /**
         * Get the current route name.
         *
         * @return string|null 
         * @static 
         */
            public static function currentRouteName(){
            return \Illuminate\Routing\Router::currentRouteName();
            }
        
            /**
         * Alias for the "currentRouteNamed" method.
         *
         * @param mixed  string
         * @return bool 
         * @static 
         */
            public static function is(){
            return \Illuminate\Routing\Router::is();
            }
        
            /**
         * Determine if the current route matches a given name.
         *
         * @param string $name
         * @return bool 
         * @static 
         */
            public static function currentRouteNamed($name){
            return \Illuminate\Routing\Router::currentRouteNamed($name);
            }
        
            /**
         * Get the current route action.
         *
         * @return string|null 
         * @static 
         */
            public static function currentRouteAction(){
            return \Illuminate\Routing\Router::currentRouteAction();
            }
        
            /**
         * Alias for the "currentRouteUses" method.
         *
         * @param mixed  string
         * @return bool 
         * @static 
         */
            public static function uses(){
            return \Illuminate\Routing\Router::uses();
            }
        
            /**
         * Determine if the current route action matches a given action.
         *
         * @param string $action
         * @return bool 
         * @static 
         */
            public static function currentRouteUses($action){
            return \Illuminate\Routing\Router::currentRouteUses($action);
            }
        
            /**
         * Get the request currently being dispatched.
         *
         * @return \Illuminate\Http\Request 
         * @static 
         */
            public static function getCurrentRequest(){
            return \Illuminate\Routing\Router::getCurrentRequest();
            }
        
            /**
         * Get the underlying route collection.
         *
         * @return \Illuminate\Routing\RouteCollection 
         * @static 
         */
            public static function getRoutes(){
            return \Illuminate\Routing\Router::getRoutes();
            }
        
            /**
         * Get the controller dispatcher instance.
         *
         * @return \Illuminate\Routing\ControllerDispatcher 
         * @static 
         */
            public static function getControllerDispatcher(){
            return \Illuminate\Routing\Router::getControllerDispatcher();
            }
        
            /**
         * Set the controller dispatcher instance.
         *
         * @param \Illuminate\Routing\ControllerDispatcher $dispatcher
         * @return void 
         * @static 
         */
            public static function setControllerDispatcher($dispatcher){
            \Illuminate\Routing\Router::setControllerDispatcher($dispatcher);
            }
        
            /**
         * Get a controller inspector instance.
         *
         * @return \Illuminate\Routing\ControllerInspector 
         * @static 
         */
            public static function getInspector(){
            return \Illuminate\Routing\Router::getInspector();
            }
        
            /**
         * Get the global "where" patterns.
         *
         * @return array 
         * @static 
         */
            public static function getPatterns(){
            return \Illuminate\Routing\Router::getPatterns();
            }
        
            /**
         * Get the response for a given request.
         *
         * @param \Symfony\Component\HttpFoundation\Request $request
         * @param int $type
         * @param bool $catch
         * @return \Illuminate\Http\Response 
         * @static 
         */
            public static function handle($request, $type = 1, $catch = true){
            return \Illuminate\Routing\Router::handle($request, $type, $catch);
            }
        
        }

    
        class Schema extends \Illuminate\Support\Facades\Schema{
        
            /**
         * Determine if the given table exists.
         *
         * @param string $table
         * @return bool 
         * @static 
         */
            public static function hasTable($table){
            return \Illuminate\Database\Schema\Builder::hasTable($table);
            }
        
            /**
         * Determine if the given table has a given column.
         *
         * @param string $table
         * @param string $column
         * @return bool 
         * @static 
         */
            public static function hasColumn($table, $column){
            return \Illuminate\Database\Schema\Builder::hasColumn($table, $column);
            }
        
            /**
         * Get the column listing for a given table.
         *
         * @param string $table
         * @return array 
         * @static 
         */
            public static function getColumnListing($table){
            return \Illuminate\Database\Schema\Builder::getColumnListing($table);
            }
        
            /**
         * Modify a table on the schema.
         *
         * @param string $table
         * @param \Closure $callback
         * @return \Illuminate\Database\Schema\Blueprint 
         * @static 
         */
            public static function table($table, $callback){
            return \Illuminate\Database\Schema\Builder::table($table, $callback);
            }
        
            /**
         * Create a new table on the schema.
         *
         * @param string $table
         * @param \Closure $callback
         * @return \Illuminate\Database\Schema\Blueprint 
         * @static 
         */
            public static function create($table, $callback){
            return \Illuminate\Database\Schema\Builder::create($table, $callback);
            }
        
            /**
         * Drop a table from the schema.
         *
         * @param string $table
         * @return \Illuminate\Database\Schema\Blueprint 
         * @static 
         */
            public static function drop($table){
            return \Illuminate\Database\Schema\Builder::drop($table);
            }
        
            /**
         * Drop a table from the schema if it exists.
         *
         * @param string $table
         * @return \Illuminate\Database\Schema\Blueprint 
         * @static 
         */
            public static function dropIfExists($table){
            return \Illuminate\Database\Schema\Builder::dropIfExists($table);
            }
        
            /**
         * Rename a table on the schema.
         *
         * @param string $from
         * @param string $to
         * @return \Illuminate\Database\Schema\Blueprint 
         * @static 
         */
            public static function rename($from, $to){
            return \Illuminate\Database\Schema\Builder::rename($from, $to);
            }
        
            /**
         * Get the database connection instance.
         *
         * @return \Illuminate\Database\Connection 
         * @static 
         */
            public static function getConnection(){
            return \Illuminate\Database\Schema\Builder::getConnection();
            }
        
            /**
         * Set the database connection instance.
         *
         * @param \Illuminate\Database\Connection
         * @return $this 
         * @static 
         */
            public static function setConnection($connection){
            return \Illuminate\Database\Schema\Builder::setConnection($connection);
            }
        
            /**
         * Set the Schema Blueprint resolver callback.
         *
         * @param \Closure $resolver
         * @return void 
         * @static 
         */
            public static function blueprintResolver($resolver){
            \Illuminate\Database\Schema\Builder::blueprintResolver($resolver);
            }
        
        }

    
        class Seeder extends \Illuminate\Database\Seeder{
        
        }

    
        class Session extends \Illuminate\Support\Facades\Session{
        
            /**
         * Get the session configuration.
         *
         * @return array 
         * @static 
         */
            public static function getSessionConfig(){
            return \Illuminate\Session\SessionManager::getSessionConfig();
            }
        
            /**
         * Get the default session driver name.
         *
         * @return string 
         * @static 
         */
            public static function getDefaultDriver(){
            return \Illuminate\Session\SessionManager::getDefaultDriver();
            }
        
            /**
         * Set the default session driver name.
         *
         * @param string $name
         * @return void 
         * @static 
         */
            public static function setDefaultDriver($name){
            \Illuminate\Session\SessionManager::setDefaultDriver($name);
            }
        
            /**
         * Get a driver instance.
         *
         * @param string $driver
         * @return mixed 
         * @static 
         */
            public static function driver($driver = null){
                //Method inherited from \Illuminate\Support\Manager            
            return \Illuminate\Session\SessionManager::driver($driver);
            }
        
            /**
         * Register a custom driver creator Closure.
         *
         * @param string $driver
         * @param \Closure $callback
         * @return $this 
         * @static 
         */
            public static function extend($driver, $callback){
                //Method inherited from \Illuminate\Support\Manager            
            return \Illuminate\Session\SessionManager::extend($driver, $callback);
            }
        
            /**
         * Get all of the created "drivers".
         *
         * @return array 
         * @static 
         */
            public static function getDrivers(){
                //Method inherited from \Illuminate\Support\Manager            
            return \Illuminate\Session\SessionManager::getDrivers();
            }
        
            /**
         * Starts the session storage.
         *
         * @return bool True if session started.
         * @throws \RuntimeException If session fails to start.
         * @api 
         * @static 
         */
            public static function start(){
            return \Illuminate\Session\Store::start();
            }
        
            /**
         * Returns the session ID.
         *
         * @return string The session ID.
         * @api 
         * @static 
         */
            public static function getId(){
            return \Illuminate\Session\Store::getId();
            }
        
            /**
         * Sets the session ID
         *
         * @param string $id
         * @api 
         * @static 
         */
            public static function setId($id){
            return \Illuminate\Session\Store::setId($id);
            }
        
            /**
         * Determine if this is a valid session ID.
         *
         * @param string $id
         * @return bool 
         * @static 
         */
            public static function isValidId($id){
            return \Illuminate\Session\Store::isValidId($id);
            }
        
            /**
         * Returns the session name.
         *
         * @return mixed The session name.
         * @api 
         * @static 
         */
            public static function getName(){
            return \Illuminate\Session\Store::getName();
            }
        
            /**
         * Sets the session name.
         *
         * @param string $name
         * @api 
         * @static 
         */
            public static function setName($name){
            return \Illuminate\Session\Store::setName($name);
            }
        
            /**
         * Invalidates the current session.
         * 
         * Clears all session attributes and flashes and regenerates the
         * session and deletes the old session from persistence.
         *
         * @param int $lifetime Sets the cookie lifetime for the session cookie. A null value
         *                          will leave the system settings unchanged, 0 sets the cookie
         *                          to expire with browser session. Time is in seconds, and is
         *                          not a Unix timestamp.
         * @return bool True if session invalidated, false if error.
         * @api 
         * @static 
         */
            public static function invalidate($lifetime = null){
            return \Illuminate\Session\Store::invalidate($lifetime);
            }
        
            /**
         * Migrates the current session to a new session id while maintaining all
         * session attributes.
         *
         * @param bool $destroy Whether to delete the old session or leave it to garbage collection.
         * @param int $lifetime Sets the cookie lifetime for the session cookie. A null value
         *                          will leave the system settings unchanged, 0 sets the cookie
         *                          to expire with browser session. Time is in seconds, and is
         *                          not a Unix timestamp.
         * @return bool True if session migrated, false if error.
         * @api 
         * @static 
         */
            public static function migrate($destroy = false, $lifetime = null){
            return \Illuminate\Session\Store::migrate($destroy, $lifetime);
            }
        
            /**
         * Generate a new session identifier.
         *
         * @param bool $destroy
         * @return bool 
         * @static 
         */
            public static function regenerate($destroy = false){
            return \Illuminate\Session\Store::regenerate($destroy);
            }
        
            /**
         * Force the session to be saved and closed.
         * 
         * This method is generally not required for real sessions as
         * the session will be automatically saved at the end of
         * code execution.
         *
         * @static 
         */
            public static function save(){
            return \Illuminate\Session\Store::save();
            }
        
            /**
         * Age the flash data for the session.
         *
         * @return void 
         * @static 
         */
            public static function ageFlashData(){
            \Illuminate\Session\Store::ageFlashData();
            }
        
            /**
         * Checks if an attribute is defined.
         *
         * @param string $name The attribute name
         * @return bool true if the attribute is defined, false otherwise
         * @api 
         * @static 
         */
            public static function has($name){
            return \Illuminate\Session\Store::has($name);
            }
        
            /**
         * Returns an attribute.
         *
         * @param string $name The attribute name
         * @param mixed $default The default value if not found.
         * @return mixed 
         * @api 
         * @static 
         */
            public static function get($name, $default = null){
            return \Illuminate\Session\Store::get($name, $default);
            }
        
            /**
         * Get the value of a given key and then forget it.
         *
         * @param string $key
         * @param string $default
         * @return mixed 
         * @static 
         */
            public static function pull($key, $default = null){
            return \Illuminate\Session\Store::pull($key, $default);
            }
        
            /**
         * Determine if the session contains old input.
         *
         * @param string $key
         * @return bool 
         * @static 
         */
            public static function hasOldInput($key = null){
            return \Illuminate\Session\Store::hasOldInput($key);
            }
        
            /**
         * Get the requested item from the flashed input array.
         *
         * @param string $key
         * @param mixed $default
         * @return mixed 
         * @static 
         */
            public static function getOldInput($key = null, $default = null){
            return \Illuminate\Session\Store::getOldInput($key, $default);
            }
        
            /**
         * Sets an attribute.
         *
         * @param string $name
         * @param mixed $value
         * @api 
         * @static 
         */
            public static function set($name, $value){
            return \Illuminate\Session\Store::set($name, $value);
            }
        
            /**
         * Put a key / value pair or array of key / value pairs in the session.
         *
         * @param string|array $key
         * @param mixed|null $value
         * @return void 
         * @static 
         */
            public static function put($key, $value = null){
            \Illuminate\Session\Store::put($key, $value);
            }
        
            /**
         * Push a value onto a session array.
         *
         * @param string $key
         * @param mixed $value
         * @return void 
         * @static 
         */
            public static function push($key, $value){
            \Illuminate\Session\Store::push($key, $value);
            }
        
            /**
         * Flash a key / value pair to the session.
         *
         * @param string $key
         * @param mixed $value
         * @return void 
         * @static 
         */
            public static function flash($key, $value){
            \Illuminate\Session\Store::flash($key, $value);
            }
        
            /**
         * Flash an input array to the session.
         *
         * @param array $value
         * @return void 
         * @static 
         */
            public static function flashInput($value){
            \Illuminate\Session\Store::flashInput($value);
            }
        
            /**
         * Reflash all of the session flash data.
         *
         * @return void 
         * @static 
         */
            public static function reflash(){
            \Illuminate\Session\Store::reflash();
            }
        
            /**
         * Reflash a subset of the current flash data.
         *
         * @param array|mixed $keys
         * @return void 
         * @static 
         */
            public static function keep($keys = null){
            \Illuminate\Session\Store::keep($keys);
            }
        
            /**
         * Returns attributes.
         *
         * @return array Attributes
         * @api 
         * @static 
         */
            public static function all(){
            return \Illuminate\Session\Store::all();
            }
        
            /**
         * Sets attributes.
         *
         * @param array $attributes Attributes
         * @static 
         */
            public static function replace($attributes){
            return \Illuminate\Session\Store::replace($attributes);
            }
        
            /**
         * Removes an attribute.
         *
         * @param string $name
         * @return mixed The removed value or null when it does not exist
         * @api 
         * @static 
         */
            public static function remove($name){
            return \Illuminate\Session\Store::remove($name);
            }
        
            /**
         * Remove an item from the session.
         *
         * @param string $key
         * @return void 
         * @static 
         */
            public static function forget($key){
            \Illuminate\Session\Store::forget($key);
            }
        
            /**
         * Clears all attributes.
         *
         * @api 
         * @static 
         */
            public static function clear(){
            return \Illuminate\Session\Store::clear();
            }
        
            /**
         * Remove all of the items from the session.
         *
         * @return void 
         * @static 
         */
            public static function flush(){
            \Illuminate\Session\Store::flush();
            }
        
            /**
         * Checks if the session was started.
         *
         * @return bool 
         * @static 
         */
            public static function isStarted(){
            return \Illuminate\Session\Store::isStarted();
            }
        
            /**
         * Registers a SessionBagInterface with the session.
         *
         * @param \Symfony\Component\HttpFoundation\Session\SessionBagInterface $bag
         * @static 
         */
            public static function registerBag($bag){
            return \Illuminate\Session\Store::registerBag($bag);
            }
        
            /**
         * Gets a bag instance by name.
         *
         * @param string $name
         * @return \Symfony\Component\HttpFoundation\Session\SessionBagInterface 
         * @static 
         */
            public static function getBag($name){
            return \Illuminate\Session\Store::getBag($name);
            }
        
            /**
         * Gets session meta.
         *
         * @return \Symfony\Component\HttpFoundation\Session\MetadataBag 
         * @static 
         */
            public static function getMetadataBag(){
            return \Illuminate\Session\Store::getMetadataBag();
            }
        
            /**
         * Get the raw bag data array for a given bag.
         *
         * @param string $name
         * @return array 
         * @static 
         */
            public static function getBagData($name){
            return \Illuminate\Session\Store::getBagData($name);
            }
        
            /**
         * Get the CSRF token value.
         *
         * @return string 
         * @static 
         */
            public static function token(){
            return \Illuminate\Session\Store::token();
            }
        
            /**
         * Get the CSRF token value.
         *
         * @return string 
         * @static 
         */
            public static function getToken(){
            return \Illuminate\Session\Store::getToken();
            }
        
            /**
         * Regenerate the CSRF token value.
         *
         * @return void 
         * @static 
         */
            public static function regenerateToken(){
            \Illuminate\Session\Store::regenerateToken();
            }
        
            /**
         * Set the existence of the session on the handler if applicable.
         *
         * @param bool $value
         * @return void 
         * @static 
         */
            public static function setExists($value){
            \Illuminate\Session\Store::setExists($value);
            }
        
            /**
         * Get the underlying session handler implementation.
         *
         * @return \SessionHandlerInterface 
         * @static 
         */
            public static function getHandler(){
            return \Illuminate\Session\Store::getHandler();
            }
        
            /**
         * Determine if the session handler needs a request.
         *
         * @return bool 
         * @static 
         */
            public static function handlerNeedsRequest(){
            return \Illuminate\Session\Store::handlerNeedsRequest();
            }
        
            /**
         * Set the request on the handler instance.
         *
         * @param \Symfony\Component\HttpFoundation\Request $request
         * @return void 
         * @static 
         */
            public static function setRequestOnHandler($request){
            \Illuminate\Session\Store::setRequestOnHandler($request);
            }
        
        }

    
        class SSH extends \Illuminate\Support\Facades\SSH{
        
            /**
         * Get a remote connection instance.
         *
         * @param string|array|mixed $name
         * @return \Illuminate\Remote\Connection 
         * @static 
         */
            public static function into($name){
            return \Illuminate\Remote\RemoteManager::into($name);
            }
        
            /**
         * Get a remote connection instance.
         *
         * @param string|array $name
         * @return \Illuminate\Remote\Connection 
         * @static 
         */
            public static function connection($name = null){
            return \Illuminate\Remote\RemoteManager::connection($name);
            }
        
            /**
         * Get a connection group instance by name.
         *
         * @param string $name
         * @return \Illuminate\Remote\Connection 
         * @static 
         */
            public static function group($name){
            return \Illuminate\Remote\RemoteManager::group($name);
            }
        
            /**
         * Resolve a multiple connection instance.
         *
         * @param array $names
         * @return \Illuminate\Remote\MultiConnection 
         * @static 
         */
            public static function multiple($names){
            return \Illuminate\Remote\RemoteManager::multiple($names);
            }
        
            /**
         * Resolve a remote connection instance.
         *
         * @param string $name
         * @return \Illuminate\Remote\Connection 
         * @static 
         */
            public static function resolve($name){
            return \Illuminate\Remote\RemoteManager::resolve($name);
            }
        
            /**
         * Get the default connection name.
         *
         * @return string 
         * @static 
         */
            public static function getDefaultConnection(){
            return \Illuminate\Remote\RemoteManager::getDefaultConnection();
            }
        
            /**
         * Set the default connection name.
         *
         * @param string $name
         * @return void 
         * @static 
         */
            public static function setDefaultConnection($name){
            \Illuminate\Remote\RemoteManager::setDefaultConnection($name);
            }
        
            /**
         * Define a set of commands as a task.
         *
         * @param string $task
         * @param string|array $commands
         * @return void 
         * @static 
         */
            public static function define($task, $commands){
            \Illuminate\Remote\Connection::define($task, $commands);
            }
        
            /**
         * Run a task against the connection.
         *
         * @param string $task
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function task($task, $callback = null){
            \Illuminate\Remote\Connection::task($task, $callback);
            }
        
            /**
         * Run a set of commands against the connection.
         *
         * @param string|array $commands
         * @param \Closure $callback
         * @return void 
         * @static 
         */
            public static function run($commands, $callback = null){
            \Illuminate\Remote\Connection::run($commands, $callback);
            }
        
            /**
         * Download the contents of a remote file.
         *
         * @param string $remote
         * @param string $local
         * @return void 
         * @static 
         */
            public static function get($remote, $local){
            \Illuminate\Remote\Connection::get($remote, $local);
            }
        
            /**
         * Get the contents of a remote file.
         *
         * @param string $remote
         * @return string 
         * @static 
         */
            public static function getString($remote){
            return \Illuminate\Remote\Connection::getString($remote);
            }
        
            /**
         * Upload a local file to the server.
         *
         * @param string $local
         * @param string $remote
         * @return void 
         * @static 
         */
            public static function put($local, $remote){
            \Illuminate\Remote\Connection::put($local, $remote);
            }
        
            /**
         * Upload a string to to the given file on the server.
         *
         * @param string $remote
         * @param string $contents
         * @return void 
         * @static 
         */
            public static function putString($remote, $contents){
            \Illuminate\Remote\Connection::putString($remote, $contents);
            }
        
            /**
         * Display the given line using the default output.
         *
         * @param string $line
         * @return void 
         * @static 
         */
            public static function display($line){
            \Illuminate\Remote\Connection::display($line);
            }
        
            /**
         * Get the exit status of the last command.
         *
         * @return int|bool 
         * @static 
         */
            public static function status(){
            return \Illuminate\Remote\Connection::status();
            }
        
            /**
         * Get the gateway implementation.
         *
         * @return \Illuminate\Remote\GatewayInterface 
         * @throws \RuntimeException
         * @static 
         */
            public static function getGateway(){
            return \Illuminate\Remote\Connection::getGateway();
            }
        
            /**
         * Get the output implementation for the connection.
         *
         * @return \Symfony\Component\Console\Output\OutputInterface 
         * @static 
         */
            public static function getOutput(){
            return \Illuminate\Remote\Connection::getOutput();
            }
        
            /**
         * Set the output implementation.
         *
         * @param \Symfony\Component\Console\Output\OutputInterface $output
         * @return void 
         * @static 
         */
            public static function setOutput($output){
            \Illuminate\Remote\Connection::setOutput($output);
            }
        
        }

    
        class Str extends \Illuminate\Support\Str{
        
        }

    
        class URL extends \Illuminate\Support\Facades\URL{
        
            /**
         * Get the full URL for the current request.
         *
         * @return string 
         * @static 
         */
            public static function full(){
            return \Illuminate\Routing\UrlGenerator::full();
            }
        
            /**
         * Get the current URL for the request.
         *
         * @return string 
         * @static 
         */
            public static function current(){
            return \Illuminate\Routing\UrlGenerator::current();
            }
        
            /**
         * Get the URL for the previous request.
         *
         * @return string 
         * @static 
         */
            public static function previous(){
            return \Illuminate\Routing\UrlGenerator::previous();
            }
        
            /**
         * Generate a absolute URL to the given path.
         *
         * @param string $path
         * @param mixed $extra
         * @param bool|null $secure
         * @return string 
         * @static 
         */
            public static function to($path, $extra = array(), $secure = null){
            return \Illuminate\Routing\UrlGenerator::to($path, $extra, $secure);
            }
        
            /**
         * Generate a secure, absolute URL to the given path.
         *
         * @param string $path
         * @param array $parameters
         * @return string 
         * @static 
         */
            public static function secure($path, $parameters = array()){
            return \Illuminate\Routing\UrlGenerator::secure($path, $parameters);
            }
        
            /**
         * Generate a URL to an application asset.
         *
         * @param string $path
         * @param bool|null $secure
         * @return string 
         * @static 
         */
            public static function asset($path, $secure = null){
            return \Illuminate\Routing\UrlGenerator::asset($path, $secure);
            }
        
            /**
         * Generate a URL to a secure asset.
         *
         * @param string $path
         * @return string 
         * @static 
         */
            public static function secureAsset($path){
            return \Illuminate\Routing\UrlGenerator::secureAsset($path);
            }
        
            /**
         * Force the schema for URLs.
         *
         * @param string $schema
         * @return void 
         * @static 
         */
            public static function forceSchema($schema){
            \Illuminate\Routing\UrlGenerator::forceSchema($schema);
            }
        
            /**
         * Get the URL to a named route.
         *
         * @param string $name
         * @param mixed $parameters
         * @param bool $absolute
         * @param \Illuminate\Routing\Route $route
         * @return string 
         * @throws \InvalidArgumentException
         * @static 
         */
            public static function route($name, $parameters = array(), $absolute = true, $route = null){
            return \Illuminate\Routing\UrlGenerator::route($name, $parameters, $absolute, $route);
            }
        
            /**
         * Get the URL to a controller action.
         *
         * @param string $action
         * @param mixed $parameters
         * @param bool $absolute
         * @return string 
         * @static 
         */
            public static function action($action, $parameters = array(), $absolute = true){
            return \Illuminate\Routing\UrlGenerator::action($action, $parameters, $absolute);
            }
        
            /**
         * Set the forced root URL.
         *
         * @param string $root
         * @return void 
         * @static 
         */
            public static function forceRootUrl($root){
            \Illuminate\Routing\UrlGenerator::forceRootUrl($root);
            }
        
            /**
         * Determine if the given path is a valid URL.
         *
         * @param string $path
         * @return bool 
         * @static 
         */
            public static function isValidUrl($path){
            return \Illuminate\Routing\UrlGenerator::isValidUrl($path);
            }
        
            /**
         * Get the request instance.
         *
         * @return \Symfony\Component\HttpFoundation\Request 
         * @static 
         */
            public static function getRequest(){
            return \Illuminate\Routing\UrlGenerator::getRequest();
            }
        
            /**
         * Set the current request instance.
         *
         * @param \Illuminate\Http\Request $request
         * @return void 
         * @static 
         */
            public static function setRequest($request){
            \Illuminate\Routing\UrlGenerator::setRequest($request);
            }
        
        }

    
        class Validator extends \Illuminate\Support\Facades\Validator{
        
            /**
         * Create a new Validator instance.
         *
         * @param array $data
         * @param array $rules
         * @param array $messages
         * @param array $customAttributes
         * @return \Illuminate\Validation\Validator 
         * @static 
         */
            public static function make($data, $rules, $messages = array(), $customAttributes = array()){
            return \Illuminate\Validation\Factory::make($data, $rules, $messages, $customAttributes);
            }
        
            /**
         * Register a custom validator extension.
         *
         * @param string $rule
         * @param \Closure|string $extension
         * @param string $message
         * @return void 
         * @static 
         */
            public static function extend($rule, $extension, $message = null){
            \Illuminate\Validation\Factory::extend($rule, $extension, $message);
            }
        
            /**
         * Register a custom implicit validator extension.
         *
         * @param string $rule
         * @param \Closure|string $extension
         * @param string $message
         * @return void 
         * @static 
         */
            public static function extendImplicit($rule, $extension, $message = null){
            \Illuminate\Validation\Factory::extendImplicit($rule, $extension, $message);
            }
        
            /**
         * Register a custom implicit validator message replacer.
         *
         * @param string $rule
         * @param \Closure|string $replacer
         * @return void 
         * @static 
         */
            public static function replacer($rule, $replacer){
            \Illuminate\Validation\Factory::replacer($rule, $replacer);
            }
        
            /**
         * Set the Validator instance resolver.
         *
         * @param \Closure $resolver
         * @return void 
         * @static 
         */
            public static function resolver($resolver){
            \Illuminate\Validation\Factory::resolver($resolver);
            }
        
            /**
         * Get the Translator implementation.
         *
         * @return \Symfony\Component\Translation\TranslatorInterface 
         * @static 
         */
            public static function getTranslator(){
            return \Illuminate\Validation\Factory::getTranslator();
            }
        
            /**
         * Get the Presence Verifier implementation.
         *
         * @return \Illuminate\Validation\PresenceVerifierInterface 
         * @static 
         */
            public static function getPresenceVerifier(){
            return \Illuminate\Validation\Factory::getPresenceVerifier();
            }
        
            /**
         * Set the Presence Verifier implementation.
         *
         * @param \Illuminate\Validation\PresenceVerifierInterface $presenceVerifier
         * @return void 
         * @static 
         */
            public static function setPresenceVerifier($presenceVerifier){
            \Illuminate\Validation\Factory::setPresenceVerifier($presenceVerifier);
            }
        
        }

    
        class View extends \Illuminate\Support\Facades\View{
        
            /**
         * Get the evaluated view contents for the given view.
         *
         * @param string $view
         * @param array $data
         * @param array $mergeData
         * @return \Illuminate\View\View 
         * @static 
         */
            public static function make($view, $data = array(), $mergeData = array()){
            return \Illuminate\View\Factory::make($view, $data, $mergeData);
            }
        
            /**
         * Get the evaluated view contents for a named view.
         *
         * @param string $view
         * @param mixed $data
         * @return \Illuminate\View\View 
         * @static 
         */
            public static function of($view, $data = array()){
            return \Illuminate\View\Factory::of($view, $data);
            }
        
            /**
         * Register a named view.
         *
         * @param string $view
         * @param string $name
         * @return void 
         * @static 
         */
            public static function name($view, $name){
            \Illuminate\View\Factory::name($view, $name);
            }
        
            /**
         * Add an alias for a view.
         *
         * @param string $view
         * @param string $alias
         * @return void 
         * @static 
         */
            public static function alias($view, $alias){
            \Illuminate\View\Factory::alias($view, $alias);
            }
        
            /**
         * Determine if a given view exists.
         *
         * @param string $view
         * @return bool 
         * @static 
         */
            public static function exists($view){
            return \Illuminate\View\Factory::exists($view);
            }
        
            /**
         * Get the rendered contents of a partial from a loop.
         *
         * @param string $view
         * @param array $data
         * @param string $iterator
         * @param string $empty
         * @return string 
         * @static 
         */
            public static function renderEach($view, $data, $iterator, $empty = 'raw|'){
            return \Illuminate\View\Factory::renderEach($view, $data, $iterator, $empty);
            }
        
            /**
         * Get the appropriate view engine for the given path.
         *
         * @param string $path
         * @return \Illuminate\View\Engines\EngineInterface 
         * @throws \InvalidArgumentException
         * @static 
         */
            public static function getEngineFromPath($path){
            return \Illuminate\View\Factory::getEngineFromPath($path);
            }
        
            /**
         * Add a piece of shared data to the environment.
         *
         * @param string $key
         * @param mixed $value
         * @return void 
         * @static 
         */
            public static function share($key, $value = null){
            \Illuminate\View\Factory::share($key, $value);
            }
        
            /**
         * Register a view creator event.
         *
         * @param array|string $views
         * @param \Closure|string $callback
         * @return array 
         * @static 
         */
            public static function creator($views, $callback){
            return \Illuminate\View\Factory::creator($views, $callback);
            }
        
            /**
         * Register multiple view composers via an array.
         *
         * @param array $composers
         * @return array 
         * @static 
         */
            public static function composers($composers){
            return \Illuminate\View\Factory::composers($composers);
            }
        
            /**
         * Register a view composer event.
         *
         * @param array|string $views
         * @param \Closure|string $callback
         * @param int|null $priority
         * @return array 
         * @static 
         */
            public static function composer($views, $callback, $priority = null){
            return \Illuminate\View\Factory::composer($views, $callback, $priority);
            }
        
            /**
         * Call the composer for a given view.
         *
         * @param \Illuminate\View\View $view
         * @return void 
         * @static 
         */
            public static function callComposer($view){
            \Illuminate\View\Factory::callComposer($view);
            }
        
            /**
         * Call the creator for a given view.
         *
         * @param \Illuminate\View\View $view
         * @return void 
         * @static 
         */
            public static function callCreator($view){
            \Illuminate\View\Factory::callCreator($view);
            }
        
            /**
         * Start injecting content into a section.
         *
         * @param string $section
         * @param string $content
         * @return void 
         * @static 
         */
            public static function startSection($section, $content = ''){
            \Illuminate\View\Factory::startSection($section, $content);
            }
        
            /**
         * Inject inline content into a section.
         *
         * @param string $section
         * @param string $content
         * @return void 
         * @static 
         */
            public static function inject($section, $content){
            \Illuminate\View\Factory::inject($section, $content);
            }
        
            /**
         * Stop injecting content into a section and return its contents.
         *
         * @return string 
         * @static 
         */
            public static function yieldSection(){
            return \Illuminate\View\Factory::yieldSection();
            }
        
            /**
         * Stop injecting content into a section.
         *
         * @param bool $overwrite
         * @return string 
         * @static 
         */
            public static function stopSection($overwrite = false){
            return \Illuminate\View\Factory::stopSection($overwrite);
            }
        
            /**
         * Stop injecting content into a section and append it.
         *
         * @return string 
         * @static 
         */
            public static function appendSection(){
            return \Illuminate\View\Factory::appendSection();
            }
        
            /**
         * Get the string contents of a section.
         *
         * @param string $section
         * @param string $default
         * @return string 
         * @static 
         */
            public static function yieldContent($section, $default = ''){
            return \Illuminate\View\Factory::yieldContent($section, $default);
            }
        
            /**
         * Flush all of the section contents.
         *
         * @return void 
         * @static 
         */
            public static function flushSections(){
            \Illuminate\View\Factory::flushSections();
            }
        
            /**
         * Flush all of the section contents if done rendering.
         *
         * @return void 
         * @static 
         */
            public static function flushSectionsIfDoneRendering(){
            \Illuminate\View\Factory::flushSectionsIfDoneRendering();
            }
        
            /**
         * Increment the rendering counter.
         *
         * @return void 
         * @static 
         */
            public static function incrementRender(){
            \Illuminate\View\Factory::incrementRender();
            }
        
            /**
         * Decrement the rendering counter.
         *
         * @return void 
         * @static 
         */
            public static function decrementRender(){
            \Illuminate\View\Factory::decrementRender();
            }
        
            /**
         * Check if there are no active render operations.
         *
         * @return bool 
         * @static 
         */
            public static function doneRendering(){
            return \Illuminate\View\Factory::doneRendering();
            }
        
            /**
         * Add a location to the array of view locations.
         *
         * @param string $location
         * @return void 
         * @static 
         */
            public static function addLocation($location){
            \Illuminate\View\Factory::addLocation($location);
            }
        
            /**
         * Add a new namespace to the loader.
         *
         * @param string $namespace
         * @param string|array $hints
         * @return void 
         * @static 
         */
            public static function addNamespace($namespace, $hints){
            \Illuminate\View\Factory::addNamespace($namespace, $hints);
            }
        
            /**
         * Prepend a new namespace to the loader.
         *
         * @param string $namespace
         * @param string|array $hints
         * @return void 
         * @static 
         */
            public static function prependNamespace($namespace, $hints){
            \Illuminate\View\Factory::prependNamespace($namespace, $hints);
            }
        
            /**
         * Register a valid view extension and its engine.
         *
         * @param string $extension
         * @param string $engine
         * @param \Closure $resolver
         * @return void 
         * @static 
         */
            public static function addExtension($extension, $engine, $resolver = null){
            \Illuminate\View\Factory::addExtension($extension, $engine, $resolver);
            }
        
            /**
         * Get the extension to engine bindings.
         *
         * @return array 
         * @static 
         */
            public static function getExtensions(){
            return \Illuminate\View\Factory::getExtensions();
            }
        
            /**
         * Get the engine resolver instance.
         *
         * @return \Illuminate\View\Engines\EngineResolver 
         * @static 
         */
            public static function getEngineResolver(){
            return \Illuminate\View\Factory::getEngineResolver();
            }
        
            /**
         * Get the view finder instance.
         *
         * @return \Illuminate\View\ViewFinderInterface 
         * @static 
         */
            public static function getFinder(){
            return \Illuminate\View\Factory::getFinder();
            }
        
            /**
         * Set the view finder instance.
         *
         * @param \Illuminate\View\ViewFinderInterface $finder
         * @return void 
         * @static 
         */
            public static function setFinder($finder){
            \Illuminate\View\Factory::setFinder($finder);
            }
        
            /**
         * Get the event dispatcher instance.
         *
         * @return \Illuminate\Events\Dispatcher 
         * @static 
         */
            public static function getDispatcher(){
            return \Illuminate\View\Factory::getDispatcher();
            }
        
            /**
         * Set the event dispatcher instance.
         *
         * @param \Illuminate\Events\Dispatcher
         * @return void 
         * @static 
         */
            public static function setDispatcher($events){
            \Illuminate\View\Factory::setDispatcher($events);
            }
        
            /**
         * Get the IoC container instance.
         *
         * @return \Illuminate\Container\Container 
         * @static 
         */
            public static function getContainer(){
            return \Illuminate\View\Factory::getContainer();
            }
        
            /**
         * Set the IoC container instance.
         *
         * @param \Illuminate\Container\Container $container
         * @return void 
         * @static 
         */
            public static function setContainer($container){
            \Illuminate\View\Factory::setContainer($container);
            }
        
            /**
         * Get an item from the shared data.
         *
         * @param string $key
         * @param mixed $default
         * @return mixed 
         * @static 
         */
            public static function shared($key, $default = null){
            return \Illuminate\View\Factory::shared($key, $default);
            }
        
            /**
         * Get all of the shared data for the environment.
         *
         * @return array 
         * @static 
         */
            public static function getShared(){
            return \Illuminate\View\Factory::getShared();
            }
        
            /**
         * Get the entire array of sections.
         *
         * @return array 
         * @static 
         */
            public static function getSections(){
            return \Illuminate\View\Factory::getSections();
            }
        
            /**
         * Get all of the registered named views in environment.
         *
         * @return array 
         * @static 
         */
            public static function getNames(){
            return \Illuminate\View\Factory::getNames();
            }
        
        }

    
        class Debugbar extends \Barryvdh\Debugbar\Facade{
        
            /**
         * Enable the Debugbar and boot, if not already booted.
         *
         * @static 
         */
            public static function enable(){
            return \Barryvdh\Debugbar\LaravelDebugbar::enable();
            }
        
            /**
         * Boot the debugbar (add collectors, renderer and listener)
         *
         * @static 
         */
            public static function boot(){
            return \Barryvdh\Debugbar\LaravelDebugbar::boot();
            }
        
            /**
         * 
         *
         * @static 
         */
            public static function shouldCollect($name, $default = false){
            return \Barryvdh\Debugbar\LaravelDebugbar::shouldCollect($name, $default);
            }
        
            /**
         * Starts a measure
         *
         * @param string $name Internal name, used to stop the measure
         * @param string $label Public name
         * @static 
         */
            public static function startMeasure($name, $label = null){
            return \Barryvdh\Debugbar\LaravelDebugbar::startMeasure($name, $label);
            }
        
            /**
         * Stops a measure
         *
         * @param string $name
         * @static 
         */
            public static function stopMeasure($name){
            return \Barryvdh\Debugbar\LaravelDebugbar::stopMeasure($name);
            }
        
            /**
         * Adds an exception to be profiled in the debug bar
         *
         * @param \Barryvdh\Debugbar\Exception $e
         * @static 
         */
            public static function addException($e){
            return \Barryvdh\Debugbar\LaravelDebugbar::addException($e);
            }
        
            /**
         * Returns a JavascriptRenderer for this instance
         *
         * @param string $baseUrl
         * @param string $basePathng
         * @return \Barryvdh\Debugbar\JavascriptRenderer 
         * @static 
         */
            public static function getJavascriptRenderer($baseUrl = null, $basePath = null){
            return \Barryvdh\Debugbar\LaravelDebugbar::getJavascriptRenderer($baseUrl, $basePath);
            }
        
            /**
         * Modify the response and inject the debugbar (or data in headers)
         *
         * @param \Illuminate\Http\Request $request
         * @param \Symfony\Component\HttpFoundation\Response $response
         * @return \Symfony\Component\HttpFoundation\Response 
         * @static 
         */
            public static function modifyResponse($request, $response){
            return \Barryvdh\Debugbar\LaravelDebugbar::modifyResponse($request, $response);
            }
        
            /**
         * Check if the Debugbar is enabled
         *
         * @return boolean 
         * @static 
         */
            public static function isEnabled(){
            return \Barryvdh\Debugbar\LaravelDebugbar::isEnabled();
            }
        
            /**
         * Collects the data from the collectors
         *
         * @return array 
         * @static 
         */
            public static function collect(){
            return \Barryvdh\Debugbar\LaravelDebugbar::collect();
            }
        
            /**
         * Injects the web debug toolbar into the given Response.
         *
         * @param \Symfony\Component\HttpFoundation\Response $response A Response instance
         *                                                             Based on
         *                                                             https://github.com/symfony/WebProfilerBundle/blob/master/EventListener/WebDebugToolbarListener.php
         * @static 
         */
            public static function injectDebugbar($response){
            return \Barryvdh\Debugbar\LaravelDebugbar::injectDebugbar($response);
            }
        
            /**
         * Disable the Debugbar
         *
         * @static 
         */
            public static function disable(){
            return \Barryvdh\Debugbar\LaravelDebugbar::disable();
            }
        
            /**
         * Adds a measure
         *
         * @param string $label
         * @param float $start
         * @param float $end
         * @static 
         */
            public static function addMeasure($label, $start, $end){
            return \Barryvdh\Debugbar\LaravelDebugbar::addMeasure($label, $start, $end);
            }
        
            /**
         * Utility function to measure the execution of a Closure
         *
         * @param string $label
         * @param \Closure $closure
         * @static 
         */
            public static function measure($label, $closure){
            return \Barryvdh\Debugbar\LaravelDebugbar::measure($label, $closure);
            }
        
            /**
         * Collect data in a CLI request
         *
         * @return array 
         * @static 
         */
            public static function collectConsole(){
            return \Barryvdh\Debugbar\LaravelDebugbar::collectConsole();
            }
        
            /**
         * Adds a message to the MessagesCollector
         * 
         * A message can be anything from an object to a string
         *
         * @param mixed $message
         * @param string $label
         * @static 
         */
            public static function addMessage($message, $label = 'info'){
            return \Barryvdh\Debugbar\LaravelDebugbar::addMessage($message, $label);
            }
        
            /**
         * Adds a data collector
         *
         * @param \DebugBar\DataCollectorInterface $collector
         * @throws DebugBarException
         * @return $this 
         * @static 
         */
            public static function addCollector($collector){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::addCollector($collector);
            }
        
            /**
         * Checks if a data collector has been added
         *
         * @param string $name
         * @return boolean 
         * @static 
         */
            public static function hasCollector($name){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::hasCollector($name);
            }
        
            /**
         * Returns a data collector
         *
         * @param string $name
         * @return \DebugBar\DataCollectorInterface 
         * @static 
         */
            public static function getCollector($name){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::getCollector($name);
            }
        
            /**
         * Returns an array of all data collectors
         *
         * @return \DebugBar\array[DataCollectorInterface] 
         * @static 
         */
            public static function getCollectors(){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::getCollectors();
            }
        
            /**
         * Sets the request id generator
         *
         * @param \DebugBar\RequestIdGeneratorInterface $generator
         * @static 
         */
            public static function setRequestIdGenerator($generator){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::setRequestIdGenerator($generator);
            }
        
            /**
         * 
         *
         * @return \DebugBar\RequestIdGeneratorInterface 
         * @static 
         */
            public static function getRequestIdGenerator(){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::getRequestIdGenerator();
            }
        
            /**
         * Returns the id of the current request
         *
         * @return string 
         * @static 
         */
            public static function getCurrentRequestId(){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::getCurrentRequestId();
            }
        
            /**
         * Sets the storage backend to use to store the collected data
         *
         * @param \DebugBar\StorageInterface $storage
         * @static 
         */
            public static function setStorage($storage = null){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::setStorage($storage);
            }
        
            /**
         * 
         *
         * @return \DebugBar\StorageInterface 
         * @static 
         */
            public static function getStorage(){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::getStorage();
            }
        
            /**
         * Checks if the data will be persisted
         *
         * @return boolean 
         * @static 
         */
            public static function isDataPersisted(){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::isDataPersisted();
            }
        
            /**
         * Sets the HTTP driver
         *
         * @param \DebugBar\HttpDriverInterface $driver
         * @static 
         */
            public static function setHttpDriver($driver){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::setHttpDriver($driver);
            }
        
            /**
         * Returns the HTTP driver
         * 
         * If no http driver where defined, a PhpHttpDriver is automatically created
         *
         * @return \DebugBar\HttpDriverInterface 
         * @static 
         */
            public static function getHttpDriver(){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::getHttpDriver();
            }
        
            /**
         * Returns collected data
         * 
         * Will collect the data if none have been collected yet
         *
         * @return array 
         * @static 
         */
            public static function getData(){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::getData();
            }
        
            /**
         * Returns an array of HTTP headers containing the data
         *
         * @param string $headerName
         * @param integer $maxHeaderLength
         * @return array 
         * @static 
         */
            public static function getDataAsHeaders($headerName = 'phpdebugbar', $maxHeaderLength = 4096, $maxTotalHeaderLength = 250000){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::getDataAsHeaders($headerName, $maxHeaderLength, $maxTotalHeaderLength);
            }
        
            /**
         * Sends the data through the HTTP headers
         *
         * @param bool $useOpenHandler
         * @param string $headerName
         * @param integer $maxHeaderLength
         * @static 
         */
            public static function sendDataInHeaders($useOpenHandler = null, $headerName = 'phpdebugbar', $maxHeaderLength = 4096){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::sendDataInHeaders($useOpenHandler, $headerName, $maxHeaderLength);
            }
        
            /**
         * Stacks the data in the session for later rendering
         *
         * @static 
         */
            public static function stackData(){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::stackData();
            }
        
            /**
         * Checks if there is stacked data in the session
         *
         * @return boolean 
         * @static 
         */
            public static function hasStackedData(){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::hasStackedData();
            }
        
            /**
         * Returns the data stacked in the session
         *
         * @param boolean $delete Whether to delete the data in the session
         * @return array 
         * @static 
         */
            public static function getStackedData($delete = true){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::getStackedData($delete);
            }
        
            /**
         * Sets the key to use in the $_SESSION array
         *
         * @param string $ns
         * @static 
         */
            public static function setStackDataSessionNamespace($ns){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::setStackDataSessionNamespace($ns);
            }
        
            /**
         * Returns the key used in the $_SESSION array
         *
         * @return string 
         * @static 
         */
            public static function getStackDataSessionNamespace(){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::getStackDataSessionNamespace();
            }
        
            /**
         * Sets whether to only use the session to store stacked data even
         * if a storage is enabled
         *
         * @param boolean $enabled
         * @static 
         */
            public static function setStackAlwaysUseSessionStorage($enabled = true){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::setStackAlwaysUseSessionStorage($enabled);
            }
        
            /**
         * Checks if the session is always used to store stacked data
         * even if a storage is enabled
         *
         * @return boolean 
         * @static 
         */
            public static function isStackAlwaysUseSessionStorage(){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::isStackAlwaysUseSessionStorage();
            }
        
            /**
         * 
         *
         * @static 
         */
            public static function offsetSet($key, $value){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::offsetSet($key, $value);
            }
        
            /**
         * 
         *
         * @static 
         */
            public static function offsetGet($key){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::offsetGet($key);
            }
        
            /**
         * 
         *
         * @static 
         */
            public static function offsetExists($key){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::offsetExists($key);
            }
        
            /**
         * 
         *
         * @static 
         */
            public static function offsetUnset($key){
                //Method inherited from \DebugBar\DebugBar            
            return \Barryvdh\Debugbar\LaravelDebugbar::offsetUnset($key);
            }
        
        }

    
        class SoapWrapper extends \Artisaninweb\SoapWrapper\Facades\SoapWrapper{
        
            /**
         * Get all added services
         *
         * @return array 
         * @static 
         */
            public static function services(){
            return \Artisaninweb\SoapWrapper\Wrapper::services();
            }
        
            /**
         * Get a single service
         *
         * @param $name
         * @param $callback
         * @return mixed 
         * @throws \Exception
         * @static 
         */
            public static function service($name, $callback){
            return \Artisaninweb\SoapWrapper\Wrapper::service($name, $callback);
            }
        
            /**
         * Add a service to the wrapper
         *
         * @param $service
         * @return $this 
         * @throws \Exception
         * @static 
         */
            public static function add($service){
            return \Artisaninweb\SoapWrapper\Wrapper::add($service);
            }
        
            /**
         * Override a existing service in the wrapper
         * If service does not exists in the wrapper it will be added
         *
         * @param $service
         * @return $this 
         * @static 
         */
            public static function override($service){
            return \Artisaninweb\SoapWrapper\Wrapper::override($service);
            }
        
            /**
         * Remove a service from the wrapper
         *
         * @param $name
         * @return $this 
         * @static 
         */
            public static function remove($name){
            return \Artisaninweb\SoapWrapper\Wrapper::remove($name);
            }
        
        }

    
    }

]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391658" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="deadcode">
      <line>3</line>
      <resource><![CDATA[code/app/util/auth_driver.php]]></resource>
      <title>Unused use statement should be avoided</title>
      <message><![CDATA[The class Illuminate\Auth\GenericUser is declared but never used. You should remove the use statement.]]></message>
      <context start-line="1" end-line="8"><![CDATA[<?php namespace App\Util;

use Illuminate\Auth\GenericUser;
use Illuminate\Auth\UserInterface;
use Illuminate\Auth\UserProviderInterface;

class DummyAuthProvider implements UserProviderInterface
{]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391683" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="bugrisk">
      <line>12</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>exit() and die() functions should be avoided</title>
      <message><![CDATA[This line stops the execution flow, without explanation. If this is for debug, you should remove it. If this is to deal with an error, use exceptions instead.]]></message>
      <context start-line="7" end-line="17"><![CDATA[<barryvdh@gmail.com>
* @see https://github.com/barryvdh/laravel-ide-helper
*/

    namespace {
            exit("This file should not be included, only analyzed by your IDE");
        

    use Illuminate\Support\Arr;
    use Illuminate\Support\Str;
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391310" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="bugrisk">
      <line>499</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>exit() and die() functions should be avoided</title>
      <message><![CDATA[This line stops the execution flow, without explanation. If this is for debug, you should remove it. If this is to deal with an error, use exceptions instead.]]></message>
      <context start-line="494" end-line="504"><![CDATA[        function dd()
        {
            array_map(function ($x) {
                var_dump($x);
            }, func_get_args());
            die;
        }
    }

    if (!function_exists('e')) {
        /**]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391370" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>136</line>
      <resource><![CDATA[code/app/util/macros.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[attributes() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="131" end-line="141"><![CDATA[        if (!isset($options['id'])) $options['id'] = $name;

        return sprintf($output, $class, Form::checkbox($name, 1, $check, $options), Form::label($name, $title, $options));
    });

    function attributes($attributes)
    {
        $html = array();

        // For numeric keys we will assume that the key and the value are the same
        // as this will convert HTML attributes such as "required" to a correct]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391615" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>152</line>
      <resource><![CDATA[code/app/util/macros.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[attributeElement() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="147" end-line="157"><![CDATA[        }

        return count($html) > 0 ? ' ' . implode(' ', $html) : '';
    }

    function attributeElement($key, $value)
    {
        if (is_numeric($key)) $key = $value;

        if (!is_null($value)) return $key . '="' . e($value) . '"';
    }]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391175" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>27</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[action() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="22" end-line="32"><![CDATA[         * @param  string $name
         * @param  array  $parameters
         *
         * @return string
         */
        function action($name, $parameters = array())
        {
            return app('url')->action($name, $parameters);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391684" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>41</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[app() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="36" end-line="46"><![CDATA[         *
         * @param  string $make
         *
         * @return mixed
         */
        function app($make = null)
        {
            if (!is_null($make)) {
                return app()->make($make);
            }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391666" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>59</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[app_path() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="54" end-line="64"><![CDATA[         *
         * @param  string $path
         *
         * @return string
         */
        function app_path($path = '')
        {
            return app('path') . ($path ? '/' . $path : $path);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391932" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>73</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[append_config() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="68" end-line="78"><![CDATA[         *
         * @param  array $array
         *
         * @return array
         */
        function append_config(array $array)
        {
            $start = 9999;

            foreach ($array as $key => $value) {
                if (is_numeric($key)) {]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391277" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>99</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_add() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="94" end-line="104"><![CDATA[         * @param  string $key
         * @param  mixed  $value
         *
         * @return array
         */
        function array_add($array, $key, $value)
        {
            return Arr::add($array, $key, $value);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391645" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>114</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_build() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="109" end-line="119"><![CDATA[         * @param  array    $array
         * @param  \Closure $callback
         *
         * @return array
         */
        function array_build($array, Closure $callback)
        {
            return Arr::build($array, $callback);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391703" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>128</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_divide() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="123" end-line="133"><![CDATA[         *
         * @param  array $array
         *
         * @return array
         */
        function array_divide($array)
        {
            return Arr::divide($array);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391728" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>143</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_dot() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="138" end-line="148"><![CDATA[         * @param  array  $array
         * @param  string $prepend
         *
         * @return array
         */
        function array_dot($array, $prepend = '')
        {
            return Arr::dot($array, $prepend);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189392012" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>158</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_except() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="153" end-line="163"><![CDATA[         * @param  array        $array
         * @param  array|string $keys
         *
         * @return array
         */
        function array_except($array, $keys)
        {
            return Arr::except($array, $keys);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391209" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>173</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_fetch() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="168" end-line="178"><![CDATA[         * @param  array  $array
         * @param  string $key
         *
         * @return array
         */
        function array_fetch($array, $key)
        {
            return Arr::fetch($array, $key);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391204" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>189</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_first() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="184" end-line="194"><![CDATA[         * @param  \Closure $callback
         * @param  mixed    $default
         *
         * @return mixed
         */
        function array_first($array, $callback, $default = null)
        {
            return Arr::first($array, $callback, $default);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391519" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>205</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_last() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="200" end-line="210"><![CDATA[         * @param  \Closure $callback
         * @param  mixed    $default
         *
         * @return mixed
         */
        function array_last($array, $callback, $default = null)
        {
            return Arr::last($array, $callback, $default);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391309" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>219</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_flatten() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="214" end-line="224"><![CDATA[         *
         * @param  array $array
         *
         * @return array
         */
        function array_flatten($array)
        {
            return Arr::flatten($array);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391962" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>234</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_forget() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="229" end-line="239"><![CDATA[         * @param  array        $array
         * @param  array|string $keys
         *
         * @return void
         */
        function array_forget(&$array, $keys)
        {
            return Arr::forget($array, $keys);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391311" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>250</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_get() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="245" end-line="255"><![CDATA[         * @param  string $key
         * @param  mixed  $default
         *
         * @return mixed
         */
        function array_get($array, $key, $default = null)
        {
            return Arr::get($array, $key, $default);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391406" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>265</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_only() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="260" end-line="270"><![CDATA[         * @param  array        $array
         * @param  array|string $keys
         *
         * @return array
         */
        function array_only($array, $keys)
        {
            return Arr::only($array, $keys);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391899" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>281</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_pluck() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="276" end-line="286"><![CDATA[         * @param  string $value
         * @param  string $key
         *
         * @return array
         */
        function array_pluck($array, $value, $key = null)
        {
            return Arr::pluck($array, $value, $key);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391633" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>297</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_pull() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="292" end-line="302"><![CDATA[         * @param  string $key
         * @param  mixed  $default
         *
         * @return mixed
         */
        function array_pull(&$array, $key, $default = null)
        {
            return Arr::pull($array, $key, $default);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391644" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>315</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_set() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="310" end-line="320"><![CDATA[         * @param  string $key
         * @param  mixed  $value
         *
         * @return array
         */
        function array_set(&$array, $key, $value)
        {
            return Arr::set($array, $key, $value);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189392018" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>330</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_sort() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="325" end-line="335"><![CDATA[         * @param  array    $array
         * @param  \Closure $callback
         *
         * @return array
         */
        function array_sort($array, Closure $callback)
        {
            return Arr::sort($array, $callback);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391864" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>345</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[array_where() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="340" end-line="350"><![CDATA[         * @param  array    $array
         * @param  \Closure $callback
         *
         * @return array
         */
        function array_where($array, Closure $callback)
        {
            return Arr::where($array, $callback);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391362" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>360</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[asset() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="355" end-line="365"><![CDATA[         * @param  string $path
         * @param  bool   $secure
         *
         * @return string
         */
        function asset($path, $secure = null)
        {
            return app('url')->asset($path, $secure);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391338" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>374</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[base_path() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="369" end-line="379"><![CDATA[         *
         * @param  string $path
         *
         * @return string
         */
        function base_path($path = '')
        {
            return app()->make('path.base') . ($path ? '/' . $path : $path);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391660" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>388</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[camel_case() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="383" end-line="393"><![CDATA[         *
         * @param  string $value
         *
         * @return string
         */
        function camel_case($value)
        {
            return Str::camel($value);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391946" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>402</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[class_basename() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="397" end-line="407"><![CDATA[         *
         * @param  string|object $class
         *
         * @return string
         */
        function class_basename($class)
        {
            $class = is_object($class) ? get_class($class) : $class;

            return basename(str_replace('\\', '/', $class));
        }]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391889" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>418</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[class_uses_recursive() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="413" end-line="423"><![CDATA[         *
         * @param  string $class
         *
         * @return array
         */
        function class_uses_recursive($class)
        {
            $results = [];

            foreach (array_merge([$class => $class], class_parents($class)) as $class) {
                $results += trait_uses_recursive($class);]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391623" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>438</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[csrf_token() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="433" end-line="443"><![CDATA[         *
         * @return string
         *
         * @throws RuntimeException
         */
        function csrf_token()
        {
            $session = app('session');

            if (isset($session)) {
                return $session->getToken();]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391860" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>460</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[data_get() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="455" end-line="465"><![CDATA[         * @param  string $key
         * @param  mixed  $default
         *
         * @return mixed
         */
        function data_get($target, $key, $default = null)
        {
            if (is_null($key)) return $target;

            foreach (explode('.', $key) as $segment) {
                if (is_array($target)) {]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391673" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>494</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[dd() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="489" end-line="499"><![CDATA[         *
         * @param  mixed
         *
         * @return void
         */
        function dd()
        {
            array_map(function ($x) {
                var_dump($x);
            }, func_get_args());
            die;]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391909" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>511</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[e() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="506" end-line="516"><![CDATA[         *
         * @param  string $value
         *
         * @return string
         */
        function e($value)
        {
            return htmlentities($value, ENT_QUOTES, 'UTF-8', false);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391286" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>526</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[ends_with() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="521" end-line="531"><![CDATA[         * @param  string       $haystack
         * @param  string|array $needles
         *
         * @return bool
         */
        function ends_with($haystack, $needles)
        {
            return Str::endsWith($haystack, $needles);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391484" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>540</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[head() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="535" end-line="545"><![CDATA[         *
         * @param  array $array
         *
         * @return mixed
         */
        function head($array)
        {
            return reset($array);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391649" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>557</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[link_to() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="552" end-line="562"><![CDATA[         * @param  array  $attributes
         * @param  bool   $secure
         *
         * @return string
         */
        function link_to($url, $title = null, $attributes = array(), $secure = null)
        {
            return app('html')->link($url, $title, $attributes, $secure);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391292" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>571</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[last() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="566" end-line="576"><![CDATA[         *
         * @param  array $array
         *
         * @return mixed
         */
        function last($array)
        {
            return end($array);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189392109" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>588</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[link_to_asset() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="583" end-line="593"><![CDATA[         * @param  array  $attributes
         * @param  bool   $secure
         *
         * @return string
         */
        function link_to_asset($url, $title = null, $attributes = array(), $secure = null)
        {
            return app('html')->linkAsset($url, $title, $attributes, $secure);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391532" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>605</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[link_to_route() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="600" end-line="610"><![CDATA[         * @param  array  $parameters
         * @param  array  $attributes
         *
         * @return string
         */
        function link_to_route($name, $title = null, $parameters = array(), $attributes = array())
        {
            return app('html')->linkRoute($name, $title, $parameters, $attributes);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391452" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>622</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[link_to_action() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="617" end-line="627"><![CDATA[         * @param  array  $parameters
         * @param  array  $attributes
         *
         * @return string
         */
        function link_to_action($action, $title = null, $parameters = array(), $attributes = array())
        {
            return app('html')->linkAction($action, $title, $parameters, $attributes);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391261" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>638</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[object_get() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="633" end-line="643"><![CDATA[         * @param  string $key
         * @param  mixed  $default
         *
         * @return mixed
         */
        function object_get($object, $key, $default = null)
        {
            if (is_null($key) || trim($key) == '') return $object;

            foreach (explode('.', $key) as $segment) {
                if (!is_object($object) || !isset($object->{$segment})) {]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391796" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>664</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[preg_replace_sub() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="659" end-line="669"><![CDATA[         * @param  array  $replacements
         * @param  string $subject
         *
         * @return string
         */
        function preg_replace_sub($pattern, &$replacements, $subject)
        {
            return preg_replace_callback($pattern, function ($match) use (&$replacements) {
                return array_shift($replacements);

            }, $subject);]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391415" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>681</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[public_path() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="676" end-line="686"><![CDATA[         *
         * @param  string $path
         *
         * @return string
         */
        function public_path($path = '')
        {
            return app()->make('path.public') . ($path ? '/' . $path : $path);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391328" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>698</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[route() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="693" end-line="703"><![CDATA[         * @param  bool                      $absolute
         * @param  \Illuminate\Routing\Route $route
         *
         * @return string
         */
        function route($name, $parameters = array(), $absolute = true, $route = null)
        {
            return app('url')->route($name, $parameters, $absolute, $route);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189392008" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>712</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[secure_asset() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="707" end-line="717"><![CDATA[         *
         * @param  string $path
         *
         * @return string
         */
        function secure_asset($path)
        {
            return asset($path, true);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391805" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>727</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[secure_url() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="722" end-line="732"><![CDATA[         * @param  string $path
         * @param  mixed  $parameters
         *
         * @return string
         */
        function secure_url($path, $parameters = array())
        {
            return url($path, $parameters, true);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391540" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>742</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[snake_case() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="737" end-line="747"><![CDATA[         * @param  string $value
         * @param  string $delimiter
         *
         * @return string
         */
        function snake_case($value, $delimiter = '_')
        {
            return Str::snake($value, $delimiter);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391879" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>757</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[starts_with() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="752" end-line="762"><![CDATA[         * @param  string       $haystack
         * @param  string|array $needles
         *
         * @return bool
         */
        function starts_with($haystack, $needles)
        {
            return Str::startsWith($haystack, $needles);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391388" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>771</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[storage_path() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="766" end-line="776"><![CDATA[         *
         * @param   string $path
         *
         * @return  string
         */
        function storage_path($path = '')
        {
            return app('path.storage') . ($path ? '/' . $path : $path);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391255" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>786</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[str_contains() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="781" end-line="791"><![CDATA[         * @param  string       $haystack
         * @param  string|array $needles
         *
         * @return bool
         */
        function str_contains($haystack, $needles)
        {
            return Str::contains($haystack, $needles);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391381" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>801</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[str_finish() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="796" end-line="806"><![CDATA[         * @param  string $value
         * @param  string $cap
         *
         * @return string
         */
        function str_finish($value, $cap)
        {
            return Str::finish($value, $cap);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391665" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>816</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[str_is() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="811" end-line="821"><![CDATA[         * @param  string $pattern
         * @param  string $value
         *
         * @return bool
         */
        function str_is($pattern, $value)
        {
            return Str::is($pattern, $value);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391235" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>832</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[str_limit() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="827" end-line="837"><![CDATA[         * @param  int    $limit
         * @param  string $end
         *
         * @return string
         */
        function str_limit($value, $limit = 100, $end = '...')
        {
            return Str::limit($value, $limit, $end);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391437" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>847</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[str_plural() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="842" end-line="852"><![CDATA[         * @param  string $value
         * @param  int    $count
         *
         * @return string
         */
        function str_plural($value, $count = 2)
        {
            return Str::plural($value, $count);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391935" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>863</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[str_random() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="858" end-line="868"><![CDATA[         *
         * @return string
         *
         * @throws \RuntimeException
         */
        function str_random($length = 16)
        {
            return Str::random($length);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189392073" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>879</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[str_replace_array() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="874" end-line="884"><![CDATA[         * @param  array  $replace
         * @param  string $subject
         *
         * @return string
         */
        function str_replace_array($search, array $replace, $subject)
        {
            foreach ($replace as $value) {
                $subject = preg_replace('/' . $search . '/', $value, $subject, 1);
            }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391990" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>897</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[str_singular() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="892" end-line="902"><![CDATA[         *
         * @param  string $value
         *
         * @return string
         */
        function str_singular($value)
        {
            return Str::singular($value);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391184" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>911</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[studly_case() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="906" end-line="916"><![CDATA[         *
         * @param  string $value
         *
         * @return string
         */
        function studly_case($value)
        {
            return Str::studly($value);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391650" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>925</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[trait_uses_recursive() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="920" end-line="930"><![CDATA[         *
         * @param  string $trait
         *
         * @return array
         */
        function trait_uses_recursive($trait)
        {
            $traits = class_uses($trait);

            foreach ($traits as $trait) {
                $traits += trait_uses_recursive($trait);]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189392123" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>948</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[trans() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="943" end-line="953"><![CDATA[         * @param  string $domain
         * @param  string $locale
         *
         * @return string
         */
        function trans($id, $parameters = array(), $domain = 'messages', $locale = null)
        {
            return app('translator')->trans($id, $parameters, $domain, $locale);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391752" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>966</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[trans_choice() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="961" end-line="971"><![CDATA[         * @param  string $domain
         * @param  string $locale
         *
         * @return string
         */
        function trans_choice($id, $number, array $parameters = array(), $domain = 'messages', $locale = null)
        {
            return app('translator')->transChoice($id, $number, $parameters, $domain, $locale);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391951" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>982</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[url() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="977" end-line="987"><![CDATA[         * @param  mixed  $parameters
         * @param  bool   $secure
         *
         * @return string
         */
        function url($path = null, $parameters = array(), $secure = null)
        {
            return app('url')->to($path, $parameters, $secure);
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391785" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>996</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[value() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="991" end-line="1001"><![CDATA[         *
         * @param  mixed $value
         *
         * @return mixed
         */
        function value($value)
        {
            return $value instanceof Closure ? $value() : $value;
        }
    }
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189391702" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="architecture">
      <line>1010</line>
      <resource><![CDATA[code/_ide_helper.php]]></resource>
      <title>Global variable or function should never be used</title>
      <message><![CDATA[with() adds to the global scope. Prefer class properties or methods to let other developers know what this relates to.]]></message>
      <context start-line="1005" end-line="1015"><![CDATA[         *
         * @param  mixed $object
         *
         * @return mixed
         */
        function with($object)
        {
            return $object;
        }
    }
        ]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=new#189392100" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>20599</line>
      <resource><![CDATA[code/.idea/sensiolabsinsight-violations.xml]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="20594" end-line="20604"><![CDATA[      <context start-line="485" end-line="495"><![CDATA[.fc-agenda-allday th {
    border-width: 0 1px;
}

.fc-agenda-allday .fc-day-content {
    min-height: 34px; /* TODO: doesnt work well in quirksmode */
    _height: 34px;
}

/* divider (between all-day and slots) */
]]]]><![CDATA[></context>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391212" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>20617</line>
      <resource><![CDATA[code/.idea/sensiolabsinsight-violations.xml]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="20612" end-line="20622"><![CDATA[      <context start-line="571" end-line="581"><![CDATA[    background: #fff;
    opacity: .25;
    filter: alpha(opacity=25);
}

.fc .ui-draggable-dragging .fc-event-bg, /* TODO: something nicer like .fc-opacity */
.fc-select-helper .fc-event-bg {
    display: none \9; /* for IE6/7/8. nested opacity filters while dragging don't work */
}

/* resizable */]]]]><![CDATA[></context>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391819" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>20635</line>
      <resource><![CDATA[code/.idea/sensiolabsinsight-violations.xml]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="20630" end-line="20640"><![CDATA[      <context start-line="591" end-line="601"><![CDATA[    text-align: center;
    cursor: s-resize;
}

.fc-agenda .ui-resizable-resizing {
    /* TODO: better selector */
    _overflow: hidden;
}
	
	
]]]]><![CDATA[></context>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391906" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>20653</line>
      <resource><![CDATA[code/.idea/sensiolabsinsight-violations.xml]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="20648" end-line="20658"><![CDATA[      <context start-line="485" end-line="495"><![CDATA[.fc-agenda-allday th {
    border-width: 0 1px;
}

.fc-agenda-allday .fc-day-content {
    min-height: 34px; /* TODO: doesnt work well in quirksmode */
    _height: 34px;
}

/* divider (between all-day and slots) */
]]]]><![CDATA[></context>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391442" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>20671</line>
      <resource><![CDATA[code/.idea/sensiolabsinsight-violations.xml]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="20666" end-line="20676"><![CDATA[      <context start-line="571" end-line="581"><![CDATA[    background: #fff;
    opacity: .25;
    filter: alpha(opacity=25);
}

.fc .ui-draggable-dragging .fc-event-bg, /* TODO: something nicer like .fc-opacity */
.fc-select-helper .fc-event-bg {
    display: none \9; /* for IE6/7/8. nested opacity filters while dragging don't work */
}

/* resizable */]]]]><![CDATA[></context>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391793" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>20689</line>
      <resource><![CDATA[code/.idea/sensiolabsinsight-violations.xml]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="20684" end-line="20694"><![CDATA[      <context start-line="591" end-line="601"><![CDATA[    text-align: center;
    cursor: s-resize;
}

.fc-agenda .ui-resizable-resizing {
    /* TODO: better selector */
    _overflow: hidden;
}
	
	
]]]]><![CDATA[></context>]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391514" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>490</line>
      <resource><![CDATA[code/public/css/fullcalendar.css]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="485" end-line="495"><![CDATA[.fc-agenda-allday th {
    border-width: 0 1px;
}

.fc-agenda-allday .fc-day-content {
    min-height: 34px; /* TODO: doesnt work well in quirksmode */
    _height: 34px;
}

/* divider (between all-day and slots) */
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391681" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>576</line>
      <resource><![CDATA[code/public/css/fullcalendar.css]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="571" end-line="581"><![CDATA[    background: #fff;
    opacity: .25;
    filter: alpha(opacity=25);
}

.fc .ui-draggable-dragging .fc-event-bg, /* TODO: something nicer like .fc-opacity */
.fc-select-helper .fc-event-bg {
    display: none \9; /* for IE6/7/8. nested opacity filters while dragging don't work */
}

/* resizable */]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391986" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>596</line>
      <resource><![CDATA[code/public/css/fullcalendar.css]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="591" end-line="601"><![CDATA[    text-align: center;
    cursor: s-resize;
}

.fc-agenda .ui-resizable-resizing {
    /* TODO: better selector */
    _overflow: hidden;
}
	
	
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391182" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>149</line>
      <resource><![CDATA[code/public/css/sidebar.css]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="144" end-line="154"><![CDATA[    -ms-transform: translate(0, 0);
    -o-transform: translate(0, 0);
    transform: translate(0, 0);
}

/* TODO: TEST THIS! Right panel positioning classes*/
.sidebar.sidebar-right {
    -webkit-transform: translate(-100%, 0);
    -moz-transform: translate(-100%, 0);
    -ms-transform: translate(-100%, 0);
    -o-transform: translate(-100%, 0);]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391262" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>490</line>
      <resource><![CDATA[code/template-bracket/css/fullcalendar.css]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="485" end-line="495"><![CDATA[.fc-agenda-allday th {
    border-width: 0 1px;
}

.fc-agenda-allday .fc-day-content {
    min-height: 34px; /* TODO: doesnt work well in quirksmode */
    _height: 34px;
}

/* divider (between all-day and slots) */
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189392122" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>576</line>
      <resource><![CDATA[code/template-bracket/css/fullcalendar.css]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="571" end-line="581"><![CDATA[    background: #fff;
    opacity: .25;
    filter: alpha(opacity=25);
}

.fc .ui-draggable-dragging .fc-event-bg, /* TODO: something nicer like .fc-opacity */
.fc-select-helper .fc-event-bg {
    display: none \9; /* for IE6/7/8. nested opacity filters while dragging don't work */
}

/* resizable */]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391910" rel="self" type="text/html"/>
    </violation>
    <violation severity="minor" category="architecture">
      <line>596</line>
      <resource><![CDATA[code/template-bracket/css/fullcalendar.css]]></resource>
      <title>Source code should not contain TODO comments</title>
      <message><![CDATA[TODO comments are left in the code when a feature (or a bug) isn't completely developed (or fixed). You should complete the implementation and remove the comment.]]></message>
      <context start-line="591" end-line="601"><![CDATA[    text-align: center;
    cursor: s-resize;
}

.fc-agenda .ui-resizable-resizing {
    /* TODO: better selector */
    _overflow: hidden;
}
	
	
]]></context>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391853" rel="self" type="text/html"/>
    </violation>
    <violation severity="info" category="performance">
      <line>0</line>
      <resource><![CDATA[code/public/.htaccess]]></resource>
      <title>.htaccess should be avoided</title>
      <message><![CDATA[A .htaccess file has been spotted. You should consider moving it to the server configuration to improve global performances.]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391987" rel="self" type="text/html"/>
    </violation>
    <violation severity="major" category="performance">
      <line>0</line>
      <resource><![CDATA[./]]></resource>
      <title>Web applications should contain a favicon</title>
      <message><![CDATA[No favicon found in the web root directory]]></message>
      <context/>
      <link href="https://insight.sensiolabs.com/projects/34933eab-378d-4c77-9444-5130b1dd04ae/analyses/3?status=existing#189391520" rel="self" type="text/html"/>
    </violation>
  </violations>
  <grades>
    <entry><![CDATA[none]]></entry>
    <entry><![CDATA[bronze]]></entry>
    <entry><![CDATA[silver]]></entry>
    <entry><![CDATA[gold]]></entry>
    <entry><![CDATA[platinum]]></entry>
  </grades>
  <failed>false</failed>
  <grade><![CDATA[none]]></grade>
  <next-grade><![CDATA[bronze]]></next-grade>
  <begin-at><![CDATA[2014-11-06T22:32:39+0100]]></begin-at>
  <end-at><![CDATA[2014-11-06T22:34:28+0100]]></end-at>
  <duration>63</duration>
  <number>3</number>
  <altered>false</altered>
  <remediation-cost>1530.75</remediation-cost>
  <nb-violations>987</nb-violations>
  <reference><![CDATA[534b6666382f91a076f73d010061c897f31c2376]]></reference>
  <configuration>
    <ignored-branches>
      <branch><![CDATA[gh-pages]]></branch>
    </ignored-branches>
    <pre-composer-script/>
    <post-composer-script/>
    <php-ini/>
    <global-excluded-dirs>
      <dir><![CDATA[vendor]]></dir>
      <dir><![CDATA[vendors]]></dir>
      <dir><![CDATA[test]]></dir>
      <dir><![CDATA[tests]]></dir>
      <dir><![CDATA[Tests]]></dir>
      <dir><![CDATA[spec]]></dir>
      <dir><![CDATA[features]]></dir>
      <dir><![CDATA[Fixtures]]></dir>
      <dir><![CDATA[DataFixtures]]></dir>
      <dir><![CDATA[var]]></dir>
    </global-excluded-dirs>
    <excluded-patterns>
      <pattern><![CDATA[app/check.php]]></pattern>
      <pattern><![CDATA[app/SymfonyRequirements.php]]></pattern>
      <pattern><![CDATA[web/config.php]]></pattern>
      <pattern><![CDATA[web/app_*.php]]></pattern>
    </excluded-patterns>
    <patterns>
      <file>
        <pattern><![CDATA[*.php]]></pattern>
        <pattern><![CDATA[*.twig]]></pattern>
        <pattern><![CDATA[*.xml]]></pattern>
        <pattern><![CDATA[*.yml]]></pattern>
        <pattern><![CDATA[*.yaml]]></pattern>
        <pattern><![CDATA[*.ini]]></pattern>
        <pattern><![CDATA[*.dist]]></pattern>
        <pattern><![CDATA[*.sql]]></pattern>
        <pattern><![CDATA[composer.*]]></pattern>
        <pattern><![CDATA[.gitignore]]></pattern>
        <pattern><![CDATA[license]]></pattern>
        <pattern><![CDATA[LICENSE]]></pattern>
        <pattern><![CDATA[readme]]></pattern>
        <pattern><![CDATA[README]]></pattern>
        <pattern><![CDATA[makefile]]></pattern>
        <pattern><![CDATA[Makefile]]></pattern>
        <pattern><![CDATA[.htaccess]]></pattern>
      </file>
      <php>
        <pattern><![CDATA[*.php]]></pattern>
      </php>
      <twig>
        <pattern><![CDATA[*.twig]]></pattern>
      </twig>
    </patterns>
    <rules/>
    <parameters>
      <parameter name="project_type">8</parameter>
    </parameters>
  </configuration>
  <previous-analyses-references>
    <analysis-reference number="3">534b6666382f91a076f73d010061c897f31c2376</analysis-reference>
    <analysis-reference number="2">47de7b16936de0bb2dd963e51c491b85ce51a0a4</analysis-reference>
    <analysis-reference number="1">5f2a5dde25cf23ee1fa50efeb3df2793b164cf21</analysis-reference>
  </previous-analyses-references>
  <nb-violations-new>77</nb-violations-new>
  <nb-violations-existing>910</nb-violations-existing>
  <nb-violations-fixed>78</nb-violations-fixed>
  <nb-violations-ignored>0</nb-violations-ignored>
</analysis>
